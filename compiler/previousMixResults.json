{
    "biometric": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t5360.06400\nInput vars:\t{C!0: ['B'], S!0: ['B']}\nConstants:\t{10000: ['B'], 0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_sum!1 = 10000: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): B -> {} for 386.68800 * 1 = 386.69\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): B -> {} for 2718.97600 * 1 = 2718.98\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): B -> {} for 381.60000 * 4 = 1526.40\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): B -> {} for 178.00000 * 4 = 712.00\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): B -> {} for 2.00000 * 4 = 8.00\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): B -> {} for 2.00000 * 4 = 8.00\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['B'], !10!0: ['B']}\n",
                "Y": "Total cost:\t8641.92000\nInput vars:\t{C!0: ['Y'], S!0: ['Y']}\nConstants:\t{10000: ['Y'], 0: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_sum!1 = 10000: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): Y -> {} for 188.48000 * 1 = 188.48\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): Y -> {} for 6037.44000 * 1 = 6037.44\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): Y -> {} for 186.00000 * 4 = 744.00\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): Y -> {} for 160.00000 * 4 = 640.00\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): Y -> {} for 129.00000 * 4 = 516.00\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): Y -> {} for 129.00000 * 4 = 516.00\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['Y'], !10!0: ['Y']}\n",
                "mixed": "Total cost:\t668.03200\nInput vars:\t{C!0: ['A'], S!0: ['A']}\nConstants:\t{10000: ['Y'], 0: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_sum!1 = 10000: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): A -> {} for 2.43200 * 1 = 2.43\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): Y -> ['A'] for 1.20000 * 4 = 4.80 (Y->A)\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): A -> ['Y'] for 1.20000 * 4 = 4.80 (A->Y)\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['A', 'B', 'Y'] for 0.00000 * 1 = 0.00 (Y->B)\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): Y -> ['B'] for 0.00000 * 4 = 0.00 (Y->B)\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): Y -> ['B'] for 160.00000 * 4 = 640.00 (Y->B)\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): B -> ['Y'] for 2.00000 * 4 = 8.00 (B->Y)\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): B -> {} for 2.00000 * 4 = 8.00\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['B'], !10!0: ['B', 'Y']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.62784\nInput vars:\t{C!0: ['B'], S!0: ['B']}\nConstants:\t{10000: ['B'], 0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_sum!1 = 10000: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): B -> {} for 0.05861 * 1 = 0.06\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): B -> {} for 0.41201 * 1 = 0.41\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): B -> {} for 0.02878 * 4 = 0.12\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): B -> {} for 0.01021 * 4 = 0.04\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): B -> {} for 0.00016 * 4 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): B -> {} for 0.00016 * 4 = 0.00\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['B'], !10!0: ['B']}\n",
                "Y": "Total cost:\t4.38198\nInput vars:\t{C!0: ['Y'], S!0: ['Y']}\nConstants:\t{10000: ['Y'], 0: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_sum!1 = 10000: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): Y -> {} for 0.12293 * 1 = 0.12\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): Y -> {} for 3.93779 * 1 = 3.94\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): Y -> {} for 0.03758 * 4 = 0.15\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): Y -> {} for 0.01526 * 4 = 0.06\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): Y -> {} for 0.01374 * 4 = 0.05\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): Y -> {} for 0.01374 * 4 = 0.05\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['Y'], !10!0: ['Y']}\n",
                "mixed": "Total cost:\t0.09386\nInput vars:\t{C!0: ['A'], S!0: ['A']}\nConstants:\t{10000: ['B'], 0: ['A', 'B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_sum!1 = 10000: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): A -> {} for 0.01008 * 1 = 0.01\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): A -> {} for 0.00000 * 4 = 0.00\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['A', 'B'] for 0.04168 * 1 = 0.04 (A->B)\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): B -> {} for 0.01021 * 4 = 0.04\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): B -> {} for 0.00016 * 4 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): B -> {} for 0.00016 * 4 = 0.00\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['B'], !10!0: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t1.34884\nInput vars:\t{C!0: ['B'], S!0: ['B']}\nConstants:\t{10000: ['B'], 0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_sum!1 = 10000: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): B -> {} for 0.05019 * 1 = 0.05\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): B -> {} for 0.29896 * 1 = 0.30\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): B -> {} for 0.04281 * 4 = 0.17\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): B -> {} for 0.13574 * 4 = 0.54\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): B -> {} for 0.03568 * 4 = 0.14\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): B -> {} for 0.03568 * 4 = 0.14\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['B'], !10!0: ['B']}\n",
                "Y": "Total cost:\t1.19308\nInput vars:\t{C!0: ['Y'], S!0: ['Y']}\nConstants:\t{10000: ['Y'], 0: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_sum!1 = 10000: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): Y -> {} for 0.03994 * 1 = 0.04\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): Y -> {} for 0.86225 * 1 = 0.86\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): Y -> {} for 0.03098 * 4 = 0.12\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): Y -> {} for 0.02979 * 4 = 0.12\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): Y -> {} for 0.00597 * 4 = 0.02\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): Y -> {} for 0.00597 * 4 = 0.02\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['Y'], !10!0: ['Y']}\n",
                "mixed": "Total cost:\t0.20493\nInput vars:\t{C!0: ['A'], S!0: ['A']}\nConstants:\t{10000: ['Y'], 0: ['A', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_sum!1 = 10000: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): A -> {} for 0.00028 * 1 = 0.00\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): A -> {} for 0.00716 * 1 = 0.01\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): A -> {} for 0.00000 * 4 = 0.00\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['A', 'Y'] for 0.03052 * 1 = 0.03 (A->Y)\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): Y -> {} for 0.02979 * 4 = 0.12\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): Y -> {} for 0.00597 * 4 = 0.02\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): Y -> {} for 0.00597 * 4 = 0.02\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['Y'], !10!0: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t8.00000\nInput vars:\t{C!0: ['A'], S!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_sum!1 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): A -> {} for 0.00000 * 4 = 0.00\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): A -> {} for 2.00000 * 4 = 8.00\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['A'], !10!0: ['A']}\n",
                "B": "Total cost:\t1.72800\nInput vars:\t{C!0: ['B'], S!0: ['B']}\nConstants:\t{10000: ['B'], 0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_sum!1 = 10000: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): B -> {} for 0.25600 * 1 = 0.26\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): B -> {} for 1.47200 * 1 = 1.47\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): B -> {} for 0.00000 * 4 = 0.00\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): B -> {} for 0.00000 * 4 = 0.00\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['B'], !10!0: ['B']}\n",
                "X": "Total cost:\t4.00000\nInput vars:\t{C!0: ['A'], S!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmin_sum!1 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): A -> {} for 0.00000 * 4 = 0.00\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): A -> {} for 1.00000 * 4 = 4.00\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['A'], !10!0: ['A']}\n",
                "Y": "Total cost:\t0.00000\nInput vars:\t{C!0: ['A'], S!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nmin_sum!1 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): A -> {} for 0.00000 * 4 = 0.00\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['A'], !10!0: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{C!0: ['A'], S!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nmin_sum!1 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): A -> {} for 0.00000 * 4 = 0.00\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['A'], !10!0: ['A']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t1.57597\nInput vars:\t{C!0: ['A'], S!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_sum!1 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): A -> {} for 0.04966 * 1 = 0.05\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): A -> {} for 0.00000 * 4 = 0.00\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): A -> {} for 0.37537 * 4 = 1.50\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): A -> {} for 0.00310 * 4 = 0.01\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): A -> {} for 0.00310 * 4 = 0.01\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['A'], !10!0: ['A']}\n",
                "B": "Total cost:\t0.15878\nInput vars:\t{C!0: ['B'], S!0: ['B']}\nConstants:\t{10000: ['B'], 0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_sum!1 = 10000: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): B -> {} for 0.03723 * 1 = 0.04\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): B -> {} for 0.10599 * 1 = 0.11\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): B -> {} for 0.00333 * 4 = 0.01\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): B -> {} for 0.00056 * 4 = 0.00\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): B -> {} for 0.00000 * 4 = 0.00\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['B'], !10!0: ['B']}\n",
                "X": "Total cost:\t0.08600\nInput vars:\t{C!0: ['A'], S!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmin_sum!1 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): A -> {} for 0.04966 * 1 = 0.05\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): A -> {} for 0.00000 * 4 = 0.00\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): A -> {} for 0.00288 * 4 = 0.01\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): A -> {} for 0.00310 * 4 = 0.01\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): A -> {} for 0.00310 * 4 = 0.01\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['A'], !10!0: ['A']}\n",
                "Y": "Total cost:\t0.07865\nInput vars:\t{C!0: ['A'], S!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nmin_sum!1 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): A -> {} for 0.04966 * 1 = 0.05\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): A -> {} for 0.00000 * 4 = 0.00\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): A -> {} for 0.00104 * 4 = 0.00\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): A -> {} for 0.00310 * 4 = 0.01\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): A -> {} for 0.00310 * 4 = 0.01\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['A'], !10!0: ['A']}\n",
                "mixed": "Total cost:\t0.05689\nInput vars:\t{C!0: ['A'], S!0: ['A']}\nConstants:\t{10000: ['B'], 0: ['A', 'B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_sum!1 = 10000: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): A -> {} for 0.04966 * 1 = 0.05\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): A -> {} for 0.00000 * 4 = 0.00\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['A', 'B'] for 0.00498 * 1 = 0.00 (A->B)\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): B -> {} for 0.00056 * 4 = 0.00\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): B -> {} for 0.00000 * 4 = 0.00\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['B'], !10!0: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t0.01928\nInput vars:\t{C!0: ['A'], S!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_sum!1 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): A -> {} for 0.00072 * 1 = 0.00\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): A -> {} for 0.00000 * 4 = 0.00\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): A -> {} for 0.00454 * 4 = 0.02\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): A -> {} for 0.00005 * 4 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): A -> {} for 0.00005 * 4 = 0.00\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['A'], !10!0: ['A']}\n",
                "B": "Total cost:\t0.00295\nInput vars:\t{C!0: ['B'], S!0: ['B']}\nConstants:\t{10000: ['B'], 0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_sum!1 = 10000: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): B -> {} for 0.00083 * 1 = 0.00\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): B -> {} for 0.00170 * 1 = 0.00\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): B -> {} for 0.00008 * 4 = 0.00\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): B -> {} for 0.00003 * 4 = 0.00\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): B -> {} for 0.00000 * 4 = 0.00\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['B'], !10!0: ['B']}\n",
                "X": "Total cost:\t0.00210\nInput vars:\t{C!0: ['A'], S!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmin_sum!1 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): A -> {} for 0.00073 * 1 = 0.00\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): A -> {} for 0.00000 * 4 = 0.00\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): A -> {} for 0.00027 * 4 = 0.00\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): A -> {} for 0.00004 * 4 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): A -> {} for 0.00004 * 4 = 0.00\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['A'], !10!0: ['A']}\n",
                "Y": "Total cost:\t0.00134\nInput vars:\t{C!0: ['A'], S!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nmin_sum!1 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): A -> {} for 0.00073 * 1 = 0.00\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): A -> {} for 0.00000 * 4 = 0.00\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): A -> {} for 0.00006 * 4 = 0.00\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): A -> {} for 0.00005 * 4 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): A -> {} for 0.00005 * 4 = 0.00\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['A'], !10!0: ['A']}\n",
                "mixed": "Total cost:\t0.00111\nInput vars:\t{C!0: ['A'], S!0: ['A']}\nConstants:\t{10000: ['B'], 0: ['A', 'B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmin_sum!1 = 10000: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nsum!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(i!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0, D!0}[] = lift(sum!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nd!3{N!0, D!0}[] = (!6!0{N!0, D!0}[] - !7!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\np!3{N!0, D!0}[] = (d!3{N!0, D!0}[] * d!3{N!0, D!0}[]): A -> {} for 0.00073 * 1 = 0.00\n\tsum!3{N!0}[!12!0] = \u03a6(!5!0{N!0}[!12!0], sum!4{N!0}[(!12!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tsum!4{N!0}[!12!0] = (sum!3{N!0}[!12!0] + p!3{N!0}[!12!0]): A -> {} for 0.00000 * 4 = 0.00\n!8!0{N!0}[] = drop_dim(sum!4{N!0, D!0}[]): _ -> ['A', 'B'] for 0.00025 * 1 = 0.00 (A->B)\n\tmin_sum!2{}[!14!0] = \u03a6(!3!0{}[!14!0], min_sum!4{}[(!14!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!14!0] = (!8!0{}[!14!0] < min_sum!2{}[!14!0]): B -> {} for 0.00003 * 4 = 0.00\n\tmin_sum!4{}[!14!0] = MUX(!1!2{}[!14!0], !8!0{}[!14!0], min_sum!2{}[!14!0]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!4!0{}[!15!0], min_index!4{}[(!15!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!15!0] = MUX(!1!2{}[!15!0], !13!0{}[!15!0], min_index!2{}[!15!0]): B -> {} for 0.00000 * 4 = 0.00\n!10!0 = drop_dim(min_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0 = drop_dim(min_index!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!10!0, !11!0)\nreturn !2!1\nOutput vars:\t{!11!0: ['B'], !10!0: ['B']}\n"
            }
        }
    },
    "biometric_fast": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t5736.57600\nInput vars:\t{two_C!0: ['B'], S!0: ['B'], C_sqr_sum!0: ['B'], S_sqr_sum!0: ['B'], differences!0: ['B']}\nConstants:\t{0: ['B'], 99999: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): B -> {} for 381.60000 * 1 = 381.60\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): B -> {} for 2718.97600 * 1 = 2718.98\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): B -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): B -> {} for 381.60000 * 4 = 1526.40\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): B -> {} for 381.60000 * 1 = 381.60\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): B -> {} for 178.00000 * 4 = 712.00\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): B -> {} for 2.00000 * 4 = 8.00\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): B -> {} for 2.00000 * 4 = 8.00\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['B'], !12!0: ['B']}\n",
                "Y": "Total cost:\t8825.44000\nInput vars:\t{two_C!0: ['Y'], S!0: ['Y'], C_sqr_sum!0: ['Y'], S_sqr_sum!0: ['Y'], differences!0: ['Y']}\nConstants:\t{0: ['Y'], 99999: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_index!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): Y -> {} for 186.00000 * 1 = 186.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): Y -> {} for 6037.44000 * 1 = 6037.44\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): Y -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): Y -> {} for 186.00000 * 4 = 744.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): Y -> {} for 186.00000 * 1 = 186.00\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): Y -> {} for 160.00000 * 4 = 640.00\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): Y -> {} for 129.00000 * 4 = 516.00\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): Y -> {} for 129.00000 * 4 = 516.00\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['Y'], !12!0: ['Y']}\n",
                "mixed": "Total cost:\t848.03200\nInput vars:\t{two_C!0: ['A'], S!0: ['A'], C_sqr_sum!0: ['A'], S_sqr_sum!0: ['A'], differences!0: ['Y']}\nConstants:\t{0: ['A', 'B'], 99999: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): A -> {} for 2.43200 * 1 = 2.43\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): B -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): A -> ['Y'] for 189.60000 * 1 = 189.60 (A->Y)\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): Y -> ['B'] for 0.00000 * 1 = 0.00 (Y->B)\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): Y -> ['B'] for 0.00000 * 4 = 0.00 (Y->B)\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): Y -> ['B'] for 160.00000 * 4 = 640.00 (Y->B)\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): B -> ['Y'] for 2.00000 * 4 = 8.00 (B->Y)\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): B -> {} for 2.00000 * 4 = 8.00\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['B'], !12!0: ['B', 'Y']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.62678\nInput vars:\t{two_C!0: ['B'], S!0: ['B'], C_sqr_sum!0: ['B'], S_sqr_sum!0: ['B'], differences!0: ['B']}\nConstants:\t{0: ['B'], 99999: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): B -> {} for 0.02878 * 1 = 0.03\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): B -> {} for 0.41201 * 1 = 0.41\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): B -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): B -> {} for 0.02878 * 4 = 0.12\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): B -> {} for 0.02878 * 1 = 0.03\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): B -> {} for 0.01021 * 4 = 0.04\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): B -> {} for 0.00016 * 4 = 0.00\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): B -> {} for 0.00016 * 4 = 0.00\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['B'], !12!0: ['B']}\n",
                "Y": "Total cost:\t4.33421\nInput vars:\t{two_C!0: ['Y'], S!0: ['Y'], C_sqr_sum!0: ['Y'], S_sqr_sum!0: ['Y'], differences!0: ['Y']}\nConstants:\t{0: ['Y'], 99999: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_index!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): Y -> {} for 0.03758 * 1 = 0.04\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): Y -> {} for 3.93779 * 1 = 3.94\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): Y -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): Y -> {} for 0.03758 * 4 = 0.15\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): Y -> {} for 0.03758 * 1 = 0.04\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): Y -> {} for 0.01526 * 4 = 0.06\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): Y -> {} for 0.01374 * 4 = 0.05\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): Y -> {} for 0.01374 * 4 = 0.05\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['Y'], !12!0: ['Y']}\n",
                "mixed": "Total cost:\t0.09386\nInput vars:\t{two_C!0: ['A'], S!0: ['A'], C_sqr_sum!0: ['A'], S_sqr_sum!0: ['A'], differences!0: ['A']}\nConstants:\t{0: ['A', 'B'], 99999: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): A -> {} for 0.01008 * 1 = 0.01\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): B -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): A -> ['B'] for 0.04168 * 1 = 0.04 (A->B)\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): B -> {} for 0.01021 * 4 = 0.04\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): B -> {} for 0.00016 * 4 = 0.00\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): B -> {} for 0.00016 * 4 = 0.00\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['B'], !12!0: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t1.38323\nInput vars:\t{two_C!0: ['B'], S!0: ['B'], C_sqr_sum!0: ['B'], S_sqr_sum!0: ['B'], differences!0: ['B']}\nConstants:\t{0: ['B'], 99999: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): B -> {} for 0.04281 * 1 = 0.04\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): B -> {} for 0.29896 * 1 = 0.30\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): B -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): B -> {} for 0.04281 * 4 = 0.17\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): B -> {} for 0.04176 * 1 = 0.04\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): B -> {} for 0.13574 * 4 = 0.54\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): B -> {} for 0.03568 * 4 = 0.14\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): B -> {} for 0.03568 * 4 = 0.14\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['B'], !12!0: ['B']}\n",
                "Y": "Total cost:\t1.21921\nInput vars:\t{two_C!0: ['Y'], S!0: ['Y'], C_sqr_sum!0: ['Y'], S_sqr_sum!0: ['Y'], differences!0: ['Y']}\nConstants:\t{0: ['Y'], 99999: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_index!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): Y -> {} for 0.03098 * 1 = 0.03\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): Y -> {} for 0.86225 * 1 = 0.86\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): Y -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): Y -> {} for 0.03098 * 4 = 0.12\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): Y -> {} for 0.03508 * 1 = 0.04\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): Y -> {} for 0.02979 * 4 = 0.12\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): Y -> {} for 0.00597 * 4 = 0.02\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): Y -> {} for 0.00597 * 4 = 0.02\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['Y'], !12!0: ['Y']}\n",
                "mixed": "Total cost:\t0.20481\nInput vars:\t{two_C!0: ['A'], S!0: ['A'], C_sqr_sum!0: ['A'], S_sqr_sum!0: ['A'], differences!0: ['A']}\nConstants:\t{0: ['A', 'Y'], 99999: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_index!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): A -> {} for 0.00716 * 1 = 0.01\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): Y -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): A -> {} for 0.00016 * 1 = 0.00\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): A -> ['Y'] for 0.03052 * 1 = 0.03 (A->Y)\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): Y -> {} for 0.02979 * 4 = 0.12\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): Y -> {} for 0.00597 * 4 = 0.02\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): Y -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): Y -> {} for 0.00597 * 4 = 0.02\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['Y'], !12!0: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t8.00000\nInput vars:\t{two_C!0: ['A'], S!0: ['A'], C_sqr_sum!0: ['A'], S_sqr_sum!0: ['A'], differences!0: ['A']}\nConstants:\t{0: ['A'], 99999: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): A -> {} for 2.00000 * 4 = 8.00\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): A -> {} for 0.00000 * 4 = 0.00\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['A'], !12!0: ['A']}\n",
                "B": "Total cost:\t1.47200\nInput vars:\t{two_C!0: ['B'], S!0: ['B'], C_sqr_sum!0: ['B'], S_sqr_sum!0: ['B'], differences!0: ['B']}\nConstants:\t{0: ['B'], 99999: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): B -> {} for 1.47200 * 1 = 1.47\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): B -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): B -> {} for 0.00000 * 4 = 0.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): B -> {} for 0.00000 * 4 = 0.00\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['B'], !12!0: ['B']}\n",
                "X": "Total cost:\t4.00000\nInput vars:\t{two_C!0: ['A'], S!0: ['A'], C_sqr_sum!0: ['A'], S_sqr_sum!0: ['A'], differences!0: ['A']}\nConstants:\t{0: ['A'], 99999: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): A -> {} for 1.00000 * 4 = 4.00\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): A -> {} for 0.00000 * 4 = 0.00\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['A'], !12!0: ['A']}\n",
                "Y": "Total cost:\t0.00000\nInput vars:\t{two_C!0: ['A'], S!0: ['A'], C_sqr_sum!0: ['A'], S_sqr_sum!0: ['A'], differences!0: ['A']}\nConstants:\t{0: ['A'], 99999: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): A -> {} for 0.00000 * 4 = 0.00\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['A'], !12!0: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{two_C!0: ['A'], S!0: ['A'], C_sqr_sum!0: ['A'], S_sqr_sum!0: ['A'], differences!0: ['A']}\nConstants:\t{0: ['A'], 99999: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): A -> {} for 0.00000 * 4 = 0.00\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['A'], !12!0: ['A']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t1.57597\nInput vars:\t{two_C!0: ['A'], S!0: ['A'], C_sqr_sum!0: ['A'], S_sqr_sum!0: ['A'], differences!0: ['A']}\nConstants:\t{0: ['A'], 99999: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): A -> {} for 0.04966 * 1 = 0.05\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): A -> {} for 0.37537 * 4 = 1.50\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): A -> {} for 0.00310 * 4 = 0.01\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): A -> {} for 0.00310 * 4 = 0.01\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['A'], !12!0: ['A']}\n",
                "B": "Total cost:\t0.13408\nInput vars:\t{two_C!0: ['B'], S!0: ['B'], C_sqr_sum!0: ['B'], S_sqr_sum!0: ['B'], differences!0: ['B']}\nConstants:\t{0: ['B'], 99999: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): B -> {} for 0.00333 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): B -> {} for 0.10599 * 1 = 0.11\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): B -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): B -> {} for 0.00333 * 4 = 0.01\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): B -> {} for 0.00920 * 1 = 0.01\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): B -> {} for 0.00056 * 4 = 0.00\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): B -> {} for 0.00000 * 4 = 0.00\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['B'], !12!0: ['B']}\n",
                "X": "Total cost:\t0.08600\nInput vars:\t{two_C!0: ['A'], S!0: ['A'], C_sqr_sum!0: ['A'], S_sqr_sum!0: ['A'], differences!0: ['A']}\nConstants:\t{0: ['A'], 99999: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): A -> {} for 0.04966 * 1 = 0.05\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): A -> {} for 0.00288 * 4 = 0.01\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): A -> {} for 0.00310 * 4 = 0.01\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): A -> {} for 0.00310 * 4 = 0.01\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['A'], !12!0: ['A']}\n",
                "Y": "Total cost:\t0.07865\nInput vars:\t{two_C!0: ['A'], S!0: ['A'], C_sqr_sum!0: ['A'], S_sqr_sum!0: ['A'], differences!0: ['A']}\nConstants:\t{0: ['A'], 99999: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): A -> {} for 0.04966 * 1 = 0.05\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): A -> {} for 0.00104 * 4 = 0.00\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): A -> {} for 0.00310 * 4 = 0.01\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): A -> {} for 0.00310 * 4 = 0.01\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['A'], !12!0: ['A']}\n",
                "mixed": "Total cost:\t0.05689\nInput vars:\t{two_C!0: ['A'], S!0: ['A'], C_sqr_sum!0: ['A'], S_sqr_sum!0: ['A'], differences!0: ['A']}\nConstants:\t{0: ['A', 'B'], 99999: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): A -> {} for 0.04966 * 1 = 0.05\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): B -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): A -> ['B'] for 0.00498 * 1 = 0.00 (A->B)\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): B -> {} for 0.00056 * 4 = 0.00\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): B -> {} for 0.00000 * 4 = 0.00\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['B'], !12!0: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t0.01929\nInput vars:\t{two_C!0: ['A'], S!0: ['A'], C_sqr_sum!0: ['A'], S_sqr_sum!0: ['A'], differences!0: ['A']}\nConstants:\t{0: ['A'], 99999: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): A -> {} for 0.00072 * 1 = 0.00\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): A -> {} for 0.00454 * 4 = 0.02\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): A -> {} for 0.00005 * 4 = 0.00\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): A -> {} for 0.00005 * 4 = 0.00\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['A'], !12!0: ['A']}\n",
                "B": "Total cost:\t0.00244\nInput vars:\t{two_C!0: ['B'], S!0: ['B'], C_sqr_sum!0: ['B'], S_sqr_sum!0: ['B'], differences!0: ['B']}\nConstants:\t{0: ['B'], 99999: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): B -> {} for 0.00008 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): B -> {} for 0.00170 * 1 = 0.00\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): B -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): B -> {} for 0.00008 * 4 = 0.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): B -> {} for 0.00024 * 1 = 0.00\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): B -> {} for 0.00003 * 4 = 0.00\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): B -> {} for 0.00000 * 4 = 0.00\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['B'], !12!0: ['B']}\n",
                "X": "Total cost:\t0.00210\nInput vars:\t{two_C!0: ['A'], S!0: ['A'], C_sqr_sum!0: ['A'], S_sqr_sum!0: ['A'], differences!0: ['A']}\nConstants:\t{0: ['A'], 99999: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): A -> {} for 0.00073 * 1 = 0.00\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): A -> {} for 0.00027 * 4 = 0.00\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): A -> {} for 0.00004 * 4 = 0.00\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): A -> {} for 0.00004 * 4 = 0.00\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['A'], !12!0: ['A']}\n",
                "Y": "Total cost:\t0.00134\nInput vars:\t{two_C!0: ['A'], S!0: ['A'], C_sqr_sum!0: ['A'], S_sqr_sum!0: ['A'], differences!0: ['A']}\nConstants:\t{0: ['A'], 99999: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nmin_index!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): A -> {} for 0.00073 * 1 = 0.00\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): A -> {} for 0.00006 * 4 = 0.00\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): A -> {} for 0.00005 * 4 = 0.00\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): A -> {} for 0.00005 * 4 = 0.00\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['A'], !12!0: ['A']}\n",
                "mixed": "Total cost:\t0.00111\nInput vars:\t{two_C!0: ['A'], S!0: ['A'], C_sqr_sum!0: ['A'], S_sqr_sum!0: ['A'], differences!0: ['A']}\nConstants:\t{0: ['A', 'B'], 99999: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmin_index!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(differences!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(S_sqr_sum!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(C_sqr_sum!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntwo_a_b!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0, D!0}[] = lift(S!0[((i!1 * D!0) + j!1)], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0, D!0}[] = lift(two_C!0[j!1], (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nmin_index!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmin_diff!1 = 99999: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(i!2, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(min_index!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\na_sqr_plus_b_sqr!2{N!0}[] = (!5!0{N!0}[] + !6!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!0{N!0, D!0}[] = lift(two_a_b!2, (i!1:N!0, j!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntmp!3{N!0, D!0}[] = (!8!0{N!0, D!0}[] * !9!0{N!0, D!0}[]): A -> {} for 0.00073 * 1 = 0.00\n!11!0{N!0}[] = lift(min_diff!1, (i!2:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tmin_index!2{}[!15!0] = \u03a6(!3!0{}[!15!0], min_index!3): B -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!3{N!0}[!14!0] = \u03a6(!7!0{N!0}[!14!0], two_a_b!4{N!0}[(!14!0 - 1)]): A -> {} for 0.00000 * 4 = 0.00\n\ttwo_a_b!4{N!0}[!14!0] = (two_a_b!3{N!0}[!14!0] + tmp!3{N!0}[!14!0]): A -> {} for 0.00000 * 4 = 0.00\n!10!0{N!0}[] = drop_dim(two_a_b!4{N!0, D!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nthis_diff!2{N!0}[] = (a_sqr_plus_b_sqr!2{N!0}[] - !10!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\ndifferences!2{N!0}[] = VectorizedUpdate(!4!0{N!0}[], [I!1], this_diff!2{N!0}[]): A -> ['B'] for 0.00025 * 1 = 0.00 (A->B)\n\tmin_diff!2{}[!17!0] = \u03a6(!11!0{}[!17!0], min_diff!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\t!1!2{}[!17!0] = (differences!2{}[!17!0] < min_diff!2{}[!17!0]): B -> {} for 0.00003 * 4 = 0.00\n\tmin_diff!4{}[!17!0] = MUX(!1!2{}[!17!0], differences!2{}[!17!0], min_diff!2{}[!17!0]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!4{}[!18!0] = \u03a6(min_index!2{}[!18!0], min_index!6{}[(!18!0 - 1)]): B -> {} for 0.00000 * 4 = 0.00\n\tmin_index!6{}[!18!0] = MUX(!1!2{}[!18!0], !16!0{}[!18!0], min_index!4{}[!18!0]): B -> {} for 0.00000 * 4 = 0.00\n!12!0 = drop_dim(min_diff!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0 = drop_dim(min_index!6{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!1 = (!12!0, !13!0)\nreturn !2!1\nOutput vars:\t{!13!0: ['B'], !12!0: ['B']}\n"
            }
        }
    },
    "chapterfour_figure_12": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t360.00000\nInput vars:\t{y!0: ['B'], x!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nz!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): B -> {} for 178.00000 * 1 = 178.00\n!2!1 = (y!0 > 0): B -> {} for 178.00000 * 1 = 178.00\nz!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): B -> {} for 2.00000 * 1 = 2.00\nz!5 = MUX(!1!1, z!4, z!1): B -> {} for 2.00000 * 1 = 2.00\nreturn z!5\nOutput vars:\t{z!5: ['B']}\n",
                "Y": "Total cost:\t578.00000\nInput vars:\t{y!0: ['Y'], x!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nz!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): Y -> {} for 160.00000 * 1 = 160.00\n!2!1 = (y!0 > 0): Y -> {} for 160.00000 * 1 = 160.00\nz!3 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['Y'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): Y -> {} for 129.00000 * 1 = 129.00\nz!5 = MUX(!1!1, z!4, z!1): Y -> {} for 129.00000 * 1 = 129.00\nreturn z!5\nOutput vars:\t{z!5: ['Y']}\n",
                "mixed": "Total cost:\t324.00000\nInput vars:\t{y!0: ['Y'], x!0: ['Y']}\nConstants:\t{0: ['B', 'Y'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nz!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): Y -> ['B'] for 160.00000 * 1 = 160.00 (Y->B)\n!2!1 = (y!0 > 0): Y -> ['B'] for 160.00000 * 1 = 160.00 (Y->B)\nz!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): B -> {} for 2.00000 * 1 = 2.00\nz!5 = MUX(!1!1, z!4, z!1): B -> {} for 2.00000 * 1 = 2.00\nreturn z!5\nOutput vars:\t{z!5: ['B']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.02074\nInput vars:\t{y!0: ['B'], x!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nz!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): B -> {} for 0.01021 * 1 = 0.01\n!2!1 = (y!0 > 0): B -> {} for 0.01021 * 1 = 0.01\nz!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): B -> {} for 0.00016 * 1 = 0.00\nz!5 = MUX(!1!1, z!4, z!1): B -> {} for 0.00016 * 1 = 0.00\nreturn z!5\nOutput vars:\t{z!5: ['B']}\n",
                "Y": "Total cost:\t0.05800\nInput vars:\t{y!0: ['Y'], x!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nz!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): Y -> {} for 0.01526 * 1 = 0.02\n!2!1 = (y!0 > 0): Y -> {} for 0.01526 * 1 = 0.02\nz!3 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['Y'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): Y -> {} for 0.01374 * 1 = 0.01\nz!5 = MUX(!1!1, z!4, z!1): Y -> {} for 0.01374 * 1 = 0.01\nreturn z!5\nOutput vars:\t{z!5: ['Y']}\n",
                "mixed": "Total cost:\t0.02074\nInput vars:\t{y!0: ['B'], x!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nz!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): B -> {} for 0.01021 * 1 = 0.01\n!2!1 = (y!0 > 0): B -> {} for 0.01021 * 1 = 0.01\nz!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): B -> {} for 0.00016 * 1 = 0.00\nz!5 = MUX(!1!1, z!4, z!1): B -> {} for 0.00016 * 1 = 0.00\nreturn z!5\nOutput vars:\t{z!5: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t0.30857\nInput vars:\t{y!0: ['B'], x!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nz!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): B -> {} for 0.11860 * 1 = 0.12\n!2!1 = (y!0 > 0): B -> {} for 0.11860 * 1 = 0.12\nz!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): B -> {} for 0.03568 * 1 = 0.04\nz!5 = MUX(!1!1, z!4, z!1): B -> {} for 0.03568 * 1 = 0.04\nreturn z!5\nOutput vars:\t{z!5: ['B']}\n",
                "Y": "Total cost:\t0.07435\nInput vars:\t{y!0: ['Y'], x!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nz!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): Y -> {} for 0.03120 * 1 = 0.03\n!2!1 = (y!0 > 0): Y -> {} for 0.03120 * 1 = 0.03\nz!3 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['Y'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): Y -> {} for 0.00597 * 1 = 0.01\nz!5 = MUX(!1!1, z!4, z!1): Y -> {} for 0.00597 * 1 = 0.01\nreturn z!5\nOutput vars:\t{z!5: ['Y']}\n",
                "mixed": "Total cost:\t0.06378\nInput vars:\t{y!0: ['A'], x!0: ['A']}\nConstants:\t{0: ['A', 'Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nz!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): A -> ['Y'] for 0.02592 * 1 = 0.03 (A->Y)\n!2!1 = (y!0 > 0): A -> ['Y'] for 0.02592 * 1 = 0.03 (A->Y)\nz!3 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['Y'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): Y -> {} for 0.00597 * 1 = 0.01\nz!5 = MUX(!1!1, z!4, z!1): Y -> {} for 0.00597 * 1 = 0.01\nreturn z!5\nOutput vars:\t{z!5: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t4.00000\nInput vars:\t{y!0: ['A'], x!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nz!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): A -> {} for 2.00000 * 1 = 2.00\n!2!1 = (y!0 > 0): A -> {} for 2.00000 * 1 = 2.00\nz!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): A -> {} for 0.00000 * 1 = 0.00\nz!5 = MUX(!1!1, z!4, z!1): A -> {} for 0.00000 * 1 = 0.00\nreturn z!5\nOutput vars:\t{z!5: ['A']}\n",
                "B": "Total cost:\t0.00000\nInput vars:\t{y!0: ['B'], x!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nz!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): B -> {} for 0.00000 * 1 = 0.00\n!2!1 = (y!0 > 0): B -> {} for 0.00000 * 1 = 0.00\nz!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): B -> {} for 0.00000 * 1 = 0.00\nz!5 = MUX(!1!1, z!4, z!1): B -> {} for 0.00000 * 1 = 0.00\nreturn z!5\nOutput vars:\t{z!5: ['B']}\n",
                "X": "Total cost:\t2.00000\nInput vars:\t{y!0: ['A'], x!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nz!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): A -> {} for 1.00000 * 1 = 1.00\n!2!1 = (y!0 > 0): A -> {} for 1.00000 * 1 = 1.00\nz!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): A -> {} for 0.00000 * 1 = 0.00\nz!5 = MUX(!1!1, z!4, z!1): A -> {} for 0.00000 * 1 = 0.00\nreturn z!5\nOutput vars:\t{z!5: ['A']}\n",
                "Y": "Total cost:\t0.00000\nInput vars:\t{y!0: ['A'], x!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nz!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): A -> {} for 0.00000 * 1 = 0.00\n!2!1 = (y!0 > 0): A -> {} for 0.00000 * 1 = 0.00\nz!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): A -> {} for 0.00000 * 1 = 0.00\nz!5 = MUX(!1!1, z!4, z!1): A -> {} for 0.00000 * 1 = 0.00\nreturn z!5\nOutput vars:\t{z!5: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{y!0: ['B'], x!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nz!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): B -> {} for 0.00000 * 1 = 0.00\n!2!1 = (y!0 > 0): B -> {} for 0.00000 * 1 = 0.00\nz!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): B -> {} for 0.00000 * 1 = 0.00\nz!5 = MUX(!1!1, z!4, z!1): B -> {} for 0.00000 * 1 = 0.00\nreturn z!5\nOutput vars:\t{z!5: ['B']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t0.75694\nInput vars:\t{y!0: ['A'], x!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nz!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): A -> {} for 0.37537 * 1 = 0.38\n!2!1 = (y!0 > 0): A -> {} for 0.37537 * 1 = 0.38\nz!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): A -> {} for 0.00310 * 1 = 0.00\nz!5 = MUX(!1!1, z!4, z!1): A -> {} for 0.00310 * 1 = 0.00\nreturn z!5\nOutput vars:\t{z!5: ['A']}\n",
                "B": "Total cost:\t0.00113\nInput vars:\t{y!0: ['B'], x!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nz!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): B -> {} for 0.00056 * 1 = 0.00\n!2!1 = (y!0 > 0): B -> {} for 0.00056 * 1 = 0.00\nz!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): B -> {} for 0.00000 * 1 = 0.00\nz!5 = MUX(!1!1, z!4, z!1): B -> {} for 0.00000 * 1 = 0.00\nreturn z!5\nOutput vars:\t{z!5: ['B']}\n",
                "X": "Total cost:\t0.01196\nInput vars:\t{y!0: ['A'], x!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nz!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): A -> {} for 0.00288 * 1 = 0.00\n!2!1 = (y!0 > 0): A -> {} for 0.00288 * 1 = 0.00\nz!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): A -> {} for 0.00310 * 1 = 0.00\nz!5 = MUX(!1!1, z!4, z!1): A -> {} for 0.00310 * 1 = 0.00\nreturn z!5\nOutput vars:\t{z!5: ['A']}\n",
                "Y": "Total cost:\t0.00828\nInput vars:\t{y!0: ['A'], x!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nz!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): A -> {} for 0.00104 * 1 = 0.00\n!2!1 = (y!0 > 0): A -> {} for 0.00104 * 1 = 0.00\nz!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): A -> {} for 0.00310 * 1 = 0.00\nz!5 = MUX(!1!1, z!4, z!1): A -> {} for 0.00310 * 1 = 0.00\nreturn z!5\nOutput vars:\t{z!5: ['A']}\n",
                "mixed": "Total cost:\t0.00113\nInput vars:\t{y!0: ['B'], x!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nz!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): B -> {} for 0.00056 * 1 = 0.00\n!2!1 = (y!0 > 0): B -> {} for 0.00056 * 1 = 0.00\nz!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): B -> {} for 0.00000 * 1 = 0.00\nz!5 = MUX(!1!1, z!4, z!1): B -> {} for 0.00000 * 1 = 0.00\nreturn z!5\nOutput vars:\t{z!5: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t0.00921\nInput vars:\t{y!0: ['A'], x!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nz!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): A -> {} for 0.00455 * 1 = 0.00\n!2!1 = (y!0 > 0): A -> {} for 0.00455 * 1 = 0.00\nz!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): A -> {} for 0.00005 * 1 = 0.00\nz!5 = MUX(!1!1, z!4, z!1): A -> {} for 0.00005 * 1 = 0.00\nreturn z!5\nOutput vars:\t{z!5: ['A']}\n",
                "B": "Total cost:\t0.00002\nInput vars:\t{y!0: ['B'], x!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nz!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): B -> {} for 0.00001 * 1 = 0.00\n!2!1 = (y!0 > 0): B -> {} for 0.00001 * 1 = 0.00\nz!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): B -> {} for 0.00000 * 1 = 0.00\nz!5 = MUX(!1!1, z!4, z!1): B -> {} for 0.00000 * 1 = 0.00\nreturn z!5\nOutput vars:\t{z!5: ['B']}\n",
                "X": "Total cost:\t0.00053\nInput vars:\t{y!0: ['A'], x!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nz!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): A -> {} for 0.00023 * 1 = 0.00\n!2!1 = (y!0 > 0): A -> {} for 0.00023 * 1 = 0.00\nz!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): A -> {} for 0.00004 * 1 = 0.00\nz!5 = MUX(!1!1, z!4, z!1): A -> {} for 0.00004 * 1 = 0.00\nreturn z!5\nOutput vars:\t{z!5: ['A']}\n",
                "Y": "Total cost:\t0.00012\nInput vars:\t{y!0: ['A'], x!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nz!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): A -> {} for 0.00001 * 1 = 0.00\n!2!1 = (y!0 > 0): A -> {} for 0.00001 * 1 = 0.00\nz!3 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): A -> {} for 0.00005 * 1 = 0.00\nz!5 = MUX(!1!1, z!4, z!1): A -> {} for 0.00005 * 1 = 0.00\nreturn z!5\nOutput vars:\t{z!5: ['A']}\n",
                "mixed": "Total cost:\t0.00002\nInput vars:\t{y!0: ['B'], x!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nz!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!1 = (x!0 > 0): B -> {} for 0.00001 * 1 = 0.00\n!2!1 = (y!0 > 0): B -> {} for 0.00001 * 1 = 0.00\nz!3 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!2 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\nz!4 = MUX(!2!1, z!2, z!3): B -> {} for 0.00000 * 1 = 0.00\nz!5 = MUX(!1!1, z!4, z!1): B -> {} for 0.00000 * 1 = 0.00\nreturn z!5\nOutput vars:\t{z!5: ['B']}\n"
            }
        }
    },
    "convex_hull": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t1122.48000\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B']}\nConstants:\t{True: ['B'], False: ['B'], 0: ['B']}\nPlaintext vars:\t{result_X!0: ['B'], result_Y!0: ['B']}\nFlags:\t\t{}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): B -> {} for 290.40000 * 1 = 290.40\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): B -> {} for 290.40000 * 1 = 290.40\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): B -> {} for 261.36000 * 1 = 261.36\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 2.40000 * 1 = 2.40\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): B -> {} for 261.36000 * 1 = 261.36\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): B -> {} for 2.16000 * 1 = 2.16\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): B -> {} for 2.40000 * 3 = 7.20\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): B -> {} for 2.40000 * 1 = 2.40\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): B -> {} for 2.40000 * 1 = 2.40\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): B -> {} for 2.40000 * 1 = 2.40\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n",
                "Y": "Total cost:\t2463.24000\nInput vars:\t{Y_coords!0: ['Y'], X_coords!0: ['Y']}\nConstants:\t{True: ['Y'], False: ['Y'], 0: ['Y']}\nPlaintext vars:\t{result_X!0: ['Y'], result_Y!0: ['Y']}\nFlags:\t\t{}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): Y -> {} for 384.00000 * 1 = 384.00\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): Y -> {} for 384.00000 * 1 = 384.00\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): Y -> {} for 345.60000 * 1 = 345.60\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): Y -> {} for 39.60000 * 1 = 39.60\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): Y -> {} for 345.60000 * 1 = 345.60\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): Y -> {} for 35.64000 * 1 = 35.64\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): Y -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): Y -> {} for 154.80000 * 3 = 464.40\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): Y -> {} for 154.80000 * 1 = 154.80\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): Y -> {} for 154.80000 * 1 = 154.80\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): Y -> {} for 154.80000 * 1 = 154.80\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['Y'], result_X!2: ['Y']}\n",
                "mixed": "Total cost:\t1122.48000\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B']}\nConstants:\t{True: ['B'], False: ['B'], 0: ['B']}\nPlaintext vars:\t{result_X!0: ['B'], result_Y!0: ['B']}\nFlags:\t\t{}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): B -> {} for 290.40000 * 1 = 290.40\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): B -> {} for 290.40000 * 1 = 290.40\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): B -> {} for 261.36000 * 1 = 261.36\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 2.40000 * 1 = 2.40\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): B -> {} for 261.36000 * 1 = 261.36\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): B -> {} for 2.16000 * 1 = 2.16\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): B -> {} for 2.40000 * 3 = 7.20\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): B -> {} for 2.40000 * 1 = 2.40\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): B -> {} for 2.40000 * 1 = 2.40\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): B -> {} for 2.40000 * 1 = 2.40\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.10239\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B']}\nConstants:\t{True: ['B'], False: ['B'], 0: ['B']}\nPlaintext vars:\t{result_X!0: ['B'], result_Y!0: ['B']}\nFlags:\t\t{}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): B -> {} for 0.02006 * 1 = 0.02\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): B -> {} for 0.02006 * 1 = 0.02\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): B -> {} for 0.02982 * 1 = 0.03\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.00051 * 1 = 0.00\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): B -> {} for 0.02982 * 1 = 0.03\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): B -> {} for 0.00123 * 1 = 0.00\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): B -> {} for 0.00015 * 3 = 0.00\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): B -> {} for 0.00015 * 1 = 0.00\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): B -> {} for 0.00015 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): B -> {} for 0.00015 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n",
                "Y": "Total cost:\t0.62762\nInput vars:\t{Y_coords!0: ['Y'], X_coords!0: ['Y']}\nConstants:\t{True: ['Y'], False: ['Y'], 0: ['Y']}\nPlaintext vars:\t{result_X!0: ['Y'], result_Y!0: ['Y']}\nFlags:\t\t{}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): Y -> {} for 0.06299 * 1 = 0.06\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): Y -> {} for 0.06299 * 1 = 0.06\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): Y -> {} for 0.14900 * 1 = 0.15\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): Y -> {} for 0.00747 * 1 = 0.01\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): Y -> {} for 0.14900 * 1 = 0.15\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): Y -> {} for 0.01825 * 1 = 0.02\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): Y -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): Y -> {} for 0.02965 * 3 = 0.09\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): Y -> {} for 0.02965 * 1 = 0.03\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): Y -> {} for 0.02965 * 1 = 0.03\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): Y -> {} for 0.02965 * 1 = 0.03\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['Y'], result_X!2: ['Y']}\n",
                "mixed": "Total cost:\t0.10239\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B']}\nConstants:\t{True: ['B'], False: ['B'], 0: ['B']}\nPlaintext vars:\t{result_X!0: ['B'], result_Y!0: ['B']}\nFlags:\t\t{}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): B -> {} for 0.02006 * 1 = 0.02\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): B -> {} for 0.02006 * 1 = 0.02\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): B -> {} for 0.02982 * 1 = 0.03\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.00051 * 1 = 0.00\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): B -> {} for 0.02982 * 1 = 0.03\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): B -> {} for 0.00123 * 1 = 0.00\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): B -> {} for 0.00015 * 3 = 0.00\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): B -> {} for 0.00015 * 1 = 0.00\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): B -> {} for 0.00015 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): B -> {} for 0.00015 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t1.06470\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B']}\nConstants:\t{True: ['B'], False: ['B'], 0: ['B']}\nPlaintext vars:\t{result_X!0: ['B'], result_Y!0: ['B']}\nFlags:\t\t{}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): B -> {} for 0.19131 * 1 = 0.19\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): B -> {} for 0.18419 * 1 = 0.18\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): B -> {} for 0.17530 * 1 = 0.18\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.03834 * 1 = 0.04\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): B -> {} for 0.17141 * 1 = 0.17\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): B -> {} for 0.02913 * 1 = 0.03\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): B -> {} for 0.04584 * 3 = 0.14\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): B -> {} for 0.04584 * 1 = 0.05\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): B -> {} for 0.04584 * 1 = 0.05\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): B -> {} for 0.04584 * 1 = 0.05\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n",
                "Y": "Total cost:\t0.26523\nInput vars:\t{Y_coords!0: ['Y'], X_coords!0: ['Y']}\nConstants:\t{True: ['Y'], False: ['Y'], 0: ['Y']}\nPlaintext vars:\t{result_X!0: ['Y'], result_Y!0: ['Y']}\nFlags:\t\t{}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): Y -> {} for 0.05967 * 1 = 0.06\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): Y -> {} for 0.05451 * 1 = 0.05\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): Y -> {} for 0.05927 * 1 = 0.06\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): Y -> {} for 0.00109 * 1 = 0.00\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): Y -> {} for 0.05279 * 1 = 0.05\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): Y -> {} for 0.00245 * 1 = 0.00\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): Y -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): Y -> {} for 0.00591 * 3 = 0.02\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): Y -> {} for 0.00591 * 1 = 0.01\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): Y -> {} for 0.00591 * 1 = 0.01\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): Y -> {} for 0.00591 * 1 = 0.01\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['Y'], result_X!2: ['Y']}\n",
                "mixed": "Total cost:\t0.26523\nInput vars:\t{Y_coords!0: ['Y'], X_coords!0: ['Y']}\nConstants:\t{True: ['Y'], False: ['Y'], 0: ['Y']}\nPlaintext vars:\t{result_X!0: ['Y'], result_Y!0: ['Y']}\nFlags:\t\t{}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): Y -> {} for 0.05967 * 1 = 0.06\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): Y -> {} for 0.05451 * 1 = 0.05\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): Y -> {} for 0.05927 * 1 = 0.06\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): Y -> {} for 0.00109 * 1 = 0.00\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): Y -> {} for 0.05279 * 1 = 0.05\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): Y -> {} for 0.00245 * 1 = 0.00\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): Y -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): Y -> {} for 0.00591 * 3 = 0.02\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): Y -> {} for 0.00591 * 1 = 0.01\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): Y -> {} for 0.00591 * 1 = 0.01\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): Y -> {} for 0.00591 * 1 = 0.01\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['Y'], result_X!2: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t38.00000\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A']}\nConstants:\t{True: ['A'], False: ['A'], 0: ['A']}\nPlaintext vars:\t{result_X!0: ['A'], result_Y!0: ['A']}\nFlags:\t\t{}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): A -> {} for 4.60000 * 1 = 4.60\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): A -> {} for 4.60000 * 1 = 4.60\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): A -> {} for 14.40000 * 1 = 14.40\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): A -> {} for 14.40000 * 1 = 14.40\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): A -> {} for 0.00000 * 3 = 0.00\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): A -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "B": "Total cost:\t0.00000\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B']}\nConstants:\t{True: ['B'], False: ['B'], 0: ['B']}\nPlaintext vars:\t{result_X!0: ['B'], result_Y!0: ['B']}\nFlags:\t\t{}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): B -> {} for 0.00000 * 1 = 0.00\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): B -> {} for 0.00000 * 1 = 0.00\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): B -> {} for 0.00000 * 3 = 0.00\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): B -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n",
                "X": "Total cost:\t14.56000\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A']}\nConstants:\t{True: ['A'], False: ['A'], 0: ['A']}\nPlaintext vars:\t{result_X!0: ['A'], result_Y!0: ['A']}\nFlags:\t\t{X}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): A -> {} for 2.60000 * 1 = 2.60\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): A -> {} for 2.60000 * 1 = 2.60\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): A -> {} for 4.68000 * 1 = 4.68\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): A -> {} for 4.68000 * 1 = 4.68\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): A -> {} for 0.00000 * 3 = 0.00\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): A -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "Y": "Total cost:\t2.56000\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A']}\nConstants:\t{True: ['A'], False: ['A'], 0: ['A']}\nPlaintext vars:\t{result_X!0: ['A'], result_Y!0: ['A']}\nFlags:\t\t{Y}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): A -> {} for 0.20000 * 1 = 0.20\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): A -> {} for 0.20000 * 1 = 0.20\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): A -> {} for 1.08000 * 1 = 1.08\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): A -> {} for 1.08000 * 1 = 1.08\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): A -> {} for 0.00000 * 3 = 0.00\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): A -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B']}\nConstants:\t{True: ['B'], False: ['B'], 0: ['B']}\nPlaintext vars:\t{result_X!0: ['B'], result_Y!0: ['B']}\nFlags:\t\t{X}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): B -> {} for 0.00000 * 1 = 0.00\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): B -> {} for 0.00000 * 1 = 0.00\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): B -> {} for 0.00000 * 3 = 0.00\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): B -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t9.10168\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A']}\nConstants:\t{True: ['A'], False: ['A'], 0: ['A']}\nPlaintext vars:\t{result_X!0: ['A'], result_Y!0: ['A']}\nFlags:\t\t{}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): A -> {} for 1.12605 * 1 = 1.13\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): A -> {} for 1.12605 * 1 = 1.13\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): A -> {} for 3.37823 * 1 = 3.38\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): A -> {} for 3.37823 * 1 = 3.38\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): A -> {} for 0.02794 * 1 = 0.03\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): A -> {} for 0.00931 * 3 = 0.03\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): A -> {} for 0.00931 * 1 = 0.01\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "B": "Total cost:\t0.01297\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B']}\nConstants:\t{True: ['B'], False: ['B'], 0: ['B']}\nPlaintext vars:\t{result_X!0: ['B'], result_Y!0: ['B']}\nFlags:\t\t{}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): B -> {} for 0.00161 * 1 = 0.00\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): B -> {} for 0.00161 * 1 = 0.00\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): B -> {} for 0.00482 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.00001 * 1 = 0.00\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): B -> {} for 0.00482 * 1 = 0.00\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): B -> {} for 0.00010 * 1 = 0.00\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): B -> {} for 0.00000 * 3 = 0.00\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): B -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n",
                "X": "Total cost:\t0.15935\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A']}\nConstants:\t{True: ['A'], False: ['A'], 0: ['A']}\nPlaintext vars:\t{result_X!0: ['A'], result_Y!0: ['A']}\nFlags:\t\t{X}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): A -> {} for 0.00840 * 1 = 0.01\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): A -> {} for 0.00840 * 1 = 0.01\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): A -> {} for 0.02472 * 1 = 0.02\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): A -> {} for 0.02472 * 1 = 0.02\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): A -> {} for 0.02794 * 1 = 0.03\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): A -> {} for 0.00931 * 3 = 0.03\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): A -> {} for 0.00931 * 1 = 0.01\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "Y": "Total cost:\t0.13447\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A']}\nConstants:\t{True: ['A'], False: ['A'], 0: ['A']}\nPlaintext vars:\t{result_X!0: ['A'], result_Y!0: ['A']}\nFlags:\t\t{Y}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): A -> {} for 0.00365 * 1 = 0.00\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): A -> {} for 0.00365 * 1 = 0.00\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): A -> {} for 0.01703 * 1 = 0.02\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): A -> {} for 0.01703 * 1 = 0.02\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): A -> {} for 0.02794 * 1 = 0.03\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): A -> {} for 0.00931 * 3 = 0.03\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): A -> {} for 0.00931 * 1 = 0.01\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "mixed": "Total cost:\t0.01297\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B']}\nConstants:\t{True: ['B'], False: ['B'], 0: ['B']}\nPlaintext vars:\t{result_X!0: ['B'], result_Y!0: ['B']}\nFlags:\t\t{X}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): B -> {} for 0.00161 * 1 = 0.00\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): B -> {} for 0.00161 * 1 = 0.00\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): B -> {} for 0.00482 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.00001 * 1 = 0.00\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): B -> {} for 0.00482 * 1 = 0.00\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): B -> {} for 0.00010 * 1 = 0.00\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): B -> {} for 0.00000 * 3 = 0.00\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): B -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t0.09131\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A']}\nConstants:\t{True: ['A'], False: ['A'], 0: ['A']}\nPlaintext vars:\t{result_X!0: ['A'], result_Y!0: ['A']}\nFlags:\t\t{}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): A -> {} for 0.01185 * 1 = 0.01\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): A -> {} for 0.01200 * 1 = 0.01\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): A -> {} for 0.03320 * 1 = 0.03\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.00013 * 1 = 0.00\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): A -> {} for 0.03292 * 1 = 0.03\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): A -> {} for 0.00040 * 1 = 0.00\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): A -> {} for 0.00014 * 3 = 0.00\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): A -> {} for 0.00014 * 1 = 0.00\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): A -> {} for 0.00014 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): A -> {} for 0.00014 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "B": "Total cost:\t0.00038\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B']}\nConstants:\t{True: ['B'], False: ['B'], 0: ['B']}\nPlaintext vars:\t{result_X!0: ['B'], result_Y!0: ['B']}\nFlags:\t\t{}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): B -> {} for 0.00006 * 1 = 0.00\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): B -> {} for 0.00005 * 1 = 0.00\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): B -> {} for 0.00011 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.00001 * 1 = 0.00\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): B -> {} for 0.00013 * 1 = 0.00\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): B -> {} for 0.00001 * 1 = 0.00\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): B -> {} for 0.00000 * 3 = 0.00\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): B -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n",
                "X": "Total cost:\t0.00636\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A']}\nConstants:\t{True: ['A'], False: ['A'], 0: ['A']}\nPlaintext vars:\t{result_X!0: ['A'], result_Y!0: ['A']}\nFlags:\t\t{X}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): A -> {} for 0.00066 * 1 = 0.00\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): A -> {} for 0.00070 * 1 = 0.00\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): A -> {} for 0.00177 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.00014 * 1 = 0.00\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): A -> {} for 0.00191 * 1 = 0.00\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): A -> {} for 0.00042 * 1 = 0.00\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): A -> {} for 0.00013 * 3 = 0.00\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): A -> {} for 0.00013 * 1 = 0.00\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): A -> {} for 0.00013 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): A -> {} for 0.00013 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "Y": "Total cost:\t0.00237\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A']}\nConstants:\t{True: ['A'], False: ['A'], 0: ['A']}\nPlaintext vars:\t{result_X!0: ['A'], result_Y!0: ['A']}\nFlags:\t\t{Y}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): A -> {} for 0.00005 * 1 = 0.00\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): A -> {} for 0.00004 * 1 = 0.00\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): A -> {} for 0.00040 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.00013 * 1 = 0.00\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): A -> {} for 0.00045 * 1 = 0.00\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): A -> {} for 0.00042 * 1 = 0.00\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): A -> {} for 0.00015 * 3 = 0.00\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): A -> {} for 0.00015 * 1 = 0.00\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): A -> {} for 0.00015 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): A -> {} for 0.00015 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "mixed": "Total cost:\t0.00038\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B']}\nConstants:\t{True: ['B'], False: ['B'], 0: ['B']}\nPlaintext vars:\t{result_X!0: ['B'], result_Y!0: ['B']}\nFlags:\t\t{X}\n!11!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!2 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!4 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0, N!0}[] = lift(is_hull!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!13!0{N!0}[] <= 0): B -> {} for 0.00006 * 1 = 0.00\n!18!0{N!0, N!0}[] = lift(!13!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!14!0{N!0}[] >= 0): B -> {} for 0.00005 * 1 = 0.00\n!19!0{N!0, N!0}[] = lift(!14!0{N!0}[], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!3{N!0, N!0}[] = (!18!0{N!0, N!0}[] <= !16!0{N!0, N!0}[]): B -> {} for 0.00011 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.00001 * 1 = 0.00\n!7!3{N!0, N!0}[] = (!19!0{N!0, N!0}[] >= !17!0{N!0, N!0}[]): B -> {} for 0.00013 * 1 = 0.00\n!8!3{N!0, N!0}[] = (!6!3{N!0, N!0}[] or !7!3{N!0, N!0}[]): B -> {} for 0.00001 * 1 = 0.00\n!9!3{N!0, N!0}[] = not !8!3{N!0, N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tis_hull!3{N!0}[!21!0] = \u03a6(!15!0{N!0}[!21!0], is_hull!5{N!0}[(!21!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tis_hull!5{N!0}[!21!0] = MUX(!9!3{N!0}[!21!0], is_hull!4, is_hull!3{N!0}[!21!0]): B -> {} for 0.00000 * 3 = 0.00\n!20!0{N!0}[] = drop_dim(is_hull!5{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nis_hull!6{N!0}[] = MUX(!3!2{N!0}[], !20!0{N!0}[], is_hull!2): B -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(is_hull!6{N!0}[], !13!0{N!0}[], !11!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(is_hull!6{N!0}[], !14!0{N!0}[], !12!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!11!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!12!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!10!1 = (result_X!2, result_Y!2)\nreturn !10!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n"
            }
        }
    },
    "count_102": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t3428.00000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 62.00000 * 1 = 62.00\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 62.00000 * 1 = 62.00\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 62.00000 * 1 = 62.00\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): B -> {} for 2.00000 * 10 = 20.00\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): B -> {} for 2.00000 * 10 = 20.00\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 2.00000 * 1 = 2.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): B -> {} for 318.00000 * 10 = 3180.00\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): B -> {} for 2.00000 * 10 = 20.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "Y": "Total cost:\t3998.00000\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{False: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): Y -> {} for 155.00000 * 1 = 155.00\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): Y -> {} for 155.00000 * 1 = 155.00\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): Y -> {} for 155.00000 * 1 = 155.00\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): Y -> {} for 33.00000 * 10 = 330.00\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): Y -> {} for 33.00000 * 10 = 330.00\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): Y -> {} for 33.00000 * 1 = 33.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): Y -> {} for 155.00000 * 10 = 1550.00\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): Y -> {} for 129.00000 * 10 = 1290.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['Y']}\n",
                "mixed": "Total cost:\t1798.00000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['Y'], 1: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 62.00000 * 1 = 62.00\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 62.00000 * 1 = 62.00\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 62.00000 * 1 = 62.00\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): B -> {} for 2.00000 * 10 = 20.00\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): B -> {} for 2.00000 * 10 = 20.00\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 2.00000 * 1 = 2.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): Y -> ['B'] for 0.00000 * 10 = 0.00 (Y->B)\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): Y -> ['B'] for 155.00000 * 10 = 1550.00 (Y->B)\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): B -> ['Y'] for 2.00000 * 10 = 20.00 (B->Y)\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B', 'Y']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.21347\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.00789 * 1 = 0.01\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00789 * 1 = 0.01\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00789 * 1 = 0.01\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): B -> {} for 0.00021 * 10 = 0.00\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): B -> {} for 0.00021 * 10 = 0.00\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00137 * 1 = 0.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): B -> {} for 0.01826 * 10 = 0.18\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): B -> {} for 0.00016 * 10 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "Y": "Total cost:\t0.61058\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{False: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): Y -> {} for 0.07863 * 1 = 0.08\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): Y -> {} for 0.07863 * 1 = 0.08\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): Y -> {} for 0.07863 * 1 = 0.08\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): Y -> {} for 0.00347 * 10 = 0.03\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): Y -> {} for 0.00347 * 10 = 0.03\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): Y -> {} for 0.01995 * 1 = 0.02\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): Y -> {} for 0.01479 * 10 = 0.15\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): Y -> {} for 0.01374 * 10 = 0.14\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['Y']}\n",
                "mixed": "Total cost:\t0.17874\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['Y'], 1: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.00789 * 1 = 0.01\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00789 * 1 = 0.01\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00789 * 1 = 0.01\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): B -> {} for 0.00021 * 10 = 0.00\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): B -> {} for 0.00021 * 10 = 0.00\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00137 * 1 = 0.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): Y -> ['B'] for 0.00000 * 10 = 0.00 (Y->B)\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): Y -> ['B'] for 0.01479 * 10 = 0.15 (Y->B)\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): B -> ['Y'] for 0.00016 * 10 = 0.00 (B->Y)\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B', 'Y']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t1.87790\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.13846 * 1 = 0.14\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.13846 * 1 = 0.14\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.13846 * 1 = 0.14\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): B -> {} for 0.03185 * 10 = 0.32\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): B -> {} for 0.04193 * 10 = 0.42\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.02675 * 1 = 0.03\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): B -> {} for 0.03411 * 10 = 0.34\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): B -> {} for 0.03568 * 10 = 0.36\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "Y": "Total cost:\t0.39447\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{False: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): Y -> {} for 0.01475 * 1 = 0.01\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): Y -> {} for 0.01475 * 1 = 0.01\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): Y -> {} for 0.01475 * 1 = 0.01\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): Y -> {} for 0.00245 * 10 = 0.02\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): Y -> {} for 0.00282 * 10 = 0.03\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): Y -> {} for 0.00269 * 1 = 0.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): Y -> {} for 0.02351 * 10 = 0.24\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): Y -> {} for 0.00597 * 10 = 0.06\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['Y']}\n",
                "mixed": "Total cost:\t0.39447\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{False: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): Y -> {} for 0.01475 * 1 = 0.01\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): Y -> {} for 0.01475 * 1 = 0.01\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): Y -> {} for 0.01475 * 1 = 0.01\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): Y -> {} for 0.00245 * 10 = 0.02\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): Y -> {} for 0.00282 * 10 = 0.03\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): Y -> {} for 0.00269 * 1 = 0.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): Y -> {} for 0.02351 * 10 = 0.24\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): Y -> {} for 0.00597 * 10 = 0.06\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t33.00000\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 11.00000 * 1 = 11.00\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 11.00000 * 1 = 11.00\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 11.00000 * 1 = 11.00\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): A -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): A -> {} for 0.00000 * 10 = 0.00\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): A -> {} for 0.00000 * 10 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "B": "Total cost:\t0.00000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): B -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): B -> {} for 0.00000 * 10 = 0.00\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): B -> {} for 0.00000 * 10 = 0.00\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): B -> {} for 0.00000 * 10 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "X": "Total cost:\t15.00000\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 5.00000 * 1 = 5.00\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 5.00000 * 1 = 5.00\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 5.00000 * 1 = 5.00\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): A -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): A -> {} for 0.00000 * 10 = 0.00\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): A -> {} for 0.00000 * 10 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "Y": "Total cost:\t3.00000\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 1.00000 * 1 = 1.00\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 1.00000 * 1 = 1.00\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 1.00000 * 1 = 1.00\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): A -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): A -> {} for 0.00000 * 10 = 0.00\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): A -> {} for 0.00000 * 10 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): B -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): B -> {} for 0.00000 * 10 = 0.00\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): B -> {} for 0.00000 * 10 = 0.00\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): B -> {} for 0.00000 * 10 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t6.25510\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 2.04365 * 1 = 2.04\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 2.04365 * 1 = 2.04\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 2.04365 * 1 = 2.04\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): A -> {} for 0.00310 * 10 = 0.03\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): A -> {} for 0.00310 * 10 = 0.03\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.03104 * 1 = 0.03\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): A -> {} for 0.00310 * 10 = 0.03\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "B": "Total cost:\t0.01596\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.00264 * 1 = 0.00\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00264 * 1 = 0.00\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00264 * 1 = 0.00\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): B -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): B -> {} for 0.00000 * 10 = 0.00\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00011 * 1 = 0.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): B -> {} for 0.00079 * 10 = 0.01\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): B -> {} for 0.00000 * 10 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "X": "Total cost:\t0.19166\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 0.02250 * 1 = 0.02\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 0.02250 * 1 = 0.02\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 0.02250 * 1 = 0.02\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): A -> {} for 0.00310 * 10 = 0.03\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): A -> {} for 0.00310 * 10 = 0.03\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.03104 * 1 = 0.03\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): A -> {} for 0.00310 * 10 = 0.03\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "Y": "Total cost:\t0.16809\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 0.01464 * 1 = 0.01\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 0.01464 * 1 = 0.01\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 0.01464 * 1 = 0.01\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): A -> {} for 0.00310 * 10 = 0.03\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): A -> {} for 0.00310 * 10 = 0.03\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.03104 * 1 = 0.03\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): A -> {} for 0.00310 * 10 = 0.03\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "mixed": "Total cost:\t0.01596\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.00264 * 1 = 0.00\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00264 * 1 = 0.00\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00264 * 1 = 0.00\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): B -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): B -> {} for 0.00000 * 10 = 0.00\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00011 * 1 = 0.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): B -> {} for 0.00079 * 10 = 0.01\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): B -> {} for 0.00000 * 10 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t0.06517\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 0.02099 * 1 = 0.02\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 0.02099 * 1 = 0.02\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 0.02099 * 1 = 0.02\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): A -> {} for 0.00007 * 10 = 0.00\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): A -> {} for 0.00005 * 10 = 0.00\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00044 * 1 = 0.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): A -> {} for 0.00005 * 10 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "B": "Total cost:\t0.00026\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.00006 * 1 = 0.00\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00006 * 1 = 0.00\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00006 * 1 = 0.00\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): B -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): B -> {} for 0.00000 * 10 = 0.00\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): B -> {} for 0.00001 * 10 = 0.00\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): B -> {} for 0.00000 * 10 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "X": "Total cost:\t0.00729\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 0.00189 * 1 = 0.00\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 0.00189 * 1 = 0.00\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 0.00189 * 1 = 0.00\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): A -> {} for 0.00004 * 10 = 0.00\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): A -> {} for 0.00004 * 10 = 0.00\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00046 * 1 = 0.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): A -> {} for 0.00004 * 10 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "Y": "Total cost:\t0.00294\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 0.00030 * 1 = 0.00\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 0.00030 * 1 = 0.00\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 0.00030 * 1 = 0.00\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): A -> {} for 0.00005 * 10 = 0.00\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): A -> {} for 0.00005 * 10 = 0.00\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00047 * 1 = 0.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): A -> {} for 0.00005 * 10 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "mixed": "Total cost:\t0.00026\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.00006 * 1 = 0.00\n!3!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00006 * 1 = 0.00\n!5!2{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00006 * 1 = 0.00\n\ts0!2{}[!16!0] = \u03a6(!7!0{}[!16!0], s0!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!6!2{}[!16!0] = (s0!2{}[!16!0] and !5!2{}[!16!0]): B -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!16!0] = (!3!2{}[!16!0] or !6!2{}[!16!0]): B -> {} for 0.00000 * 10 = 0.00\n!2!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tc!2{}[!17!0] = \u03a6(!8!0{}[!17!0], c!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tc!3{}[!17!0] = (c!2{}[!17!0] + 1): B -> {} for 0.00001 * 10 = 0.00\n\tc!4{}[!17!0] = MUX(!2!2{}[!17!0], c!3{}[!17!0], c!2{}[!17!0]): B -> {} for 0.00000 * 10 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n"
            }
        }
    },
    "count_10s": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t2478.56000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): B -> {} for 2.00000 * 7 = 14.00\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): B -> {} for 2.00000 * 7 = 14.00\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): B -> {} for 2.24000 * 1 = 2.24\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): B -> {} for 318.00000 * 7 = 2226.00\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): B -> {} for 2.00000 * 7 = 14.00\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['B']}\n",
                "Y": "Total cost:\t3007.76000\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{False: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): Y -> {} for 173.60000 * 1 = 173.60\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): Y -> {} for 173.60000 * 1 = 173.60\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): Y -> {} for 173.60000 * 1 = 173.60\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): Y -> {} for 33.00000 * 7 = 231.00\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): Y -> {} for 33.00000 * 7 = 231.00\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): Y -> {} for 36.96000 * 1 = 36.96\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): Y -> {} for 155.00000 * 7 = 1085.00\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): Y -> {} for 129.00000 * 7 = 903.00\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['Y']}\n",
                "mixed": "Total cost:\t1337.56000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['Y'], 1: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): B -> {} for 2.00000 * 7 = 14.00\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): B -> {} for 2.00000 * 7 = 14.00\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): B -> {} for 2.24000 * 1 = 2.24\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): Y -> ['B'] for 0.00000 * 7 = 0.00 (Y->B)\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): Y -> ['B'] for 155.00000 * 7 = 1085.00 (Y->B)\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): B -> ['Y'] for 2.00000 * 7 = 14.00 (B->Y)\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['B', 'Y']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.15341\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): B -> {} for 0.00685 * 1 = 0.01\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): B -> {} for 0.00685 * 1 = 0.01\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.00685 * 1 = 0.01\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): B -> {} for 0.00021 * 7 = 0.00\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): B -> {} for 0.00021 * 7 = 0.00\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00096 * 1 = 0.00\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): B -> {} for 0.01826 * 7 = 0.13\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): B -> {} for 0.00016 * 7 = 0.00\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['B']}\n",
                "Y": "Total cost:\t0.43777\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{False: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): Y -> {} for 0.05827 * 1 = 0.06\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): Y -> {} for 0.05827 * 1 = 0.06\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): Y -> {} for 0.05827 * 1 = 0.06\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): Y -> {} for 0.00347 * 7 = 0.02\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): Y -> {} for 0.00347 * 7 = 0.02\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): Y -> {} for 0.01465 * 1 = 0.01\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): Y -> {} for 0.01479 * 7 = 0.10\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): Y -> {} for 0.01374 * 7 = 0.10\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['Y']}\n",
                "mixed": "Total cost:\t0.12909\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['Y'], 1: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): B -> {} for 0.00685 * 1 = 0.01\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): B -> {} for 0.00685 * 1 = 0.01\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.00685 * 1 = 0.01\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): B -> {} for 0.00021 * 7 = 0.00\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): B -> {} for 0.00021 * 7 = 0.00\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00096 * 1 = 0.00\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): Y -> ['B'] for 0.00000 * 7 = 0.00 (Y->B)\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): Y -> ['B'] for 0.01479 * 7 = 0.10 (Y->B)\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): B -> ['Y'] for 0.00016 * 7 = 0.00 (B->Y)\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['B', 'Y']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t1.52481\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): B -> {} for 0.16499 * 1 = 0.16\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): B -> {} for 0.16037 * 1 = 0.16\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.16037 * 1 = 0.16\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): B -> {} for 0.04193 * 7 = 0.29\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): B -> {} for 0.03185 * 7 = 0.22\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.03406 * 1 = 0.03\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): B -> {} for 0.03411 * 7 = 0.24\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): B -> {} for 0.03568 * 7 = 0.25\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['B']}\n",
                "Y": "Total cost:\t0.28921\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{False: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): Y -> {} for 0.01447 * 1 = 0.01\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): Y -> {} for 0.01489 * 1 = 0.01\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): Y -> {} for 0.01489 * 1 = 0.01\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): Y -> {} for 0.00282 * 7 = 0.02\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): Y -> {} for 0.00245 * 7 = 0.02\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): Y -> {} for 0.00168 * 1 = 0.00\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): Y -> {} for 0.02351 * 7 = 0.16\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): Y -> {} for 0.00597 * 7 = 0.04\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['Y']}\n",
                "mixed": "Total cost:\t0.28921\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{False: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): Y -> {} for 0.01447 * 1 = 0.01\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): Y -> {} for 0.01489 * 1 = 0.01\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): Y -> {} for 0.01489 * 1 = 0.01\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): Y -> {} for 0.00282 * 7 = 0.02\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): Y -> {} for 0.00245 * 7 = 0.02\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): Y -> {} for 0.00168 * 1 = 0.00\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): Y -> {} for 0.02351 * 7 = 0.16\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): Y -> {} for 0.00597 * 7 = 0.04\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t24.36000\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): A -> {} for 8.12000 * 1 = 8.12\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): A -> {} for 8.12000 * 1 = 8.12\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): A -> {} for 8.12000 * 1 = 8.12\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): A -> {} for 0.00000 * 7 = 0.00\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): A -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): A -> {} for 0.00000 * 7 = 0.00\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['A']}\n",
                "B": "Total cost:\t0.00000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): B -> {} for 0.00000 * 7 = 0.00\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): B -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): B -> {} for 0.00000 * 7 = 0.00\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['B']}\n",
                "X": "Total cost:\t11.76000\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): A -> {} for 3.92000 * 1 = 3.92\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): A -> {} for 3.92000 * 1 = 3.92\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): A -> {} for 3.92000 * 1 = 3.92\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): A -> {} for 0.00000 * 7 = 0.00\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): A -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): A -> {} for 0.00000 * 7 = 0.00\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['A']}\n",
                "Y": "Total cost:\t3.36000\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): A -> {} for 1.12000 * 1 = 1.12\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): A -> {} for 1.12000 * 1 = 1.12\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): A -> {} for 1.12000 * 1 = 1.12\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): A -> {} for 0.00000 * 7 = 0.00\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): A -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): A -> {} for 0.00000 * 7 = 0.00\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): B -> {} for 0.00000 * 7 = 0.00\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): B -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): B -> {} for 0.00000 * 7 = 0.00\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['B']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t4.29816\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): A -> {} for 1.40375 * 1 = 1.40\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): A -> {} for 1.40375 * 1 = 1.40\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): A -> {} for 1.40375 * 1 = 1.40\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): A -> {} for 0.00310 * 7 = 0.02\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): A -> {} for 0.00310 * 7 = 0.02\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.02173 * 1 = 0.02\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): A -> {} for 0.00310 * 7 = 0.02\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['A']}\n",
                "B": "Total cost:\t0.01117\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): B -> {} for 0.00185 * 1 = 0.00\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): B -> {} for 0.00185 * 1 = 0.00\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.00185 * 1 = 0.00\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): B -> {} for 0.00000 * 7 = 0.00\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): B -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00008 * 1 = 0.00\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): B -> {} for 0.00079 * 7 = 0.01\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['B']}\n",
                "X": "Total cost:\t0.13533\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): A -> {} for 0.01614 * 1 = 0.02\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): A -> {} for 0.01614 * 1 = 0.02\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): A -> {} for 0.01614 * 1 = 0.02\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): A -> {} for 0.00310 * 7 = 0.02\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): A -> {} for 0.00310 * 7 = 0.02\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.02173 * 1 = 0.02\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): A -> {} for 0.00310 * 7 = 0.02\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['A']}\n",
                "Y": "Total cost:\t0.11377\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): A -> {} for 0.00895 * 1 = 0.01\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): A -> {} for 0.00895 * 1 = 0.01\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): A -> {} for 0.00895 * 1 = 0.01\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): A -> {} for 0.00310 * 7 = 0.02\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): A -> {} for 0.00310 * 7 = 0.02\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.02173 * 1 = 0.02\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): A -> {} for 0.00310 * 7 = 0.02\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['A']}\n",
                "mixed": "Total cost:\t0.01117\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): B -> {} for 0.00185 * 1 = 0.00\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): B -> {} for 0.00185 * 1 = 0.00\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.00185 * 1 = 0.00\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): B -> {} for 0.00000 * 7 = 0.00\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): B -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00008 * 1 = 0.00\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): B -> {} for 0.00079 * 7 = 0.01\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t0.04632\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): A -> {} for 0.01489 * 1 = 0.01\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): A -> {} for 0.01495 * 1 = 0.01\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): A -> {} for 0.01495 * 1 = 0.01\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): A -> {} for 0.00005 * 7 = 0.00\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): A -> {} for 0.00007 * 7 = 0.00\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00032 * 1 = 0.00\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): A -> {} for 0.00005 * 7 = 0.00\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['A']}\n",
                "B": "Total cost:\t0.00017\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): B -> {} for 0.00005 * 1 = 0.00\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): B -> {} for 0.00000 * 7 = 0.00\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): B -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): B -> {} for 0.00001 * 7 = 0.00\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['B']}\n",
                "X": "Total cost:\t0.00541\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): A -> {} for 0.00135 * 1 = 0.00\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): A -> {} for 0.00147 * 1 = 0.00\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): A -> {} for 0.00147 * 1 = 0.00\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): A -> {} for 0.00004 * 7 = 0.00\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): A -> {} for 0.00004 * 7 = 0.00\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00032 * 1 = 0.00\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): A -> {} for 0.00004 * 7 = 0.00\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['A']}\n",
                "Y": "Total cost:\t0.00230\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): A -> {} for 0.00023 * 1 = 0.00\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): A -> {} for 0.00032 * 1 = 0.00\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): A -> {} for 0.00032 * 1 = 0.00\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): A -> {} for 0.00005 * 7 = 0.00\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): A -> {} for 0.00005 * 7 = 0.00\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00033 * 1 = 0.00\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): A -> {} for 0.00005 * 7 = 0.00\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['A']}\n",
                "mixed": "Total cost:\t0.00017\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nscount!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(scount!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!8!0{N!0}[] != !9!0{N!0}[]): B -> {} for 0.00005 * 1 = 0.00\n!3!2{N!0}[] = (!8!0{N!0}[] == !9!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\ns0!3{N!0}[] = (!8!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\n\ts0!2{}[!15!0] = \u03a6(!5!0{}[!15!0], s0!3{}[(!15!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!4!2{}[!16!0] = (s0!2{}[!16!0] or s1!2{}[!16!0]): B -> {} for 0.00000 * 7 = 0.00\n\ts1!3{}[!16!0] = (!3!2{}[!16!0] and !4!2{}[!16!0]): B -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s1!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tscount!2{}[!17!0] = \u03a6(!7!0{}[!17!0], scount!4{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tscount!3{}[!17!0] = (scount!2{}[!17!0] + 1): B -> {} for 0.00001 * 7 = 0.00\n\tscount!4{}[!17!0] = MUX(!2!2{}[!17!0], scount!3{}[!17!0], scount!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n!14!0 = drop_dim(scount!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !14!0\nOutput vars:\t{!14!0: ['B']}\n"
            }
        }
    },
    "count_123": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t2480.80000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): B -> {} for 2.00000 * 7 = 14.00\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): B -> {} for 2.00000 * 7 = 14.00\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): B -> {} for 2.24000 * 1 = 2.24\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 2.24000 * 1 = 2.24\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): B -> {} for 318.00000 * 7 = 2226.00\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): B -> {} for 2.00000 * 7 = 14.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "Y": "Total cost:\t3044.72000\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{False: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns1!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): Y -> {} for 173.60000 * 1 = 173.60\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): Y -> {} for 173.60000 * 1 = 173.60\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): Y -> {} for 173.60000 * 1 = 173.60\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): Y -> {} for 33.00000 * 7 = 231.00\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): Y -> {} for 33.00000 * 7 = 231.00\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): Y -> {} for 36.96000 * 1 = 36.96\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): Y -> {} for 36.96000 * 1 = 36.96\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): Y -> {} for 155.00000 * 7 = 1085.00\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): Y -> {} for 129.00000 * 7 = 903.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['Y']}\n",
                "mixed": "Total cost:\t1339.80000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['Y'], 1: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): B -> {} for 2.00000 * 7 = 14.00\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): B -> {} for 2.00000 * 7 = 14.00\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): B -> {} for 2.24000 * 1 = 2.24\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 2.24000 * 1 = 2.24\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): Y -> ['B'] for 0.00000 * 7 = 0.00 (Y->B)\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): Y -> ['B'] for 155.00000 * 7 = 1085.00 (Y->B)\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): B -> ['Y'] for 2.00000 * 7 = 14.00 (B->Y)\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B', 'Y']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.15437\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.00685 * 1 = 0.01\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00685 * 1 = 0.01\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00685 * 1 = 0.01\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): B -> {} for 0.00021 * 7 = 0.00\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): B -> {} for 0.00021 * 7 = 0.00\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): B -> {} for 0.00096 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.00096 * 1 = 0.00\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): B -> {} for 0.01826 * 7 = 0.13\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): B -> {} for 0.00016 * 7 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "Y": "Total cost:\t0.45242\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{False: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns1!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): Y -> {} for 0.05827 * 1 = 0.06\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): Y -> {} for 0.05827 * 1 = 0.06\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): Y -> {} for 0.05827 * 1 = 0.06\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): Y -> {} for 0.00347 * 7 = 0.02\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): Y -> {} for 0.00347 * 7 = 0.02\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): Y -> {} for 0.01465 * 1 = 0.01\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): Y -> {} for 0.01465 * 1 = 0.01\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): Y -> {} for 0.01479 * 7 = 0.10\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): Y -> {} for 0.01374 * 7 = 0.10\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['Y']}\n",
                "mixed": "Total cost:\t0.13005\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['Y'], 1: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.00685 * 1 = 0.01\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00685 * 1 = 0.01\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00685 * 1 = 0.01\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): B -> {} for 0.00021 * 7 = 0.00\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): B -> {} for 0.00021 * 7 = 0.00\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): B -> {} for 0.00096 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.00096 * 1 = 0.00\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): Y -> ['B'] for 0.00000 * 7 = 0.00 (Y->B)\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): Y -> ['B'] for 0.01479 * 7 = 0.10 (Y->B)\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): B -> ['Y'] for 0.00016 * 7 = 0.00 (B->Y)\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B', 'Y']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t1.55270\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.16037 * 1 = 0.16\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.16037 * 1 = 0.16\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.16037 * 1 = 0.16\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): B -> {} for 0.04193 * 7 = 0.29\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): B -> {} for 0.03185 * 7 = 0.22\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): B -> {} for 0.03251 * 1 = 0.03\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.03406 * 1 = 0.03\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): B -> {} for 0.03411 * 7 = 0.24\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): B -> {} for 0.03568 * 7 = 0.25\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "Y": "Total cost:\t0.29184\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{False: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns1!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): Y -> {} for 0.01489 * 1 = 0.01\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): Y -> {} for 0.01489 * 1 = 0.01\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): Y -> {} for 0.01489 * 1 = 0.01\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): Y -> {} for 0.00282 * 7 = 0.02\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): Y -> {} for 0.00245 * 7 = 0.02\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): Y -> {} for 0.00221 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): Y -> {} for 0.00168 * 1 = 0.00\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): Y -> {} for 0.02351 * 7 = 0.16\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): Y -> {} for 0.00597 * 7 = 0.04\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['Y']}\n",
                "mixed": "Total cost:\t0.29184\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{False: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns1!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): Y -> {} for 0.01489 * 1 = 0.01\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): Y -> {} for 0.01489 * 1 = 0.01\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): Y -> {} for 0.01489 * 1 = 0.01\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): Y -> {} for 0.00282 * 7 = 0.02\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): Y -> {} for 0.00245 * 7 = 0.02\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): Y -> {} for 0.00221 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): Y -> {} for 0.00168 * 1 = 0.00\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): Y -> {} for 0.02351 * 7 = 0.16\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): Y -> {} for 0.00597 * 7 = 0.04\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t24.36000\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 8.12000 * 1 = 8.12\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 8.12000 * 1 = 8.12\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 8.12000 * 1 = 8.12\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): A -> {} for 0.00000 * 7 = 0.00\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): A -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): A -> {} for 0.00000 * 7 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "B": "Total cost:\t0.00000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): B -> {} for 0.00000 * 7 = 0.00\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): B -> {} for 0.00000 * 7 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "X": "Total cost:\t11.76000\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 3.92000 * 1 = 3.92\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 3.92000 * 1 = 3.92\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 3.92000 * 1 = 3.92\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): A -> {} for 0.00000 * 7 = 0.00\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): A -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): A -> {} for 0.00000 * 7 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "Y": "Total cost:\t3.36000\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 1.12000 * 1 = 1.12\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 1.12000 * 1 = 1.12\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 1.12000 * 1 = 1.12\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): A -> {} for 0.00000 * 7 = 0.00\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): A -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): A -> {} for 0.00000 * 7 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): B -> {} for 0.00000 * 7 = 0.00\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): B -> {} for 0.00000 * 7 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t4.31989\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 1.40375 * 1 = 1.40\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 1.40375 * 1 = 1.40\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 1.40375 * 1 = 1.40\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): A -> {} for 0.00310 * 7 = 0.02\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): A -> {} for 0.00310 * 7 = 0.02\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): A -> {} for 0.02173 * 1 = 0.02\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.02173 * 1 = 0.02\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): A -> {} for 0.00310 * 7 = 0.02\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "B": "Total cost:\t0.01125\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.00185 * 1 = 0.00\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00185 * 1 = 0.00\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00185 * 1 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): B -> {} for 0.00008 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.00008 * 1 = 0.00\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): B -> {} for 0.00079 * 7 = 0.01\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): B -> {} for 0.00000 * 7 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "X": "Total cost:\t0.15706\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 0.01614 * 1 = 0.02\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 0.01614 * 1 = 0.02\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 0.01614 * 1 = 0.02\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): A -> {} for 0.00310 * 7 = 0.02\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): A -> {} for 0.00310 * 7 = 0.02\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): A -> {} for 0.02173 * 1 = 0.02\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.02173 * 1 = 0.02\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): A -> {} for 0.00310 * 7 = 0.02\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "Y": "Total cost:\t0.13550\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 0.00895 * 1 = 0.01\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 0.00895 * 1 = 0.01\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 0.00895 * 1 = 0.01\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): A -> {} for 0.00310 * 7 = 0.02\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): A -> {} for 0.00310 * 7 = 0.02\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): A -> {} for 0.02173 * 1 = 0.02\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.02173 * 1 = 0.02\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): A -> {} for 0.00310 * 7 = 0.02\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "mixed": "Total cost:\t0.01125\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.00185 * 1 = 0.00\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00185 * 1 = 0.00\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00185 * 1 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): B -> {} for 0.00008 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.00008 * 1 = 0.00\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): B -> {} for 0.00079 * 7 = 0.01\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): B -> {} for 0.00000 * 7 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t0.04668\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 0.01495 * 1 = 0.01\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 0.01495 * 1 = 0.01\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 0.01495 * 1 = 0.01\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): A -> {} for 0.00005 * 7 = 0.00\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): A -> {} for 0.00007 * 7 = 0.00\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): A -> {} for 0.00031 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.00032 * 1 = 0.00\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): A -> {} for 0.00005 * 7 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "B": "Total cost:\t0.00016\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): B -> {} for 0.00001 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): B -> {} for 0.00001 * 7 = 0.00\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): B -> {} for 0.00000 * 7 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "X": "Total cost:\t0.00585\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 0.00147 * 1 = 0.00\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 0.00147 * 1 = 0.00\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 0.00147 * 1 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): A -> {} for 0.00004 * 7 = 0.00\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): A -> {} for 0.00004 * 7 = 0.00\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): A -> {} for 0.00032 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.00032 * 1 = 0.00\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): A -> {} for 0.00004 * 7 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "Y": "Total cost:\t0.00273\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\ns1!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): A -> {} for 0.00032 * 1 = 0.00\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): A -> {} for 0.00032 * 1 = 0.00\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): A -> {} for 0.00032 * 1 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): A -> {} for 0.00005 * 7 = 0.00\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): A -> {} for 0.00005 * 7 = 0.00\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): A -> {} for 0.00034 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): A -> {} for 0.00033 * 1 = 0.00\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): A -> {} for 0.00000 * 7 = 0.00\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): A -> {} for 0.00005 * 7 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['A']}\n",
                "mixed": "Total cost:\t0.00016\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns1!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nc!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(s1!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(c!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!9!0{N!0}[] == !10!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\n!4!2{N!0}[] = (!9!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\ns1!3{N!0}[] = (!9!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\n\ts1!2{}[!16!0] = \u03a6(!6!0{}[!16!0], s1!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\ts2!2{}[!17!0] = \u03a6(!7!0{}[!17!0], s2!3{}[(!17!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\t!5!2{}[!17!0] = (s1!2{}[!17!0] or s2!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n\ts2!3{}[!17!0] = (!4!2{}[!17!0] and !5!2{}[!17!0]): B -> {} for 0.00000 * 7 = 0.00\n!2!2{N!0}[] = (s2!2{N!0}[] or s1!2{N!0}[]): B -> {} for 0.00001 * 1 = 0.00\n!3!2{N!0}[] = (!1!2{N!0}[] and !2!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tc!2{}[!18!0] = \u03a6(!8!0{}[!18!0], c!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tc!3{}[!18!0] = (c!2{}[!18!0] + 1): B -> {} for 0.00001 * 7 = 0.00\n\tc!4{}[!18!0] = MUX(!3!2{}[!18!0], c!3{}[!18!0], c!2{}[!18!0]): B -> {} for 0.00000 * 7 = 0.00\n!15!0 = drop_dim(c!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n"
            }
        }
    },
    "cryptonets_max_pooling": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t648.00000\nInput vars:\t{vals!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 213.60000 * 1 = 213.60\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 2.40000 * 1 = 2.40\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 213.60000 * 1 = 213.60\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 2.40000 * 1 = 2.40\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 213.60000 * 1 = 213.60\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 2.40000 * 1 = 2.40\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n",
                "Y": "Total cost:\t1040.40000\nInput vars:\t{vals!0: ['Y']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['Y']}\nFlags:\t\t{}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 192.00000 * 1 = 192.00\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 154.80000 * 1 = 154.80\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 192.00000 * 1 = 192.00\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 154.80000 * 1 = 154.80\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 192.00000 * 1 = 192.00\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 154.80000 * 1 = 154.80\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['Y']}\n",
                "mixed": "Total cost:\t588.00000\nInput vars:\t{vals!0: ['B', 'Y']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): Y -> ['B'] for 192.00000 * 1 = 192.00 (Y->B)\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> ['Y'] for 4.80000 * 1 = 4.80 (B->Y)\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): Y -> ['B'] for 192.00000 * 1 = 192.00 (Y->B)\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): B -> ['Y'] for 4.80000 * 1 = 4.80 (B->Y)\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): Y -> ['B'] for 192.00000 * 1 = 192.00 (Y->B)\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 2.40000 * 1 = 2.40\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.11602\nInput vars:\t{vals!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.03815 * 1 = 0.04\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00052 * 1 = 0.00\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.03815 * 1 = 0.04\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00052 * 1 = 0.00\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.03815 * 1 = 0.04\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00052 * 1 = 0.00\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n",
                "Y": "Total cost:\t0.93118\nInput vars:\t{vals!0: ['Y']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['Y']}\nFlags:\t\t{}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.15611 * 1 = 0.16\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.15428 * 1 = 0.15\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.15611 * 1 = 0.16\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.15428 * 1 = 0.15\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.15611 * 1 = 0.16\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.15428 * 1 = 0.15\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['Y']}\n",
                "mixed": "Total cost:\t0.11602\nInput vars:\t{vals!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.03815 * 1 = 0.04\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00052 * 1 = 0.00\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.03815 * 1 = 0.04\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00052 * 1 = 0.00\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.03815 * 1 = 0.04\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00052 * 1 = 0.00\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t0.58539\nInput vars:\t{vals!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.15055 * 1 = 0.15\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.04458 * 1 = 0.04\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.15055 * 1 = 0.15\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.04458 * 1 = 0.04\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.15055 * 1 = 0.15\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.04458 * 1 = 0.04\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n",
                "Y": "Total cost:\t0.18588\nInput vars:\t{vals!0: ['Y']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['Y']}\nFlags:\t\t{}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.04702 * 1 = 0.05\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.01494 * 1 = 0.01\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.04702 * 1 = 0.05\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.01494 * 1 = 0.01\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.04702 * 1 = 0.05\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.01494 * 1 = 0.01\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['Y']}\n",
                "mixed": "Total cost:\t0.18588\nInput vars:\t{vals!0: ['Y']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['Y']}\nFlags:\t\t{}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.04702 * 1 = 0.05\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.01494 * 1 = 0.01\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.04702 * 1 = 0.05\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.01494 * 1 = 0.01\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.04702 * 1 = 0.05\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.01494 * 1 = 0.01\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t96.00000\nInput vars:\t{vals!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 32.00000 * 1 = 32.00\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 32.00000 * 1 = 32.00\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 32.00000 * 1 = 32.00\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "B": "Total cost:\t0.00000\nInput vars:\t{vals!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n",
                "X": "Total cost:\t30.80000\nInput vars:\t{vals!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{X}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 10.26667 * 1 = 10.27\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 10.26667 * 1 = 10.27\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 10.26667 * 1 = 10.27\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "Y": "Total cost:\t3.60000\nInput vars:\t{vals!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{Y}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 1.20000 * 1 = 1.20\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 1.20000 * 1 = 1.20\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 1.20000 * 1 = 1.20\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{vals!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{X}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t22.70838\nInput vars:\t{vals!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 7.50738 * 1 = 7.51\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.06208 * 1 = 0.06\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 7.50738 * 1 = 7.51\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.06208 * 1 = 0.06\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 7.50738 * 1 = 7.51\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.06208 * 1 = 0.06\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "B": "Total cost:\t0.03199\nInput vars:\t{vals!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.01066 * 1 = 0.01\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.01066 * 1 = 0.01\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.01066 * 1 = 0.01\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n",
                "X": "Total cost:\t0.35011\nInput vars:\t{vals!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{X}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.05462 * 1 = 0.05\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.06208 * 1 = 0.06\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.05462 * 1 = 0.05\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.06208 * 1 = 0.06\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.05462 * 1 = 0.05\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.06208 * 1 = 0.06\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "Y": "Total cost:\t0.30119\nInput vars:\t{vals!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{Y}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.03832 * 1 = 0.04\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.06208 * 1 = 0.06\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.03832 * 1 = 0.04\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.06208 * 1 = 0.06\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.03832 * 1 = 0.04\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.06208 * 1 = 0.06\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "mixed": "Total cost:\t0.03199\nInput vars:\t{vals!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{X}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.01066 * 1 = 0.01\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.01066 * 1 = 0.01\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.01066 * 1 = 0.01\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t0.22021\nInput vars:\t{vals!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.07247 * 1 = 0.07\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00093 * 1 = 0.00\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.07247 * 1 = 0.07\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00093 * 1 = 0.00\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.07247 * 1 = 0.07\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00093 * 1 = 0.00\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "B": "Total cost:\t0.00074\nInput vars:\t{vals!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00025 * 1 = 0.00\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00025 * 1 = 0.00\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00025 * 1 = 0.00\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n",
                "X": "Total cost:\t0.01473\nInput vars:\t{vals!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{X}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00398 * 1 = 0.00\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00093 * 1 = 0.00\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00398 * 1 = 0.00\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00093 * 1 = 0.00\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00398 * 1 = 0.00\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00093 * 1 = 0.00\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "Y": "Total cost:\t0.00542\nInput vars:\t{vals!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{Y}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00089 * 1 = 0.00\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00092 * 1 = 0.00\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00089 * 1 = 0.00\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00092 * 1 = 0.00\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00089 * 1 = 0.00\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00092 * 1 = 0.00\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "mixed": "Total cost:\t0.00074\nInput vars:\t{vals!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{X}\n!4!0{ROWS_RES!0, COLS_RES!0}[] = lift(OUTPUT_res!0, (_:rows_res!0, _:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((i!1 * 2) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[((((i!1 * 2) + 1) * cols!0) + (j!1 * 2))], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{ROWS_RES!0, COLS_RES!0}[] = lift(vals!0[(((((i!1 * 2) + 1) * cols!0) + (j!1 * 2)) + 1)], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{ROWS_RES!0, COLS_RES!0}[] = lift(!4!0{ROWS_RES!0, COLS_RES!0}[], (i!1:rows_res!0, j!1:cols_res!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{ROWS_RES!0, COLS_RES!0}[] = (!7!0{ROWS_RES!0, COLS_RES!0}[] > !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00025 * 1 = 0.00\nmax!5{ROWS_RES!0, COLS_RES!0}[] = MUX(!1!3{ROWS_RES!0, COLS_RES!0}[], !7!0{ROWS_RES!0, COLS_RES!0}[], !6!0{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!2!3{ROWS_RES!0, COLS_RES!0}[] = (!9!0{ROWS_RES!0, COLS_RES!0}[] > max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00025 * 1 = 0.00\nmax!7{ROWS_RES!0, COLS_RES!0}[] = MUX(!2!3{ROWS_RES!0, COLS_RES!0}[], !9!0{ROWS_RES!0, COLS_RES!0}[], max!5{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!3!3{ROWS_RES!0, COLS_RES!0}[] = (!11!0{ROWS_RES!0, COLS_RES!0}[] > max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00025 * 1 = 0.00\nmax!9{ROWS_RES!0, COLS_RES!0}[] = MUX(!3!3{ROWS_RES!0, COLS_RES!0}[], !11!0{ROWS_RES!0, COLS_RES!0}[], max!7{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_res!3{ROWS_RES!0, COLS_RES!0}[] = VectorizedUpdate(!5!0{ROWS_RES!0, COLS_RES!0}[], [I!1, J!1], max!9{ROWS_RES!0, COLS_RES!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n"
            }
        }
    },
    "db_cross_join_trivial": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t78.75000\nInput vars:\t{B!0: ['B'], A!0: ['B'], res!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B'], 2: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 69.75000 * 1 = 69.75\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 2.25000 * 1 = 2.25\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 2.25000 * 1 = 2.25\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 2.25000 * 1 = 2.25\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 2.25000 * 1 = 2.25\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['B']}\n",
                "Y": "Total cost:\t754.87500\nInput vars:\t{B!0: ['Y'], A!0: ['Y'], res!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y'], 2: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): Y -> {} for 174.37500 * 1 = 174.38\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): Y -> {} for 145.12500 * 1 = 145.12\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): Y -> {} for 145.12500 * 1 = 145.12\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): Y -> {} for 145.12500 * 1 = 145.12\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): Y -> {} for 145.12500 * 1 = 145.12\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): Y -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['Y']}\n",
                "mixed": "Total cost:\t78.75000\nInput vars:\t{B!0: ['B'], A!0: ['B'], res!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B'], 2: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 69.75000 * 1 = 69.75\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 2.25000 * 1 = 2.25\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 2.25000 * 1 = 2.25\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 2.25000 * 1 = 2.25\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 2.25000 * 1 = 2.25\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['B']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.04638\nInput vars:\t{B!0: ['B'], A!0: ['B'], res!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B'], 2: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.04022 * 1 = 0.04\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.00154 * 1 = 0.00\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00154 * 1 = 0.00\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00154 * 1 = 0.00\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.00154 * 1 = 0.00\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['B']}\n",
                "Y": "Total cost:\t2.77453\nInput vars:\t{B!0: ['Y'], A!0: ['Y'], res!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y'], 2: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): Y -> {} for 0.54229 * 1 = 0.54\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): Y -> {} for 0.55806 * 1 = 0.56\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): Y -> {} for 0.55806 * 1 = 0.56\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): Y -> {} for 0.55806 * 1 = 0.56\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): Y -> {} for 0.55806 * 1 = 0.56\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): Y -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['Y']}\n",
                "mixed": "Total cost:\t0.04638\nInput vars:\t{B!0: ['B'], A!0: ['B'], res!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B'], 2: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.04022 * 1 = 0.04\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.00154 * 1 = 0.00\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00154 * 1 = 0.00\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00154 * 1 = 0.00\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.00154 * 1 = 0.00\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t0.32264\nInput vars:\t{B!0: ['B'], A!0: ['B'], res!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B'], 2: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.14747 * 1 = 0.15\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.04379 * 1 = 0.04\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.04379 * 1 = 0.04\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.04379 * 1 = 0.04\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.04379 * 1 = 0.04\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['B']}\n",
                "Y": "Total cost:\t0.19820\nInput vars:\t{B!0: ['Y'], A!0: ['Y'], res!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y'], 2: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): Y -> {} for 0.04002 * 1 = 0.04\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): Y -> {} for 0.03955 * 1 = 0.04\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): Y -> {} for 0.03955 * 1 = 0.04\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): Y -> {} for 0.03955 * 1 = 0.04\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): Y -> {} for 0.03955 * 1 = 0.04\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): Y -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['Y']}\n",
                "mixed": "Total cost:\t0.19820\nInput vars:\t{B!0: ['Y'], A!0: ['Y'], res!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y'], 2: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): Y -> {} for 0.04002 * 1 = 0.04\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): Y -> {} for 0.03955 * 1 = 0.04\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): Y -> {} for 0.03955 * 1 = 0.04\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): Y -> {} for 0.03955 * 1 = 0.04\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): Y -> {} for 0.03955 * 1 = 0.04\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): Y -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t82.50000\nInput vars:\t{B!0: ['A'], A!0: ['A'], res!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A'], 2: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 81.00000 * 1 = 81.00\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.37500 * 1 = 0.38\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.37500 * 1 = 0.38\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.37500 * 1 = 0.38\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.37500 * 1 = 0.38\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['A']}\n",
                "B": "Total cost:\t0.00000\nInput vars:\t{B!0: ['B'], A!0: ['B'], res!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B'], 2: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.00000 * 1 = 0.00\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.00000 * 1 = 0.00\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['B']}\n",
                "X": "Total cost:\t40.50000\nInput vars:\t{B!0: ['A'], A!0: ['A'], res!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A'], 2: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 39.00000 * 1 = 39.00\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.37500 * 1 = 0.38\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.37500 * 1 = 0.38\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.37500 * 1 = 0.38\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.37500 * 1 = 0.38\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['A']}\n",
                "Y": "Total cost:\t7.50000\nInput vars:\t{B!0: ['A'], A!0: ['A'], res!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A'], 2: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 6.00000 * 1 = 6.00\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.37500 * 1 = 0.38\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.37500 * 1 = 0.38\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.37500 * 1 = 0.38\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.37500 * 1 = 0.38\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{B!0: ['B'], A!0: ['B'], res!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B'], 2: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.00000 * 1 = 0.00\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.00000 * 1 = 0.00\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['B']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t15.77071\nInput vars:\t{B!0: ['A'], A!0: ['A'], res!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A'], 2: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 14.83873 * 1 = 14.84\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.23299 * 1 = 0.23\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.23299 * 1 = 0.23\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.23299 * 1 = 0.23\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.23299 * 1 = 0.23\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['A']}\n",
                "B": "Total cost:\t0.01951\nInput vars:\t{B!0: ['B'], A!0: ['B'], res!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B'], 2: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.01951 * 1 = 0.02\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.00000 * 1 = 0.00\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.00000 * 1 = 0.00\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['B']}\n",
                "X": "Total cost:\t1.09970\nInput vars:\t{B!0: ['A'], A!0: ['A'], res!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A'], 2: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.16773 * 1 = 0.17\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.23299 * 1 = 0.23\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.23299 * 1 = 0.23\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.23299 * 1 = 0.23\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.23299 * 1 = 0.23\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['A']}\n",
                "Y": "Total cost:\t1.04294\nInput vars:\t{B!0: ['A'], A!0: ['A'], res!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A'], 2: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.11097 * 1 = 0.11\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.23299 * 1 = 0.23\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.23299 * 1 = 0.23\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.23299 * 1 = 0.23\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.23299 * 1 = 0.23\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['A']}\n",
                "mixed": "Total cost:\t0.01951\nInput vars:\t{B!0: ['B'], A!0: ['B'], res!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B'], 2: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.01951 * 1 = 0.02\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.00000 * 1 = 0.00\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.00000 * 1 = 0.00\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t0.15942\nInput vars:\t{B!0: ['A'], A!0: ['A'], res!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A'], 2: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.14652 * 1 = 0.15\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.00323 * 1 = 0.00\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.00323 * 1 = 0.00\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.00323 * 1 = 0.00\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.00323 * 1 = 0.00\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['A']}\n",
                "B": "Total cost:\t0.00044\nInput vars:\t{B!0: ['B'], A!0: ['B'], res!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B'], 2: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00043 * 1 = 0.00\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.00000 * 1 = 0.00\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.00000 * 1 = 0.00\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['B']}\n",
                "X": "Total cost:\t0.02694\nInput vars:\t{B!0: ['A'], A!0: ['A'], res!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A'], 2: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.01406 * 1 = 0.01\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.00322 * 1 = 0.00\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.00322 * 1 = 0.00\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.00322 * 1 = 0.00\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.00322 * 1 = 0.00\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['A']}\n",
                "Y": "Total cost:\t0.01545\nInput vars:\t{B!0: ['A'], A!0: ['A'], res!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A'], 2: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.00258 * 1 = 0.00\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['A'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.00322 * 1 = 0.00\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.00322 * 1 = 0.00\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.00322 * 1 = 0.00\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): A -> {} for 0.00322 * 1 = 0.00\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['A']}\n",
                "mixed": "Total cost:\t0.00044\nInput vars:\t{B!0: ['B'], A!0: ['B'], res!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B'], 2: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!5!0{LEN_A!0, LEN_B!0, 3}[] = lift(res!0, (_:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[(i!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[(j!1 * 2)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{LEN_A!0, LEN_B!0, 3}[] = lift(A!0[((i!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{LEN_A!0, LEN_B!0, 3}[] = lift(B!0[((j!1 * 2) + 1)], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 0), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 1), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{LEN_A!0, LEN_B!0, 3}[] = lift((k!1 == 2), (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{LEN_A!0, LEN_B!0, 3}[] = lift(!5!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, _:Len_A!0, _:Len_B!0, _:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!4{LEN_A!0, LEN_B!0, 3}[] = (!8!0{LEN_A!0, LEN_B!0, 3}[] == !9!0{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00043 * 1 = 0.00\n!7!0{LEN_A!0, LEN_B!0, 3}[] = lift(!6!0{LEN_A!0, LEN_B!0, 3}[], (i!1:Len_A!0, j!1:Len_B!0, k!1:3)): _ -> ['B'] for 0.00000 * 1 = 0.00\nv!6{LEN_A!0, LEN_B!0, 3}[] = MUX(!13!0{LEN_A!0, LEN_B!0, 3}[], !8!0{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.00000 * 1 = 0.00\nv!8{LEN_A!0, LEN_B!0, 3}[] = MUX(!14!0{LEN_A!0, LEN_B!0, 3}[], !11!0{LEN_A!0, LEN_B!0, 3}[], v!6{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nv!10{LEN_A!0, LEN_B!0, 3}[] = MUX(!15!0{LEN_A!0, LEN_B!0, 3}[], !12!0{LEN_A!0, LEN_B!0, 3}[], v!8{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nv!11{LEN_A!0, LEN_B!0, 3}[] = MUX(!1!4{LEN_A!0, LEN_B!0, 3}[], v!10{LEN_A!0, LEN_B!0, 3}[], v!4): B -> {} for 0.00000 * 1 = 0.00\nres!4{LEN_A!0, LEN_B!0, 3}[] = VectorizedUpdate(!7!0{LEN_A!0, LEN_B!0, 3}[], [I!1, J!1, K!1], v!11{LEN_A!0, LEN_B!0, 3}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn res!4\nOutput vars:\t{res!4: ['B']}\n"
            }
        }
    },
    "db_variance": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t13560.48000\nInput vars:\t{A!0: ['B'], V!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{len!0: ['B']}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): B -> {} for 318.00000 * 8 = 2544.00\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): B -> {} for 2806.00000 * 1 = 2806.00\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): B -> {} for 356.16000 * 1 = 356.16\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): B -> {} for 2504.32000 * 1 = 2504.32\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): B -> {} for 318.00000 * 8 = 2544.00\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): B -> {} for 2806.00000 * 1 = 2806.00\nreturn variance!1\nOutput vars:\t{variance!1: ['B']}\n",
                "Y": "Total cost:\t20894.40000\nInput vars:\t{A!0: ['Y'], V!0: ['Y']}\nConstants:\t{0: ['Y']}\nPlaintext vars:\t{len!0: ['Y']}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): Y -> {} for 155.00000 * 8 = 1240.00\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): Y -> {} for 6340.00000 * 1 = 6340.00\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): Y -> {} for 173.60000 * 1 = 173.60\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): Y -> {} for 5560.80000 * 1 = 5560.80\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): Y -> {} for 155.00000 * 8 = 1240.00\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): Y -> {} for 6340.00000 * 1 = 6340.00\nreturn variance!1\nOutput vars:\t{variance!1: ['Y']}\n",
                "mixed": "Total cost:\t5647.24000\nInput vars:\t{A!0: ['A'], V!0: ['A']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{len!0: ['B']}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): B -> ['A'] for 1.00000 * 8 = 8.00 (B->A)\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): A -> ['B'] for 1.00000 * 8 = 8.00 (A->B)\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['A', 'B'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): B -> ['A'] for 2807.00000 * 1 = 2807.00 (B->A)\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['A', 'B'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): A -> {} for 2.24000 * 1 = 2.24\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): B -> ['A'] for 1.00000 * 8 = 8.00 (B->A)\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): A -> ['B'] for 1.00000 * 8 = 8.00 (A->B)\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['A', 'B'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): B -> {} for 2806.00000 * 1 = 2806.00\nreturn variance!1\nOutput vars:\t{variance!1: ['B']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.91421\nInput vars:\t{A!0: ['B'], V!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{len!0: ['B']}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): B -> {} for 0.01826 * 8 = 0.15\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): B -> {} for 0.16089 * 1 = 0.16\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): B -> {} for 0.03739 * 1 = 0.04\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): B -> {} for 0.26282 * 1 = 0.26\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): B -> {} for 0.01826 * 8 = 0.15\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): B -> {} for 0.16089 * 1 = 0.16\nreturn variance!1\nOutput vars:\t{variance!1: ['B']}\n",
                "Y": "Total cost:\t3.60526\nInput vars:\t{A!0: ['Y'], V!0: ['Y']}\nConstants:\t{0: ['Y']}\nPlaintext vars:\t{len!0: ['Y']}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): Y -> {} for 0.01479 * 8 = 0.12\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): Y -> {} for 0.60463 * 1 = 0.60\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): Y -> {} for 0.06536 * 1 = 0.07\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): Y -> {} for 2.09400 * 1 = 2.09\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): Y -> {} for 0.01479 * 8 = 0.12\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): Y -> {} for 0.60463 * 1 = 0.60\nreturn variance!1\nOutput vars:\t{variance!1: ['Y']}\n",
                "mixed": "Total cost:\t0.39082\nInput vars:\t{A!0: ['A'], V!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{len!0: ['B']}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['A', 'B'] for 0.01595 * 1 = 0.02 (A->B)\nexp!1 = (!4!0 / len!0): B -> ['A'] for 0.19295 * 1 = 0.19 (B->A)\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['A', 'B'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): A -> {} for 0.00509 * 1 = 0.01\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['A', 'B'] for 0.01595 * 1 = 0.02 (A->B)\nvariance!1 = (!9!0 / len!0): B -> {} for 0.16089 * 1 = 0.16\nreturn variance!1\nOutput vars:\t{variance!1: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t34.16214\nInput vars:\t{A!0: ['B'], V!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{len!0: ['B']}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): B -> {} for 0.03411 * 8 = 0.27\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): B -> {} for 16.66218 * 1 = 16.66\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): B -> {} for 0.04161 * 1 = 0.04\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): B -> {} for 0.25041 * 1 = 0.25\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): B -> {} for 0.03411 * 8 = 0.27\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): B -> {} for 16.66218 * 1 = 16.66\nreturn variance!1\nOutput vars:\t{variance!1: ['B']}\n",
                "Y": "Total cost:\t2.65216\nInput vars:\t{A!0: ['Y'], V!0: ['Y']}\nConstants:\t{0: ['Y']}\nPlaintext vars:\t{len!0: ['Y']}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): Y -> {} for 0.02351 * 8 = 0.19\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): Y -> {} for 0.76340 * 1 = 0.76\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): Y -> {} for 0.03421 * 1 = 0.03\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): Y -> {} for 0.71503 * 1 = 0.72\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): Y -> {} for 0.02351 * 8 = 0.19\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): Y -> {} for 0.76340 * 1 = 0.76\nreturn variance!1\nOutput vars:\t{variance!1: ['Y']}\n",
                "mixed": "Total cost:\t1.59191\nInput vars:\t{A!0: ['A'], V!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{len!0: ['Y']}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['A', 'Y'] for 0.02316 * 1 = 0.02 (A->Y)\nexp!1 = (!4!0 / len!0): Y -> ['A'] for 0.77225 * 1 = 0.77 (Y->A)\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['A', 'Y'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): A -> {} for 0.00012 * 1 = 0.00\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): A -> {} for 0.00983 * 1 = 0.01\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['A', 'Y'] for 0.02316 * 1 = 0.02 (A->Y)\nvariance!1 = (!9!0 / len!0): Y -> {} for 0.76340 * 1 = 0.76\nreturn variance!1\nOutput vars:\t{variance!1: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t16.00000\nInput vars:\t{A!0: ['A'], V!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{len!0: ['A']}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): A -> {} for 8.00000 * 1 = 8.00\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): A -> {} for 8.00000 * 1 = 8.00\nreturn variance!1\nOutput vars:\t{variance!1: ['A']}\n",
                "B": "N/A",
                "X": "Total cost:\t12.00000\nInput vars:\t{A!0: ['A'], V!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{len!0: ['A']}\nFlags:\t\t{X}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): A -> {} for 6.00000 * 1 = 6.00\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): A -> {} for 6.00000 * 1 = 6.00\nreturn variance!1\nOutput vars:\t{variance!1: ['A']}\n",
                "Y": "Total cost:\t0.00000\nInput vars:\t{A!0: ['A'], V!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{len!0: ['A']}\nFlags:\t\t{Y}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): A -> {} for 0.00000 * 1 = 0.00\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): A -> {} for 0.00000 * 1 = 0.00\nreturn variance!1\nOutput vars:\t{variance!1: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{A!0: ['A'], V!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{len!0: ['A']}\nFlags:\t\t{Y}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): A -> {} for 0.00000 * 1 = 0.00\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): A -> {} for 0.00000 * 1 = 0.00\nreturn variance!1\nOutput vars:\t{variance!1: ['A']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t1.74820\nInput vars:\t{A!0: ['A'], V!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{len!0: ['A']}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): A -> {} for 0.86168 * 1 = 0.86\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): A -> {} for 0.02483 * 1 = 0.02\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): A -> {} for 0.86168 * 1 = 0.86\nreturn variance!1\nOutput vars:\t{variance!1: ['A']}\n",
                "B": "N/A",
                "X": "Total cost:\t0.14534\nInput vars:\t{A!0: ['A'], V!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{len!0: ['A']}\nFlags:\t\t{X}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): A -> {} for 0.06025 * 1 = 0.06\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): A -> {} for 0.02483 * 1 = 0.02\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): A -> {} for 0.06025 * 1 = 0.06\nreturn variance!1\nOutput vars:\t{variance!1: ['A']}\n",
                "Y": "Total cost:\t0.11900\nInput vars:\t{A!0: ['A'], V!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{len!0: ['A']}\nFlags:\t\t{Y}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): A -> {} for 0.04708 * 1 = 0.05\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): A -> {} for 0.02483 * 1 = 0.02\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): A -> {} for 0.04708 * 1 = 0.05\nreturn variance!1\nOutput vars:\t{variance!1: ['A']}\n",
                "mixed": "Total cost:\t0.11900\nInput vars:\t{A!0: ['A'], V!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{len!0: ['A']}\nFlags:\t\t{Y}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): A -> {} for 0.04708 * 1 = 0.05\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): A -> {} for 0.02483 * 1 = 0.02\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): A -> {} for 0.04708 * 1 = 0.05\nreturn variance!1\nOutput vars:\t{variance!1: ['A']}\n"
            },
            "time": {
                "A": "Total cost:\t0.02190\nInput vars:\t{A!0: ['A'], V!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{len!0: ['A']}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): A -> {} for 0.01075 * 1 = 0.01\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): A -> {} for 0.00036 * 1 = 0.00\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): A -> {} for 0.01075 * 1 = 0.01\nreturn variance!1\nOutput vars:\t{variance!1: ['A']}\n",
                "B": "N/A",
                "X": "Total cost:\t0.00522\nInput vars:\t{A!0: ['A'], V!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{len!0: ['A']}\nFlags:\t\t{X}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): A -> {} for 0.00243 * 1 = 0.00\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): A -> {} for 0.00036 * 1 = 0.00\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): A -> {} for 0.00243 * 1 = 0.00\nreturn variance!1\nOutput vars:\t{variance!1: ['A']}\n",
                "Y": "Total cost:\t0.00209\nInput vars:\t{A!0: ['A'], V!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{len!0: ['A']}\nFlags:\t\t{Y}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): A -> {} for 0.00086 * 1 = 0.00\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): A -> {} for 0.00038 * 1 = 0.00\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): A -> {} for 0.00086 * 1 = 0.00\nreturn variance!1\nOutput vars:\t{variance!1: ['A']}\n",
                "mixed": "Total cost:\t0.00209\nInput vars:\t{A!0: ['A'], V!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{len!0: ['A']}\nFlags:\t\t{Y}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN!0}[] = lift(A!0[i!1], (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{LEN!0}[] = lift(V!0, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{LEN!0}[] = lift(A!0[i!2], (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nres!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{LEN!0}[] = lift(sum!1, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0}[] = lift(res!1, (i!3:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n\tsum!2{}[!10!0] = \u03a6(!2!0{}[!10!0], sum!3{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tsum!3{}[!10!0] = (sum!2{}[!10!0] + !3!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n!4!0 = drop_dim(sum!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nexp!1 = (!4!0 / len!0): A -> {} for 0.00086 * 1 = 0.00\n!7!0{LEN!0}[] = lift(exp!1, (i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ndist!2{LEN!0}[] = (!6!0{LEN!0}[] - !7!0{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!1!2{LEN!0}[] = (dist!2{LEN!0}[] * dist!2{LEN!0}[]): A -> {} for 0.00038 * 1 = 0.00\nV!2{LEN!0}[] = VectorizedUpdate(!5!0{LEN!0}[], [I!2], !1!2{LEN!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tres!2{}[!11!0] = \u03a6(!8!0{}[!11!0], res!3{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tres!3{}[!11!0] = (res!2{}[!11!0] + V!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(res!3{LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nvariance!1 = (!9!0 / len!0): A -> {} for 0.00086 * 1 = 0.00\nreturn variance!1\nOutput vars:\t{variance!1: ['A']}\n"
            }
        }
    },
    "histogram": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t2629.44000\nInput vars:\t{B!0: ['B'], A!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['B']}\nFlags:\t\t{}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): B -> {} for 69.44000 * 1 = 69.44\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): B -> {} for 318.00000 * 8 = 2544.00\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): B -> {} for 2.00000 * 8 = 16.00\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['B']}\n",
                "Y": "Total cost:\t2445.60000\nInput vars:\t{B!0: ['Y'], A!0: ['Y']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['Y']}\nFlags:\t\t{}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): Y -> {} for 173.60000 * 1 = 173.60\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): Y -> {} for 155.00000 * 8 = 1240.00\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): Y -> {} for 129.00000 * 8 = 1032.00\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): Y -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['Y']}\n",
                "mixed": "Total cost:\t1325.44000\nInput vars:\t{B!0: ['Y'], A!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['Y']}\nFlags:\t\t{}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): B -> {} for 69.44000 * 1 = 69.44\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): Y -> ['B'] for 0.00000 * 8 = 0.00 (Y->B)\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): Y -> ['B'] for 155.00000 * 8 = 1240.00 (Y->B)\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): B -> {} for 2.00000 * 8 = 16.00\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): B -> ['Y'] for 0.00000 * 8 = 0.00 (B->Y)\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['B', 'Y']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.24943\nInput vars:\t{B!0: ['B'], A!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['B']}\nFlags:\t\t{}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): B -> {} for 0.02291 * 1 = 0.02\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): B -> {} for 0.02811 * 8 = 0.22\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): B -> {} for 0.00021 * 8 = 0.00\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['B']}\n",
                "Y": "Total cost:\t0.98232\nInput vars:\t{B!0: ['Y'], A!0: ['Y']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['Y']}\nFlags:\t\t{}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): Y -> {} for 0.29305 * 1 = 0.29\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): Y -> {} for 0.04316 * 8 = 0.35\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): Y -> {} for 0.04300 * 8 = 0.34\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): Y -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['Y']}\n",
                "mixed": "Total cost:\t0.24943\nInput vars:\t{B!0: ['B'], A!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['B']}\nFlags:\t\t{}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): B -> {} for 0.02291 * 1 = 0.02\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): B -> {} for 0.02811 * 8 = 0.22\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): B -> {} for 0.00021 * 8 = 0.00\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t0.69287\nInput vars:\t{B!0: ['B'], A!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['B']}\nFlags:\t\t{}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): B -> {} for 0.15846 * 1 = 0.16\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): B -> {} for 0.03659 * 8 = 0.29\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): B -> {} for 0.03021 * 8 = 0.24\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['B']}\n",
                "Y": "Total cost:\t0.29098\nInput vars:\t{B!0: ['Y'], A!0: ['Y']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['Y']}\nFlags:\t\t{}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): Y -> {} for 0.02648 * 1 = 0.03\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): Y -> {} for 0.02610 * 8 = 0.21\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): Y -> {} for 0.00696 * 8 = 0.06\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): Y -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['Y']}\n",
                "mixed": "Total cost:\t0.29098\nInput vars:\t{B!0: ['Y'], A!0: ['Y']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['Y']}\nFlags:\t\t{}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): Y -> {} for 0.02648 * 1 = 0.03\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): Y -> {} for 0.02610 * 8 = 0.21\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): Y -> {} for 0.00696 * 8 = 0.06\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): Y -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t43.20000\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['A']}\nFlags:\t\t{}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): A -> {} for 43.20000 * 1 = 43.20\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['A']}\n",
                "B": "Total cost:\t0.00000\nInput vars:\t{B!0: ['B'], A!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['B']}\nFlags:\t\t{}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['B']}\n",
                "X": "Total cost:\t20.80000\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['A']}\nFlags:\t\t{X}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): A -> {} for 20.80000 * 1 = 20.80\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['A']}\n",
                "Y": "Total cost:\t1.12000\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['A']}\nFlags:\t\t{Y}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): A -> {} for 1.12000 * 1 = 1.12\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{B!0: ['B'], A!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['B']}\nFlags:\t\t{X}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['B']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t8.08991\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['A']}\nFlags:\t\t{}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): A -> {} for 7.96575 * 1 = 7.97\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): A -> {} for 0.01552 * 8 = 0.12\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['A']}\n",
                "B": "Total cost:\t0.04399\nInput vars:\t{B!0: ['B'], A!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['B']}\nFlags:\t\t{}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): B -> {} for 0.01044 * 1 = 0.01\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): B -> {} for 0.00419 * 8 = 0.03\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['B']}\n",
                "X": "Total cost:\t0.21388\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['A']}\nFlags:\t\t{X}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): A -> {} for 0.08972 * 1 = 0.09\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): A -> {} for 0.01552 * 8 = 0.12\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['A']}\n",
                "Y": "Total cost:\t0.18201\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['A']}\nFlags:\t\t{Y}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): A -> {} for 0.05785 * 1 = 0.06\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): A -> {} for 0.01552 * 8 = 0.12\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['A']}\n",
                "mixed": "Total cost:\t0.04399\nInput vars:\t{B!0: ['B'], A!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['B']}\nFlags:\t\t{X}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): B -> {} for 0.01044 * 1 = 0.01\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): B -> {} for 0.00419 * 8 = 0.03\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t0.08066\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['A']}\nFlags:\t\t{}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): A -> {} for 0.07892 * 1 = 0.08\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): A -> {} for 0.00022 * 8 = 0.00\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['A']}\n",
                "B": "Total cost:\t0.00117\nInput vars:\t{B!0: ['B'], A!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['B']}\nFlags:\t\t{}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): B -> {} for 0.00022 * 1 = 0.00\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): B -> {} for 0.00012 * 8 = 0.00\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['B']}\n",
                "X": "Total cost:\t0.00952\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['A']}\nFlags:\t\t{X}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): A -> {} for 0.00760 * 1 = 0.01\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): A -> {} for 0.00024 * 8 = 0.00\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['A']}\n",
                "Y": "Total cost:\t0.00331\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['A']}\nFlags:\t\t{Y}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): A -> {} for 0.00132 * 1 = 0.00\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): A -> {} for 0.00025 * 8 = 0.00\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): A -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['A']}\n",
                "mixed": "Total cost:\t0.00117\nInput vars:\t{B!0: ['B'], A!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{result!0: ['B']}\nFlags:\t\t{X}\n!2!0{NUM_BINS!0}[] = lift(result!0, (i!1:num_bins!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{NUM_BINS!0, N!0}[] = lift(A!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{NUM_BINS!0, N!0}[] = lift(i!1, (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{NUM_BINS!0, N!0}[] = lift(B!0[j!1], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{NUM_BINS!0, N!0}[] = lift(!2!0{NUM_BINS!0}[], (i!1:num_bins!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{NUM_BINS!0, N!0}[] = (!5!0{NUM_BINS!0, N!0}[] == !6!0{NUM_BINS!0, N!0}[]): B -> {} for 0.00022 * 1 = 0.00\n\tresult!2{NUM_BINS!0}[!8!0] = \u03a6(!4!0{NUM_BINS!0}[!8!0], result!3{NUM_BINS!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tval!3{NUM_BINS!0}[!8!0] = (result!2{NUM_BINS!0}[!8!0] + !7!0{NUM_BINS!0}[!8!0]): B -> {} for 0.00012 * 8 = 0.00\n\tval!5{NUM_BINS!0}[!8!0] = MUX(!1!3{NUM_BINS!0}[!8!0], val!3{NUM_BINS!0}[!8!0], result!2{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n\tresult!3{NUM_BINS!0}[!8!0] = VectorizedUpdate(result!2{NUM_BINS!0}[!8!0], [I!1, !8!0], val!5{NUM_BINS!0}[!8!0]): B -> {} for 0.00000 * 8 = 0.00\n!3!0{NUM_BINS!0}[] = drop_dim(result!3{NUM_BINS!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !3!0\nOutput vars:\t{!3!0: ['B']}\n"
            }
        }
    },
    "inner_product": {
        "MOTION": {
            "commRounds": {
                "A": "Total cost:\t2.40000\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 2.40000 * 1 = 2.40\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n",
                "B": "Total cost:\t3637.20000\nInput vars:\t{B!0: ['B'], A!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): B -> {} for 2683.20000 * 1 = 2683.20\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): B -> {} for 318.00000 * 3 = 954.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['B']}\n",
                "Y": "Total cost:\t6423.00000\nInput vars:\t{B!0: ['Y'], A!0: ['Y']}\nConstants:\t{0: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): Y -> {} for 5958.00000 * 1 = 5958.00\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): Y -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): Y -> {} for 155.00000 * 3 = 465.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['Y']}\n",
                "mixed": "Total cost:\t2.40000\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 2.40000 * 1 = 2.40\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t0.00196\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 0.00196 * 1 = 0.00\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n",
                "B": "Total cost:\t0.23983\nInput vars:\t{B!0: ['B'], A!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): B -> {} for 0.18504 * 1 = 0.19\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): B -> {} for 0.01826 * 3 = 0.05\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['B']}\n",
                "Y": "Total cost:\t1.02163\nInput vars:\t{B!0: ['Y'], A!0: ['Y']}\nConstants:\t{0: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): Y -> {} for 0.97726 * 1 = 0.98\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): Y -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): Y -> {} for 0.01479 * 3 = 0.04\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['Y']}\n",
                "mixed": "Total cost:\t0.00196\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 0.00196 * 1 = 0.00\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n"
            },
            "time": {
                "A": "Total cost:\t0.00779\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 0.00779 * 1 = 0.01\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n",
                "B": "Total cost:\t0.34347\nInput vars:\t{B!0: ['B'], A!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): B -> {} for 0.24114 * 1 = 0.24\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): B -> {} for 0.03411 * 3 = 0.10\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['B']}\n",
                "Y": "Total cost:\t1.29548\nInput vars:\t{B!0: ['Y'], A!0: ['Y']}\nConstants:\t{0: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): Y -> {} for 1.22495 * 1 = 1.22\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): Y -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): Y -> {} for 0.02351 * 3 = 0.07\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['Y']}\n",
                "mixed": "Total cost:\t0.00779\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 0.00779 * 1 = 0.01\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t0.00000\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n",
                "B": "Total cost:\t0.20000\nInput vars:\t{B!0: ['B'], A!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): B -> {} for 0.20000 * 1 = 0.20\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): B -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['B']}\n",
                "X": "Total cost:\t0.00000\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n",
                "Y": "Total cost:\t0.00000\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t0.00931\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n",
                "B": "Total cost:\t0.03153\nInput vars:\t{B!0: ['B'], A!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): B -> {} for 0.02916 * 1 = 0.03\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): B -> {} for 0.00079 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['B']}\n",
                "X": "Total cost:\t0.00931\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n",
                "Y": "Total cost:\t0.00931\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n",
                "mixed": "Total cost:\t0.00931\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n"
            },
            "time": {
                "A": "Total cost:\t0.00014\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 0.00013 * 1 = 0.00\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n",
                "B": "Total cost:\t0.00063\nInput vars:\t{B!0: ['B'], A!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nsum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): B -> {} for 0.00060 * 1 = 0.00\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): B -> {} for 0.00001 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['B']}\n",
                "X": "Total cost:\t0.00012\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 0.00012 * 1 = 0.00\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n",
                "Y": "Total cost:\t0.00014\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 0.00014 * 1 = 0.00\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n",
                "mixed": "Total cost:\t0.00012\nInput vars:\t{B!0: ['A'], A!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nsum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!0{N!0}[] = lift(A!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(B!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!0{N!0}[] = lift(sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ntemp!2{N!0}[] = (!2!0{N!0}[] * !3!0{N!0}[]): A -> {} for 0.00012 * 1 = 0.00\n\tsum!2{}[!5!0] = \u03a6(!1!0{}[!5!0], sum!3{}[(!5!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tsum!3{}[!5!0] = (sum!2{}[!5!0] + temp!2{}[!5!0]): A -> {} for 0.00000 * 3 = 0.00\n!4!0 = drop_dim(sum!3{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !4!0\nOutput vars:\t{!4!0: ['A']}\n"
            }
        }
    },
    "kmeans_iteration": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t204192.00000\nInput vars:\t{data_y!0: ['B'], data_x!0: ['B'], OUTPUT_cluster_y!0: ['B'], OUTPUT_cluster_x!0: ['B'], cluster_y!0: ['B'], cluster_x!0: ['B']}\nConstants:\t{10000: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{bestMap!0: ['B']}\nFlags:\t\t{}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): B -> {} for 318.00000 * 1 = 318.00\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): B -> {} for 318.00000 * 1 = 318.00\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): B -> {} for 2236.00000 * 1 = 2236.00\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): B -> {} for 2236.00000 * 1 = 2236.00\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): B -> {} for 318.00000 * 1 = 318.00\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): B -> {} for 178.00000 * 5 = 890.00\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): B -> {} for 2.00000 * 5 = 10.00\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): B -> {} for 2.00000 * 5 = 10.00\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): B -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): B -> {} for 62.00000 * 1 = 62.00\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): B -> {} for 318.00000 * 200 = 63600.00\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): B -> {} for 2.00000 * 200 = 400.00\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): B -> {} for 318.00000 * 200 = 63600.00\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): B -> {} for 2.00000 * 200 = 400.00\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): B -> {} for 318.00000 * 200 = 63600.00\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): B -> {} for 2.00000 * 200 = 400.00\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): B -> {} for 178.00000 * 1 = 178.00\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): B -> {} for 2806.00000 * 1 = 2806.00\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): B -> {} for 2806.00000 * 1 = 2806.00\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): B -> {} for 2.00000 * 1 = 2.00\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): B -> {} for 2.00000 * 1 = 2.00\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['B'], OUTPUT_cluster_x!2: ['B']}\n",
                "Y": "Total cost:\t196138.00000\nInput vars:\t{data_y!0: ['Y'], data_x!0: ['Y'], OUTPUT_cluster_y!0: ['Y'], OUTPUT_cluster_x!0: ['Y'], cluster_y!0: ['Y'], cluster_x!0: ['Y']}\nConstants:\t{10000: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{bestMap!0: ['Y']}\nFlags:\t\t{}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): Y -> {} for 155.00000 * 1 = 155.00\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): Y -> {} for 155.00000 * 1 = 155.00\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): Y -> {} for 4965.00000 * 1 = 4965.00\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): Y -> {} for 4965.00000 * 1 = 4965.00\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): Y -> {} for 155.00000 * 1 = 155.00\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): Y -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): Y -> {} for 160.00000 * 5 = 800.00\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): Y -> {} for 129.00000 * 5 = 645.00\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): Y -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): Y -> {} for 129.00000 * 5 = 645.00\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): Y -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): Y -> {} for 155.00000 * 1 = 155.00\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): Y -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): Y -> {} for 155.00000 * 200 = 31000.00\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): Y -> {} for 129.00000 * 200 = 25800.00\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): Y -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): Y -> {} for 155.00000 * 200 = 31000.00\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): Y -> {} for 129.00000 * 200 = 25800.00\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): Y -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): Y -> {} for 155.00000 * 200 = 31000.00\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): Y -> {} for 129.00000 * 200 = 25800.00\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): Y -> {} for 160.00000 * 1 = 160.00\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): Y -> {} for 6340.00000 * 1 = 6340.00\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): Y -> {} for 6340.00000 * 1 = 6340.00\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): Y -> {} for 129.00000 * 1 = 129.00\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): Y -> {} for 129.00000 * 1 = 129.00\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['Y'], OUTPUT_cluster_x!2: ['Y']}\n",
                "mixed": "Total cost:\t101180.00000\nInput vars:\t{data_y!0: ['A', 'Y'], data_x!0: ['A', 'Y'], OUTPUT_cluster_y!0: ['B'], OUTPUT_cluster_x!0: ['B'], cluster_y!0: ['A'], cluster_x!0: ['A']}\nConstants:\t{10000: ['Y'], 0: ['B', 'Y'], 1: ['B', 'Y']}\nPlaintext vars:\t{bestMap!0: ['B']}\nFlags:\t\t{}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A', 'Y'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A', 'Y'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 3.00000 * 1 = 3.00\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 3.00000 * 1 = 3.00\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): A -> ['B', 'Y'] for 316.00000 * 1 = 316.00 (A->B, A->Y)\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): Y -> ['B'] for 0.00000 * 5 = 0.00 (Y->B)\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): Y -> ['B'] for 160.00000 * 5 = 800.00 (Y->B)\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): B -> ['Y'] for 2.00000 * 5 = 10.00 (B->Y)\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): B -> {} for 2.00000 * 5 = 10.00\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): B -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): B -> {} for 62.00000 * 1 = 62.00\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): Y -> ['B'] for 0.00000 * 200 = 0.00 (Y->B)\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): Y -> ['B'] for 155.00000 * 200 = 31000.00 (Y->B)\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): B -> ['Y'] for 2.00000 * 200 = 400.00 (B->Y)\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): Y -> ['B'] for 0.00000 * 200 = 0.00 (Y->B)\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): Y -> ['B'] for 155.00000 * 200 = 31000.00 (Y->B)\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): B -> ['Y'] for 2.00000 * 200 = 400.00 (B->Y)\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): Y -> ['B'] for 0.00000 * 200 = 0.00 (Y->B)\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): Y -> ['B'] for 155.00000 * 200 = 31000.00 (Y->B)\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): B -> ['Y'] for 2.00000 * 200 = 400.00 (B->Y)\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): Y -> ['B'] for 160.00000 * 1 = 160.00 (Y->B)\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): B -> {} for 2806.00000 * 1 = 2806.00\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): B -> {} for 2806.00000 * 1 = 2806.00\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): B -> {} for 2.00000 * 1 = 2.00\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): B -> {} for 2.00000 * 1 = 2.00\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['B'], OUTPUT_cluster_x!2: ['B']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t62.45074\nInput vars:\t{data_y!0: ['B'], data_x!0: ['B'], OUTPUT_cluster_y!0: ['B'], OUTPUT_cluster_x!0: ['B'], cluster_y!0: ['B'], cluster_x!0: ['B']}\nConstants:\t{10000: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{bestMap!0: ['B']}\nFlags:\t\t{}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): B -> {} for 2.51863 * 1 = 2.52\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): B -> {} for 2.51863 * 1 = 2.52\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): B -> {} for 17.70974 * 1 = 17.71\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): B -> {} for 17.70974 * 1 = 17.71\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): B -> {} for 2.51863 * 1 = 2.52\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): B -> {} for 0.28874 * 5 = 1.44\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): B -> {} for 0.00395 * 5 = 0.02\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): B -> {} for 0.00395 * 5 = 0.02\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): B -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): B -> {} for 0.49100 * 1 = 0.49\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): B -> {} for 0.02811 * 200 = 5.62\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): B -> {} for 0.00021 * 200 = 0.04\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): B -> {} for 0.02811 * 200 = 5.62\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): B -> {} for 0.00021 * 200 = 0.04\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): B -> {} for 0.02811 * 200 = 5.62\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): B -> {} for 0.00021 * 200 = 0.04\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): B -> {} for 0.01574 * 1 = 0.02\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): B -> {} for 0.24779 * 1 = 0.25\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): B -> {} for 0.24779 * 1 = 0.25\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): B -> {} for 0.00021 * 1 = 0.00\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): B -> {} for 0.00021 * 1 = 0.00\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['B'], OUTPUT_cluster_x!2: ['B']}\n",
                "Y": "Total cost:\t562.22321\nInput vars:\t{data_y!0: ['Y'], data_x!0: ['Y'], OUTPUT_cluster_y!0: ['Y'], OUTPUT_cluster_x!0: ['Y'], cluster_y!0: ['Y'], cluster_x!0: ['Y']}\nConstants:\t{10000: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{bestMap!0: ['Y']}\nFlags:\t\t{}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): Y -> {} for 7.12174 * 1 = 7.12\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): Y -> {} for 7.12174 * 1 = 7.12\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): Y -> {} for 228.12437 * 1 = 228.12\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): Y -> {} for 228.12437 * 1 = 228.12\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): Y -> {} for 7.12174 * 1 = 7.12\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): Y -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): Y -> {} for 1.47642 * 5 = 7.38\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): Y -> {} for 1.47489 * 5 = 7.37\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): Y -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): Y -> {} for 1.47489 * 5 = 7.37\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): Y -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): Y -> {} for 7.12174 * 1 = 7.12\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): Y -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): Y -> {} for 0.04316 * 200 = 8.63\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): Y -> {} for 0.04300 * 200 = 8.60\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): Y -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): Y -> {} for 0.04316 * 200 = 8.63\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): Y -> {} for 0.04300 * 200 = 8.60\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): Y -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): Y -> {} for 0.04316 * 200 = 8.63\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): Y -> {} for 0.04300 * 200 = 8.60\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): Y -> {} for 0.04458 * 1 = 0.04\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): Y -> {} for 1.76558 * 1 = 1.77\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): Y -> {} for 1.76558 * 1 = 1.77\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): Y -> {} for 0.04300 * 1 = 0.04\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): Y -> {} for 0.04300 * 1 = 0.04\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['Y'], OUTPUT_cluster_x!2: ['Y']}\n",
                "mixed": "Total cost:\t28.82142\nInput vars:\t{data_y!0: ['A', 'B'], data_x!0: ['A', 'B'], OUTPUT_cluster_y!0: ['B'], OUTPUT_cluster_x!0: ['B'], cluster_y!0: ['A'], cluster_x!0: ['A']}\nConstants:\t{10000: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{bestMap!0: ['B']}\nFlags:\t\t{}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A', 'B'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A', 'B'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.62189 * 1 = 0.62\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.62189 * 1 = 0.62\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): A -> ['B'] for 8.10226 * 1 = 8.10 (A->B)\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): B -> {} for 0.28874 * 5 = 1.44\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): B -> {} for 0.00395 * 5 = 0.02\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): B -> {} for 0.00395 * 5 = 0.02\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): B -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): B -> {} for 0.49100 * 1 = 0.49\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): B -> {} for 0.02811 * 200 = 5.62\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): B -> {} for 0.00021 * 200 = 0.04\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): B -> {} for 0.02811 * 200 = 5.62\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): B -> {} for 0.00021 * 200 = 0.04\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): B -> {} for 0.02811 * 200 = 5.62\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): B -> {} for 0.00021 * 200 = 0.04\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): B -> {} for 0.01574 * 1 = 0.02\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): B -> {} for 0.24779 * 1 = 0.25\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): B -> {} for 0.24779 * 1 = 0.25\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): B -> {} for 0.00021 * 1 = 0.00\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): B -> {} for 0.00021 * 1 = 0.00\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['B'], OUTPUT_cluster_x!2: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t85.03489\nInput vars:\t{data_y!0: ['B'], data_x!0: ['B'], OUTPUT_cluster_y!0: ['B'], OUTPUT_cluster_x!0: ['B'], cluster_y!0: ['B'], cluster_x!0: ['B']}\nConstants:\t{10000: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{bestMap!0: ['B']}\nFlags:\t\t{}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): B -> {} for 0.61735 * 1 = 0.62\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): B -> {} for 0.61735 * 1 = 0.62\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): B -> {} for 4.30515 * 1 = 4.31\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): B -> {} for 4.30515 * 1 = 4.31\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): B -> {} for 0.61665 * 1 = 0.62\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): B -> {} for 0.20507 * 5 = 1.03\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): B -> {} for 0.00527 * 5 = 0.03\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): B -> {} for 0.00527 * 5 = 0.03\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): B -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): B -> {} for 0.16937 * 1 = 0.17\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): B -> {} for 0.03659 * 200 = 7.32\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): B -> {} for 0.03021 * 200 = 6.04\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): B -> {} for 0.03659 * 200 = 7.32\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): B -> {} for 0.03021 * 200 = 6.04\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): B -> {} for 0.03659 * 200 = 7.32\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): B -> {} for 0.03021 * 200 = 6.04\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): B -> {} for 0.13452 * 1 = 0.13\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): B -> {} for 16.52504 * 1 = 16.53\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): B -> {} for 16.52504 * 1 = 16.53\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): B -> {} for 0.03021 * 1 = 0.03\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): B -> {} for 0.03021 * 1 = 0.03\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['B'], OUTPUT_cluster_x!2: ['B']}\n",
                "Y": "Total cost:\t50.53785\nInput vars:\t{data_y!0: ['Y'], data_x!0: ['Y'], OUTPUT_cluster_y!0: ['Y'], OUTPUT_cluster_x!0: ['Y'], cluster_y!0: ['Y'], cluster_x!0: ['Y']}\nConstants:\t{10000: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{bestMap!0: ['Y']}\nFlags:\t\t{}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): Y -> {} for 0.41299 * 1 = 0.41\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): Y -> {} for 0.41299 * 1 = 0.41\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): Y -> {} for 12.90792 * 1 = 12.91\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): Y -> {} for 12.90792 * 1 = 12.91\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): Y -> {} for 0.40976 * 1 = 0.41\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): Y -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): Y -> {} for 0.11783 * 5 = 0.59\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): Y -> {} for 0.09220 * 5 = 0.46\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): Y -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): Y -> {} for 0.09220 * 5 = 0.46\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): Y -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): Y -> {} for 0.41103 * 1 = 0.41\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): Y -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): Y -> {} for 0.02610 * 200 = 5.22\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): Y -> {} for 0.00696 * 200 = 1.39\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): Y -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): Y -> {} for 0.02610 * 200 = 5.22\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): Y -> {} for 0.00696 * 200 = 1.39\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): Y -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): Y -> {} for 0.02610 * 200 = 5.22\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): Y -> {} for 0.00696 * 200 = 1.39\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): Y -> {} for 0.03359 * 1 = 0.03\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): Y -> {} for 0.83952 * 1 = 0.84\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): Y -> {} for 0.83952 * 1 = 0.84\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): Y -> {} for 0.00696 * 1 = 0.01\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): Y -> {} for 0.00696 * 1 = 0.01\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['Y'], OUTPUT_cluster_x!2: ['Y']}\n",
                "mixed": "Total cost:\t23.42894\nInput vars:\t{data_y!0: ['A', 'Y'], data_x!0: ['A', 'Y'], OUTPUT_cluster_y!0: ['Y'], OUTPUT_cluster_x!0: ['Y'], cluster_y!0: ['A'], cluster_x!0: ['A']}\nConstants:\t{10000: ['B'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{bestMap!0: ['B']}\nFlags:\t\t{}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A', 'Y'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A', 'Y'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.11547 * 1 = 0.12\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.11547 * 1 = 0.12\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): A -> ['B', 'Y'] for 0.81562 * 1 = 0.82 (A->B, A->Y)\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): B -> ['Y'] for 0.00000 * 5 = 0.00 (B->Y)\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): Y -> ['B'] for 0.11783 * 5 = 0.59 (Y->B)\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): B -> {} for 0.00527 * 5 = 0.03\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): B -> {} for 0.00527 * 5 = 0.03\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): B -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): B -> ['Y'] for 0.17643 * 1 = 0.18 (B->Y)\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): Y -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): Y -> {} for 0.02610 * 200 = 5.22\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): Y -> {} for 0.00696 * 200 = 1.39\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): Y -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): Y -> {} for 0.02610 * 200 = 5.22\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): Y -> {} for 0.00696 * 200 = 1.39\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): Y -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): Y -> {} for 0.02610 * 200 = 5.22\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): Y -> {} for 0.00696 * 200 = 1.39\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): Y -> {} for 0.03359 * 1 = 0.03\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): Y -> {} for 0.83952 * 1 = 0.84\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): Y -> {} for 0.83952 * 1 = 0.84\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): Y -> {} for 0.00696 * 1 = 0.01\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): Y -> {} for 0.00696 * 1 = 0.01\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['Y'], OUTPUT_cluster_x!2: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t2794.00000\nInput vars:\t{data_y!0: ['A'], data_x!0: ['A'], OUTPUT_cluster_y!0: ['A'], OUTPUT_cluster_x!0: ['A'], cluster_y!0: ['A'], cluster_x!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{bestMap!0: ['A']}\nFlags:\t\t{}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 9.00000 * 1 = 9.00\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 9.00000 * 1 = 9.00\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): A -> {} for 319.00000 * 5 = 1595.00\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): A -> {} for 2.00000 * 5 = 10.00\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): A -> {} for 2.00000 * 5 = 10.00\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): A -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): A -> {} for 1075.00000 * 1 = 1075.00\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.00000 * 200 = 0.00\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): A -> {} for 0.00000 * 200 = 0.00\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): A -> {} for 0.00000 * 200 = 0.00\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): A -> {} for 8.00000 * 1 = 8.00\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 39.00000 * 1 = 39.00\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 39.00000 * 1 = 39.00\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['A'], OUTPUT_cluster_x!2: ['A']}\n",
                "B": "N/A",
                "X": "Total cost:\t1154.00000\nInput vars:\t{data_y!0: ['A'], data_x!0: ['A'], OUTPUT_cluster_y!0: ['A'], OUTPUT_cluster_x!0: ['A'], cluster_y!0: ['A'], cluster_x!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{bestMap!0: ['A']}\nFlags:\t\t{X}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 9.00000 * 1 = 9.00\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 9.00000 * 1 = 9.00\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): A -> {} for 107.00000 * 5 = 535.00\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): A -> {} for 2.00000 * 5 = 10.00\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): A -> {} for 2.00000 * 5 = 10.00\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): A -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): A -> {} for 522.00000 * 1 = 522.00\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.00000 * 200 = 0.00\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): A -> {} for 0.00000 * 200 = 0.00\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): A -> {} for 0.00000 * 200 = 0.00\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): A -> {} for 3.00000 * 1 = 3.00\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 28.00000 * 1 = 28.00\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 28.00000 * 1 = 28.00\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['A'], OUTPUT_cluster_x!2: ['A']}\n",
                "Y": "Total cost:\t516.00000\nInput vars:\t{data_y!0: ['A'], data_x!0: ['A'], OUTPUT_cluster_y!0: ['A'], OUTPUT_cluster_x!0: ['A'], cluster_y!0: ['A'], cluster_x!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{bestMap!0: ['A']}\nFlags:\t\t{Y}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 9.00000 * 1 = 9.00\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 9.00000 * 1 = 9.00\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): A -> {} for 43.00000 * 5 = 215.00\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): A -> {} for 2.00000 * 5 = 10.00\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): A -> {} for 2.00000 * 5 = 10.00\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): A -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): A -> {} for 258.00000 * 1 = 258.00\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.00000 * 200 = 0.00\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): A -> {} for 0.00000 * 200 = 0.00\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): A -> {} for 0.00000 * 200 = 0.00\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): A -> {} for 1.00000 * 1 = 1.00\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 2.00000 * 1 = 2.00\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 2.00000 * 1 = 2.00\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['A'], OUTPUT_cluster_x!2: ['A']}\n",
                "mixed": "Total cost:\t287.00000\nInput vars:\t{data_y!0: ['A', 'B'], data_x!0: ['A', 'B'], OUTPUT_cluster_y!0: ['A'], OUTPUT_cluster_x!0: ['A'], cluster_y!0: ['A'], cluster_x!0: ['A']}\nConstants:\t{10000: ['B'], 0: ['A', 'B'], 1: ['B']}\nPlaintext vars:\t{bestMap!0: ['B']}\nFlags:\t\t{Y}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A', 'B'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A', 'B'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 9.00000 * 1 = 9.00\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 9.00000 * 1 = 9.00\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): A -> ['B'] for 246.00000 * 1 = 246.00 (A->B)\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): B -> {} for 2.00000 * 5 = 10.00\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): B -> {} for 0.00000 * 5 = 0.00\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): B -> {} for 0.00000 * 5 = 0.00\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): B -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): B -> {} for 5.00000 * 1 = 5.00\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): B -> {} for 0.00000 * 200 = 0.00\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): B -> {} for 0.00000 * 200 = 0.00\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): B -> {} for 0.00000 * 200 = 0.00\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): B -> {} for 0.00000 * 200 = 0.00\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): B -> {} for 0.00000 * 200 = 0.00\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): B -> {} for 0.00000 * 200 = 0.00\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A', 'B'] for 1.00000 * 1 = 1.00 (B->A)\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A', 'B'] for 1.00000 * 1 = 1.00 (B->A)\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A', 'B'] for 1.00000 * 1 = 1.00 (B->A)\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): A -> {} for 1.00000 * 1 = 1.00\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 2.00000 * 1 = 2.00\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 2.00000 * 1 = 2.00\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['A'], OUTPUT_cluster_x!2: ['A']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t605.79233\nInput vars:\t{data_y!0: ['A'], data_x!0: ['A'], OUTPUT_cluster_y!0: ['A'], OUTPUT_cluster_x!0: ['A'], cluster_y!0: ['A'], cluster_x!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{bestMap!0: ['A']}\nFlags:\t\t{}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 3.11381 * 1 = 3.11\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 3.11381 * 1 = 3.11\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): A -> {} for 75.07211 * 5 = 375.36\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): A -> {} for 0.62235 * 5 = 3.11\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): A -> {} for 0.62235 * 5 = 3.11\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): A -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): A -> {} for 197.85663 * 1 = 197.86\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.01552 * 200 = 3.10\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.01552 * 200 = 3.10\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): A -> {} for 0.00000 * 200 = 0.00\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): A -> {} for 0.01552 * 200 = 3.10\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): A -> {} for 1.87714 * 1 = 1.88\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 4.45194 * 1 = 4.45\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 4.45194 * 1 = 4.45\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): A -> {} for 0.01552 * 1 = 0.02\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): A -> {} for 0.01552 * 1 = 0.02\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['A'], OUTPUT_cluster_x!2: ['A']}\n",
                "B": "N/A",
                "X": "Total cost:\t27.40332\nInput vars:\t{data_y!0: ['A'], data_x!0: ['A'], OUTPUT_cluster_y!0: ['A'], OUTPUT_cluster_x!0: ['A'], cluster_y!0: ['A'], cluster_x!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{bestMap!0: ['A']}\nFlags:\t\t{X}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 3.11381 * 1 = 3.11\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 3.11381 * 1 = 3.11\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): A -> {} for 0.54910 * 5 = 2.75\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): A -> {} for 0.62235 * 5 = 3.11\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): A -> {} for 0.62235 * 5 = 3.11\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): A -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): A -> {} for 2.24868 * 1 = 2.25\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.01552 * 200 = 3.10\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.01552 * 200 = 3.10\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): A -> {} for 0.00000 * 200 = 0.00\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): A -> {} for 0.01552 * 200 = 3.10\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): A -> {} for 0.01408 * 1 = 0.01\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 0.30045 * 1 = 0.30\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 0.30045 * 1 = 0.30\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): A -> {} for 0.01552 * 1 = 0.02\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): A -> {} for 0.01552 * 1 = 0.02\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['A'], OUTPUT_cluster_x!2: ['A']}\n",
                "Y": "Total cost:\t25.83599\nInput vars:\t{data_y!0: ['A'], data_x!0: ['A'], OUTPUT_cluster_y!0: ['A'], OUTPUT_cluster_x!0: ['A'], cluster_y!0: ['A'], cluster_x!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{bestMap!0: ['A']}\nFlags:\t\t{Y}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 3.11381 * 1 = 3.11\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 3.11381 * 1 = 3.11\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): A -> {} for 0.39859 * 5 = 1.99\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): A -> {} for 0.62235 * 5 = 3.11\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): A -> {} for 0.62235 * 5 = 3.11\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): A -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): A -> {} for 1.52331 * 1 = 1.52\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.01552 * 200 = 3.10\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.01552 * 200 = 3.10\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): A -> {} for 0.00000 * 200 = 0.00\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): A -> {} for 0.01552 * 200 = 3.10\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): A -> {} for 0.00820 * 1 = 0.01\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 0.25868 * 1 = 0.26\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 0.25868 * 1 = 0.26\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): A -> {} for 0.01552 * 1 = 0.02\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): A -> {} for 0.01552 * 1 = 0.02\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['A'], OUTPUT_cluster_x!2: ['A']}\n",
                "mixed": "Total cost:\t11.93077\nInput vars:\t{data_y!0: ['A', 'B'], data_x!0: ['A', 'B'], OUTPUT_cluster_y!0: ['B'], OUTPUT_cluster_x!0: ['B'], cluster_y!0: ['A'], cluster_x!0: ['A']}\nConstants:\t{10000: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{bestMap!0: ['B']}\nFlags:\t\t{Y}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A', 'B'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A', 'B'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 3.11381 * 1 = 3.11\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 3.11381 * 1 = 3.11\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): A -> ['B'] for 1.83335 * 1 = 1.83 (A->B)\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): B -> {} for 0.10706 * 5 = 0.54\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): B -> {} for 0.00000 * 5 = 0.00\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): B -> {} for 0.00000 * 5 = 0.00\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): B -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): B -> {} for 0.26408 * 1 = 0.26\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): B -> {} for 0.00419 * 200 = 0.84\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): B -> {} for 0.00000 * 200 = 0.00\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): B -> {} for 0.00419 * 200 = 0.84\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): B -> {} for 0.00000 * 200 = 0.00\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): B -> {} for 0.00419 * 200 = 0.84\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): B -> {} for 0.00000 * 200 = 0.00\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A', 'B'] for 0.00645 * 1 = 0.01 (B->A)\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A', 'B'] for 0.00645 * 1 = 0.01 (B->A)\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A', 'B'] for 0.00645 * 1 = 0.01 (B->A)\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): B -> {} for 0.00270 * 1 = 0.00\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> ['B'] for 0.26593 * 1 = 0.27 (A->B)\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> ['B'] for 0.26593 * 1 = 0.27 (A->B)\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['B'], OUTPUT_cluster_x!2: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t5.89431\nInput vars:\t{data_y!0: ['A'], data_x!0: ['A'], OUTPUT_cluster_y!0: ['A'], OUTPUT_cluster_x!0: ['A'], cluster_y!0: ['A'], cluster_x!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{bestMap!0: ['A']}\nFlags:\t\t{}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.02879 * 1 = 0.03\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.02879 * 1 = 0.03\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00001 * 1 = 0.00\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): A -> {} for 0.71222 * 5 = 3.56\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): A -> {} for 0.00672 * 5 = 0.03\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): A -> {} for 0.00672 * 5 = 0.03\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): A -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): A -> {} for 1.95791 * 1 = 1.96\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.00022 * 200 = 0.04\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.00022 * 200 = 0.04\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): A -> {} for 0.00000 * 200 = 0.00\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): A -> {} for 0.00022 * 200 = 0.04\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): A -> {} for 0.01857 * 1 = 0.02\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 0.05064 * 1 = 0.05\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 0.05064 * 1 = 0.05\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): A -> {} for 0.00022 * 1 = 0.00\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): A -> {} for 0.00022 * 1 = 0.00\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['A'], OUTPUT_cluster_x!2: ['A']}\n",
                "B": "N/A",
                "X": "Total cost:\t0.67288\nInput vars:\t{data_y!0: ['A'], data_x!0: ['A'], OUTPUT_cluster_y!0: ['A'], OUTPUT_cluster_x!0: ['A'], cluster_y!0: ['A'], cluster_x!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{bestMap!0: ['A']}\nFlags:\t\t{X}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.02881 * 1 = 0.03\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.02881 * 1 = 0.03\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00001 * 1 = 0.00\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): A -> {} for 0.03879 * 5 = 0.19\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): A -> {} for 0.00669 * 5 = 0.03\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): A -> {} for 0.00669 * 5 = 0.03\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): A -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): A -> {} for 0.18398 * 1 = 0.18\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.00024 * 200 = 0.05\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.00024 * 200 = 0.05\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): A -> {} for 0.00000 * 200 = 0.00\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): A -> {} for 0.00024 * 200 = 0.05\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): A -> {} for 0.00109 * 1 = 0.00\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 0.01238 * 1 = 0.01\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 0.01238 * 1 = 0.01\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): A -> {} for 0.00024 * 1 = 0.00\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): A -> {} for 0.00024 * 1 = 0.00\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['A'], OUTPUT_cluster_x!2: ['A']}\n",
                "Y": "Total cost:\t0.36394\nInput vars:\t{data_y!0: ['A'], data_x!0: ['A'], OUTPUT_cluster_y!0: ['A'], OUTPUT_cluster_x!0: ['A'], cluster_y!0: ['A'], cluster_x!0: ['A']}\nConstants:\t{10000: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{bestMap!0: ['A']}\nFlags:\t\t{Y}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.02903 * 1 = 0.03\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.02903 * 1 = 0.03\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00001 * 1 = 0.00\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): A -> {} for 0.00853 * 5 = 0.04\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): A -> {} for 0.00670 * 5 = 0.03\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): A -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): A -> {} for 0.00670 * 5 = 0.03\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): A -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): A -> {} for 0.03715 * 1 = 0.04\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): A -> {} for 0.00025 * 200 = 0.05\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.00000 * 200 = 0.00\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): A -> {} for 0.00025 * 200 = 0.05\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): A -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): A -> {} for 0.00000 * 200 = 0.00\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): A -> {} for 0.00025 * 200 = 0.05\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): A -> {} for 0.00033 * 1 = 0.00\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 0.00435 * 1 = 0.00\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 0.00435 * 1 = 0.00\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): A -> {} for 0.00025 * 1 = 0.00\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): A -> {} for 0.00025 * 1 = 0.00\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['A'], OUTPUT_cluster_x!2: ['A']}\n",
                "mixed": "Total cost:\t0.21409\nInput vars:\t{data_y!0: ['A', 'B'], data_x!0: ['A', 'B'], OUTPUT_cluster_y!0: ['A'], OUTPUT_cluster_x!0: ['A'], cluster_y!0: ['A'], cluster_x!0: ['A']}\nConstants:\t{10000: ['B'], 0: ['A', 'B'], 1: ['B']}\nPlaintext vars:\t{bestMap!0: ['B']}\nFlags:\t\t{Y}\n!5!0{LEN!0}[] = lift(bestMap!0, (i!1:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbest_dist!2 = 10000: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_x!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_x!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{LEN!0, NUM_CLUSTER!0}[] = lift(cluster_y!0[c!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{LEN!0, NUM_CLUSTER!0}[] = lift(data_y!0[i!1], (i!1:len!0, c!1:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!29!0{LEN!0, NUM_CLUSTER!0}[] = lift(c!1, (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_x!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{NUM_CLUSTER!0}[] = lift(OUTPUT_cluster_y!0, (c!2:num_cluster!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval_x!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nval_y!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncount!2 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!18!0{NUM_CLUSTER!0, LEN!0}[] = lift(c!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!20!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_x!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A', 'B'] for 0.00000 * 1 = 0.00\n!21!0{NUM_CLUSTER!0, LEN!0}[] = lift(data_y!0[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['A', 'B'] for 0.00000 * 1 = 0.00\n!8!0{LEN!0, NUM_CLUSTER!0}[] = lift(!5!0{LEN!0}[], (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{LEN!0, NUM_CLUSTER!0}[] = lift(best_dist!2, (i!1:len!0, c!1:num_cluster!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nx_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!9!0{LEN!0, NUM_CLUSTER!0}[] - !10!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\ny_dist!3{LEN!0, NUM_CLUSTER!0}[] = (!11!0{LEN!0, NUM_CLUSTER!0}[] - !12!0{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!15!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_x!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{NUM_CLUSTER!0, LEN!0}[] = lift(val_y!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{NUM_CLUSTER!0, LEN!0}[] = lift(count!2, (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nx_sq!3{LEN!0, NUM_CLUSTER!0}[] = (x_dist!3{LEN!0, NUM_CLUSTER!0}[] * x_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.02903 * 1 = 0.03\ny_sq!3{LEN!0, NUM_CLUSTER!0}[] = (y_dist!3{LEN!0, NUM_CLUSTER!0}[] * y_dist!3{LEN!0, NUM_CLUSTER!0}[]): A -> {} for 0.02903 * 1 = 0.03\ndist!3{LEN!0, NUM_CLUSTER!0}[] = (x_sq!3{LEN!0, NUM_CLUSTER!0}[] + y_sq!3{LEN!0, NUM_CLUSTER!0}[]): A -> ['B'] for 0.06203 * 1 = 0.06 (A->B)\n\tbest_dist!3{LEN!0}[!30!0] = \u03a6(!7!0{LEN!0}[!30!0], best_dist!5{LEN!0}[(!30!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\t!1!3{LEN!0}[!30!0] = (dist!3{LEN!0}[!30!0] < best_dist!3{LEN!0}[!30!0]): B -> {} for 0.00177 * 5 = 0.01\n\tbest_dist!5{LEN!0}[!30!0] = MUX(!1!3{LEN!0}[!30!0], dist!3{LEN!0}[!30!0], best_dist!3{LEN!0}[!30!0]): B -> {} for 0.00000 * 5 = 0.00\n\tbestMap!2{LEN!0}[!31!0] = \u03a6(!8!0{LEN!0}[!31!0], bestMap!3{LEN!0}[(!31!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tval!5{LEN!0}[!31!0] = MUX(!1!3{LEN!0}[!31!0], !29!0{LEN!0}[!31!0], bestMap!2{LEN!0}[!31!0]): B -> {} for 0.00000 * 5 = 0.00\n\tbestMap!3{LEN!0}[!31!0] = VectorizedUpdate(bestMap!2{LEN!0}[!31!0], [I!1, !31!0], val!5{LEN!0}[!31!0]): B -> {} for 0.00000 * 5 = 0.00\n!6!0{LEN!0}[] = drop_dim(bestMap!3{LEN!0, NUM_CLUSTER!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!19!0{NUM_CLUSTER!0, LEN!0}[] = lift(!6!0{}[i!2], (c!2:num_cluster!0, i!2:len!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!2!3{NUM_CLUSTER!0, LEN!0}[] = (!18!0{NUM_CLUSTER!0, LEN!0}[] == !19!0{NUM_CLUSTER!0, LEN!0}[]): B -> {} for 0.00372 * 1 = 0.00\n\tval_x!3{NUM_CLUSTER!0}[!32!0] = \u03a6(!15!0{NUM_CLUSTER!0}[!32!0], val_x!5{NUM_CLUSTER!0}[(!32!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tval_x!4{NUM_CLUSTER!0}[!32!0] = (val_x!3{NUM_CLUSTER!0}[!32!0] + !20!0{NUM_CLUSTER!0}[!32!0]): B -> {} for 0.00012 * 200 = 0.02\n\tval_x!5{NUM_CLUSTER!0}[!32!0] = MUX(!2!3{NUM_CLUSTER!0}[!32!0], val_x!4{NUM_CLUSTER!0}[!32!0], val_x!3{NUM_CLUSTER!0}[!32!0]): B -> {} for 0.00000 * 200 = 0.00\n\tval_y!3{NUM_CLUSTER!0}[!33!0] = \u03a6(!16!0{NUM_CLUSTER!0}[!33!0], val_y!5{NUM_CLUSTER!0}[(!33!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tval_y!4{NUM_CLUSTER!0}[!33!0] = (val_y!3{NUM_CLUSTER!0}[!33!0] + !21!0{NUM_CLUSTER!0}[!33!0]): B -> {} for 0.00012 * 200 = 0.02\n\tval_y!5{NUM_CLUSTER!0}[!33!0] = MUX(!2!3{NUM_CLUSTER!0}[!33!0], val_y!4{NUM_CLUSTER!0}[!33!0], val_y!3{NUM_CLUSTER!0}[!33!0]): B -> {} for 0.00000 * 200 = 0.00\n\tcount!3{NUM_CLUSTER!0}[!34!0] = \u03a6(!17!0{NUM_CLUSTER!0}[!34!0], count!5{NUM_CLUSTER!0}[(!34!0 - 1)]): B -> {} for 0.00000 * 200 = 0.00\n\tcount!4{NUM_CLUSTER!0}[!34!0] = (count!3{NUM_CLUSTER!0}[!34!0] + 1): B -> {} for 0.00012 * 200 = 0.02\n\tcount!5{NUM_CLUSTER!0}[!34!0] = MUX(!2!3{NUM_CLUSTER!0}[!34!0], count!4{NUM_CLUSTER!0}[!34!0], count!3{NUM_CLUSTER!0}[!34!0]): B -> {} for 0.00000 * 200 = 0.00\n!23!0{NUM_CLUSTER!0}[] = drop_dim(val_x!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A', 'B'] for 0.00035 * 1 = 0.00 (B->A)\n!25!0{NUM_CLUSTER!0}[] = drop_dim(val_y!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A', 'B'] for 0.00035 * 1 = 0.00 (B->A)\n!22!0{NUM_CLUSTER!0}[] = drop_dim(count!5{NUM_CLUSTER!0, LEN!0}[]): _ -> ['A', 'B'] for 0.00035 * 1 = 0.00 (B->A)\n!3!2{NUM_CLUSTER!0}[] = (!22!0{NUM_CLUSTER!0}[] > 0): A -> {} for 0.00033 * 1 = 0.00\nval_x!6{NUM_CLUSTER!0}[] = (!23!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 0.00435 * 1 = 0.00\nval_y!6{NUM_CLUSTER!0}[] = (!25!0{NUM_CLUSTER!0}[] / !22!0{NUM_CLUSTER!0}[]): A -> {} for 0.00435 * 1 = 0.00\nval_x!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_x!6{NUM_CLUSTER!0}[], !23!0{NUM_CLUSTER!0}[]): A -> {} for 0.00025 * 1 = 0.00\nval_y!7{NUM_CLUSTER!0}[] = MUX(!3!2{NUM_CLUSTER!0}[], val_y!6{NUM_CLUSTER!0}[], !25!0{NUM_CLUSTER!0}[]): A -> {} for 0.00025 * 1 = 0.00\nOUTPUT_cluster_x!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!13!0{NUM_CLUSTER!0}[], [C!2], val_x!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nOUTPUT_cluster_y!2{NUM_CLUSTER!0}[] = VectorizedUpdate(!14!0{NUM_CLUSTER!0}[], [C!2], val_y!7{NUM_CLUSTER!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!4!1 = (OUTPUT_cluster_x!2, OUTPUT_cluster_y!2)\nreturn !4!1\nOutput vars:\t{OUTPUT_cluster_y!2: ['A'], OUTPUT_cluster_x!2: ['A']}\n"
            }
        }
    },
    "longest_102": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t5250.00000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): B -> {} for 62.00000 * 1 = 62.00\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): B -> {} for 62.00000 * 1 = 62.00\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): B -> {} for 62.00000 * 1 = 62.00\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): B -> {} for 2.00000 * 10 = 20.00\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): B -> {} for 2.00000 * 10 = 20.00\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 2.00000 * 1 = 2.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): B -> {} for 2.00000 * 1 = 2.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): B -> {} for 318.00000 * 10 = 3180.00\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): B -> {} for 2.00000 * 10 = 20.00\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): B -> {} for 178.00000 * 10 = 1780.00\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): B -> {} for 2.00000 * 10 = 20.00\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): B -> {} for 2.00000 * 10 = 20.00\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['B']}\n",
                "Y": "Total cost:\t7251.00000\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{False: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): Y -> {} for 155.00000 * 1 = 155.00\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): Y -> {} for 155.00000 * 1 = 155.00\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): Y -> {} for 155.00000 * 1 = 155.00\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): Y -> {} for 33.00000 * 10 = 330.00\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): Y -> {} for 33.00000 * 10 = 330.00\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): Y -> {} for 33.00000 * 1 = 33.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): Y -> {} for 33.00000 * 1 = 33.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): Y -> {} for 155.00000 * 10 = 1550.00\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): Y -> {} for 129.00000 * 10 = 1290.00\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): Y -> {} for 160.00000 * 10 = 1600.00\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): Y -> {} for 33.00000 * 10 = 330.00\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): Y -> {} for 129.00000 * 10 = 1290.00\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['Y']}\n",
                "mixed": "Total cost:\t3440.00000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B', 'Y'], 1: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): B -> {} for 62.00000 * 1 = 62.00\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): B -> {} for 62.00000 * 1 = 62.00\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): B -> {} for 62.00000 * 1 = 62.00\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): B -> {} for 2.00000 * 10 = 20.00\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): B -> {} for 2.00000 * 10 = 20.00\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 2.00000 * 1 = 2.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): B -> {} for 2.00000 * 1 = 2.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): Y -> ['B'] for 155.00000 * 10 = 1550.00 (Y->B)\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): B -> ['Y'] for 2.00000 * 10 = 20.00 (B->Y)\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): Y -> ['B'] for 0.00000 * 10 = 0.00 (Y->B)\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): Y -> ['B'] for 160.00000 * 10 = 1600.00 (Y->B)\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): B -> {} for 2.00000 * 10 = 20.00\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): B -> ['Y'] for 2.00000 * 10 = 20.00 (B->Y)\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['B', 'Y']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.32063\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.00789 * 1 = 0.01\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): B -> {} for 0.00789 * 1 = 0.01\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): B -> {} for 0.00789 * 1 = 0.01\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): B -> {} for 0.00021 * 10 = 0.00\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): B -> {} for 0.00021 * 10 = 0.00\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00137 * 1 = 0.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): B -> {} for 0.00137 * 1 = 0.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): B -> {} for 0.01826 * 10 = 0.18\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): B -> {} for 0.00016 * 10 = 0.00\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): B -> {} for 0.01021 * 10 = 0.10\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): B -> {} for 0.00021 * 10 = 0.00\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): B -> {} for 0.00016 * 10 = 0.00\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['B']}\n",
                "Y": "Total cost:\t0.95526\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{False: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): Y -> {} for 0.07863 * 1 = 0.08\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): Y -> {} for 0.07863 * 1 = 0.08\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): Y -> {} for 0.07863 * 1 = 0.08\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): Y -> {} for 0.00347 * 10 = 0.03\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): Y -> {} for 0.00347 * 10 = 0.03\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): Y -> {} for 0.01995 * 1 = 0.02\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): Y -> {} for 0.01995 * 1 = 0.02\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): Y -> {} for 0.01479 * 10 = 0.15\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): Y -> {} for 0.01374 * 10 = 0.14\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): Y -> {} for 0.01526 * 10 = 0.15\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): Y -> {} for 0.00347 * 10 = 0.03\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): Y -> {} for 0.01374 * 10 = 0.14\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['Y']}\n",
                "mixed": "Total cost:\t0.28589\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B', 'Y'], 1: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.00789 * 1 = 0.01\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): B -> {} for 0.00789 * 1 = 0.01\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): B -> {} for 0.00789 * 1 = 0.01\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): B -> {} for 0.00021 * 10 = 0.00\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): B -> {} for 0.00021 * 10 = 0.00\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00137 * 1 = 0.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): B -> {} for 0.00137 * 1 = 0.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): Y -> ['B'] for 0.01479 * 10 = 0.15 (Y->B)\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): B -> ['Y'] for 0.00016 * 10 = 0.00 (B->Y)\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): B -> {} for 0.01021 * 10 = 0.10\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): B -> {} for 0.00021 * 10 = 0.00\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): B -> {} for 0.00016 * 10 = 0.00\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t3.93603\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.13846 * 1 = 0.14\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): B -> {} for 0.13846 * 1 = 0.14\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): B -> {} for 0.13846 * 1 = 0.14\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): B -> {} for 0.03185 * 10 = 0.32\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): B -> {} for 0.04193 * 10 = 0.42\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.02675 * 1 = 0.03\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): B -> {} for 0.02533 * 1 = 0.03\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): B -> {} for 0.03411 * 10 = 0.34\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): B -> {} for 0.03568 * 10 = 0.36\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): B -> {} for 0.13574 * 10 = 1.36\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): B -> {} for 0.03185 * 10 = 0.32\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): B -> {} for 0.03568 * 10 = 0.36\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['B']}\n",
                "Y": "Total cost:\t0.77912\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{False: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): Y -> {} for 0.01475 * 1 = 0.01\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): Y -> {} for 0.01475 * 1 = 0.01\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): Y -> {} for 0.01475 * 1 = 0.01\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): Y -> {} for 0.00245 * 10 = 0.02\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): Y -> {} for 0.00282 * 10 = 0.03\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): Y -> {} for 0.00269 * 1 = 0.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): Y -> {} for 0.00251 * 1 = 0.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): Y -> {} for 0.02351 * 10 = 0.24\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): Y -> {} for 0.00597 * 10 = 0.06\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): Y -> {} for 0.02979 * 10 = 0.30\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): Y -> {} for 0.00245 * 10 = 0.02\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): Y -> {} for 0.00597 * 10 = 0.06\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['Y']}\n",
                "mixed": "Total cost:\t0.77912\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{False: ['Y'], 0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): Y -> {} for 0.01475 * 1 = 0.01\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): Y -> {} for 0.01475 * 1 = 0.01\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): Y -> {} for 0.01475 * 1 = 0.01\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): Y -> {} for 0.00245 * 10 = 0.02\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): Y -> {} for 0.00282 * 10 = 0.03\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): Y -> {} for 0.00269 * 1 = 0.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): Y -> {} for 0.00251 * 1 = 0.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): Y -> {} for 0.02351 * 10 = 0.24\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): Y -> {} for 0.00597 * 10 = 0.06\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): Y -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): Y -> {} for 0.02979 * 10 = 0.30\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): Y -> {} for 0.00245 * 10 = 0.02\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): Y -> {} for 0.00597 * 10 = 0.06\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t53.00000\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): A -> {} for 11.00000 * 1 = 11.00\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): A -> {} for 11.00000 * 1 = 11.00\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): A -> {} for 11.00000 * 1 = 11.00\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): A -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): A -> {} for 0.00000 * 10 = 0.00\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): A -> {} for 0.00000 * 10 = 0.00\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): A -> {} for 2.00000 * 10 = 20.00\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): A -> {} for 0.00000 * 10 = 0.00\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): A -> {} for 0.00000 * 10 = 0.00\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['A']}\n",
                "B": "Total cost:\t0.00000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): B -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): B -> {} for 0.00000 * 10 = 0.00\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): B -> {} for 0.00000 * 10 = 0.00\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): B -> {} for 0.00000 * 10 = 0.00\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): B -> {} for 0.00000 * 10 = 0.00\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): B -> {} for 0.00000 * 10 = 0.00\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): B -> {} for 0.00000 * 10 = 0.00\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['B']}\n",
                "X": "Total cost:\t25.00000\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): A -> {} for 5.00000 * 1 = 5.00\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): A -> {} for 5.00000 * 1 = 5.00\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): A -> {} for 5.00000 * 1 = 5.00\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): A -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): A -> {} for 0.00000 * 10 = 0.00\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): A -> {} for 0.00000 * 10 = 0.00\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): A -> {} for 1.00000 * 10 = 10.00\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): A -> {} for 0.00000 * 10 = 0.00\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): A -> {} for 0.00000 * 10 = 0.00\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['A']}\n",
                "Y": "Total cost:\t3.00000\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): A -> {} for 1.00000 * 1 = 1.00\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): A -> {} for 1.00000 * 1 = 1.00\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): A -> {} for 1.00000 * 1 = 1.00\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): A -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): A -> {} for 0.00000 * 10 = 0.00\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): A -> {} for 0.00000 * 10 = 0.00\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): A -> {} for 0.00000 * 10 = 0.00\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): A -> {} for 0.00000 * 10 = 0.00\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): A -> {} for 0.00000 * 10 = 0.00\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): B -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): B -> {} for 0.00000 * 10 = 0.00\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): B -> {} for 0.00000 * 10 = 0.00\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): B -> {} for 0.00000 * 10 = 0.00\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): B -> {} for 0.00000 * 10 = 0.00\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): B -> {} for 0.00000 * 10 = 0.00\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): B -> {} for 0.00000 * 10 = 0.00\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['B']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t10.10190\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): A -> {} for 2.04365 * 1 = 2.04\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): A -> {} for 2.04365 * 1 = 2.04\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): A -> {} for 2.04365 * 1 = 2.04\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): A -> {} for 0.00310 * 10 = 0.03\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): A -> {} for 0.00310 * 10 = 0.03\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.03104 * 1 = 0.03\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): A -> {} for 0.03104 * 1 = 0.03\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): A -> {} for 0.00310 * 10 = 0.03\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): A -> {} for 0.37537 * 10 = 3.75\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): A -> {} for 0.00310 * 10 = 0.03\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): A -> {} for 0.00310 * 10 = 0.03\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['A']}\n",
                "B": "Total cost:\t0.02170\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.00264 * 1 = 0.00\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): B -> {} for 0.00264 * 1 = 0.00\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): B -> {} for 0.00264 * 1 = 0.00\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): B -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): B -> {} for 0.00000 * 10 = 0.00\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00011 * 1 = 0.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): B -> {} for 0.00011 * 1 = 0.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): B -> {} for 0.00079 * 10 = 0.01\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): B -> {} for 0.00000 * 10 = 0.00\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): B -> {} for 0.00056 * 10 = 0.01\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): B -> {} for 0.00000 * 10 = 0.00\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): B -> {} for 0.00000 * 10 = 0.00\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['B']}\n",
                "X": "Total cost:\t0.31355\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): A -> {} for 0.02250 * 1 = 0.02\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): A -> {} for 0.02250 * 1 = 0.02\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): A -> {} for 0.02250 * 1 = 0.02\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): A -> {} for 0.00310 * 10 = 0.03\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): A -> {} for 0.00310 * 10 = 0.03\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.03104 * 1 = 0.03\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): A -> {} for 0.03104 * 1 = 0.03\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): A -> {} for 0.00310 * 10 = 0.03\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): A -> {} for 0.00288 * 10 = 0.03\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): A -> {} for 0.00310 * 10 = 0.03\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): A -> {} for 0.00310 * 10 = 0.03\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['A']}\n",
                "Y": "Total cost:\t0.27159\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): A -> {} for 0.01464 * 1 = 0.01\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): A -> {} for 0.01464 * 1 = 0.01\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): A -> {} for 0.01464 * 1 = 0.01\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): A -> {} for 0.00310 * 10 = 0.03\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): A -> {} for 0.00310 * 10 = 0.03\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.03104 * 1 = 0.03\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): A -> {} for 0.03104 * 1 = 0.03\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): A -> {} for 0.00310 * 10 = 0.03\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): A -> {} for 0.00104 * 10 = 0.01\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): A -> {} for 0.00310 * 10 = 0.03\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): A -> {} for 0.00310 * 10 = 0.03\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['A']}\n",
                "mixed": "Total cost:\t0.02170\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.00264 * 1 = 0.00\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): B -> {} for 0.00264 * 1 = 0.00\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): B -> {} for 0.00264 * 1 = 0.00\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): B -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): B -> {} for 0.00000 * 10 = 0.00\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00011 * 1 = 0.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): B -> {} for 0.00011 * 1 = 0.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): B -> {} for 0.00079 * 10 = 0.01\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): B -> {} for 0.00000 * 10 = 0.00\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): B -> {} for 0.00056 * 10 = 0.01\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): B -> {} for 0.00000 * 10 = 0.00\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): B -> {} for 0.00000 * 10 = 0.00\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t0.11217\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): A -> {} for 0.02099 * 1 = 0.02\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): A -> {} for 0.02099 * 1 = 0.02\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): A -> {} for 0.02099 * 1 = 0.02\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): A -> {} for 0.00007 * 10 = 0.00\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): A -> {} for 0.00005 * 10 = 0.00\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00044 * 1 = 0.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): A -> {} for 0.00044 * 1 = 0.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): A -> {} for 0.00005 * 10 = 0.00\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): A -> {} for 0.00454 * 10 = 0.05\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): A -> {} for 0.00007 * 10 = 0.00\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): A -> {} for 0.00005 * 10 = 0.00\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['A']}\n",
                "B": "Total cost:\t0.00057\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.00006 * 1 = 0.00\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): B -> {} for 0.00006 * 1 = 0.00\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): B -> {} for 0.00006 * 1 = 0.00\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): B -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): B -> {} for 0.00000 * 10 = 0.00\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): B -> {} for 0.00001 * 1 = 0.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): B -> {} for 0.00001 * 10 = 0.00\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): B -> {} for 0.00000 * 10 = 0.00\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): B -> {} for 0.00003 * 10 = 0.00\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): B -> {} for 0.00000 * 10 = 0.00\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): B -> {} for 0.00000 * 10 = 0.00\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['B']}\n",
                "X": "Total cost:\t0.01118\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): A -> {} for 0.00189 * 1 = 0.00\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): A -> {} for 0.00189 * 1 = 0.00\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): A -> {} for 0.00189 * 1 = 0.00\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): A -> {} for 0.00004 * 10 = 0.00\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): A -> {} for 0.00004 * 10 = 0.00\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00046 * 1 = 0.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): A -> {} for 0.00046 * 1 = 0.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): A -> {} for 0.00004 * 10 = 0.00\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): A -> {} for 0.00027 * 10 = 0.00\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): A -> {} for 0.00004 * 10 = 0.00\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): A -> {} for 0.00004 * 10 = 0.00\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['A']}\n",
                "Y": "Total cost:\t0.00498\nInput vars:\t{Syms!0: ['A'], Seq!0: ['A']}\nConstants:\t{False: ['A'], 0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\ns0!1 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): A -> {} for 0.00030 * 1 = 0.00\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): A -> {} for 0.00030 * 1 = 0.00\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): A -> {} for 0.00030 * 1 = 0.00\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): A -> {} for 0.00005 * 10 = 0.00\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): A -> {} for 0.00005 * 10 = 0.00\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): A -> {} for 0.00047 * 1 = 0.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): A -> {} for 0.00046 * 1 = 0.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): A -> {} for 0.00000 * 10 = 0.00\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): A -> {} for 0.00005 * 10 = 0.00\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): A -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): A -> {} for 0.00006 * 10 = 0.00\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): A -> {} for 0.00005 * 10 = 0.00\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): A -> {} for 0.00005 * 10 = 0.00\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['A']}\n",
                "mixed": "Total cost:\t0.00057\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{False: ['B'], 0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ns0!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_len!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0}[] = lift(Syms!0[2], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!15!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(s0!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(max_len!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!12!0{N!0}[] == !13!0{N!0}[]): B -> {} for 0.00006 * 1 = 0.00\n!2!2{N!0}[] = (!12!0{N!0}[] == !15!0{N!0}[]): B -> {} for 0.00006 * 1 = 0.00\n!4!2{N!0}[] = (!12!0{N!0}[] == !17!0{N!0}[]): B -> {} for 0.00006 * 1 = 0.00\n\ts0!2{}[!19!0] = \u03a6(!9!0{}[!19!0], s0!3{}[(!19!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!5!2{}[!19!0] = (s0!2{}[!19!0] and !4!2{}[!19!0]): B -> {} for 0.00000 * 10 = 0.00\n\ts0!3{}[!19!0] = (!2!2{}[!19!0] or !5!2{}[!19!0]): B -> {} for 0.00000 * 10 = 0.00\ns1!2{N!0}[] = (s0!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = (s1!2{N!0}[] or s0!3{N!0}[]): B -> {} for 0.00001 * 1 = 0.00\n\tlength!2{}[!20!0] = \u03a6(!11!0{}[!20!0], length!5{}[(!20!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\tlength!3{}[!20!0] = (length!2{}[!20!0] + 1): B -> {} for 0.00001 * 10 = 0.00\n\tlength!5{}[!20!0] = MUX(!6!2{}[!20!0], length!3{}[!20!0], length!4): B -> {} for 0.00000 * 10 = 0.00\n\tmax_len!2{}[!21!0] = \u03a6(!10!0{}[!21!0], max_len!4{}[(!21!0 - 1)]): B -> {} for 0.00000 * 10 = 0.00\n\t!7!2{}[!21!0] = (max_len!2{}[!21!0] < length!5{}[!21!0]): B -> {} for 0.00003 * 10 = 0.00\n\t!8!2{}[!21!0] = (s1!2{}[!21!0] and !7!2{}[!21!0]): B -> {} for 0.00000 * 10 = 0.00\n\tmax_len!4{}[!21!0] = MUX(!8!2{}[!21!0], length!5{}[!21!0], max_len!2{}[!21!0]): B -> {} for 0.00000 * 10 = 0.00\n!18!0 = drop_dim(max_len!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !18!0\nOutput vars:\t{!18!0: ['B']}\n"
            }
        }
    },
    "longest_1s": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t4066.96000\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): B -> {} for 66.96000 * 1 = 66.96\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): B -> {} for 318.00000 * 8 = 2544.00\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): B -> {} for 2.00000 * 8 = 16.00\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): B -> {} for 178.00000 * 8 = 1424.00\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): B -> {} for 2.00000 * 8 = 16.00\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['B']}\n",
                "Y": "Total cost:\t4751.40000\nInput vars:\t{Sym!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): Y -> {} for 167.40000 * 1 = 167.40\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): Y -> {} for 155.00000 * 8 = 1240.00\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): Y -> {} for 129.00000 * 8 = 1032.00\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): Y -> {} for 160.00000 * 8 = 1280.00\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): Y -> {} for 129.00000 * 8 = 1032.00\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['Y']}\n",
                "mixed": "Total cost:\t2618.96000\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B', 'Y'], 1: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): B -> {} for 66.96000 * 1 = 66.96\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): Y -> ['B'] for 155.00000 * 8 = 1240.00 (Y->B)\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): B -> ['Y'] for 2.00000 * 8 = 16.00 (B->Y)\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): Y -> ['B'] for 0.00000 * 8 = 0.00 (Y->B)\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): Y -> ['B'] for 160.00000 * 8 = 1280.00 (Y->B)\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): B -> ['Y'] for 2.00000 * 8 = 16.00 (B->Y)\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['B', 'Y']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.23799\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): B -> {} for 0.00767 * 1 = 0.01\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): B -> {} for 0.01826 * 8 = 0.15\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): B -> {} for 0.00016 * 8 = 0.00\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): B -> {} for 0.01021 * 8 = 0.08\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): B -> {} for 0.00016 * 8 = 0.00\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['B']}\n",
                "Y": "Total cost:\t0.53236\nInput vars:\t{Sym!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): Y -> {} for 0.07215 * 1 = 0.07\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): Y -> {} for 0.01479 * 8 = 0.12\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): Y -> {} for 0.01374 * 8 = 0.11\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): Y -> {} for 0.01526 * 8 = 0.12\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): Y -> {} for 0.01374 * 8 = 0.11\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['Y']}\n",
                "mixed": "Total cost:\t0.21020\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B', 'Y'], 1: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): B -> {} for 0.00767 * 1 = 0.01\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): Y -> ['B'] for 0.01479 * 8 = 0.12 (Y->B)\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): B -> ['Y'] for 0.00016 * 8 = 0.00 (B->Y)\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): B -> {} for 0.01021 * 8 = 0.08\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): B -> {} for 0.00016 * 8 = 0.00\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t1.94443\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): B -> {} for 0.15181 * 1 = 0.15\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): B -> {} for 0.03411 * 8 = 0.27\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): B -> {} for 0.03568 * 8 = 0.29\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): B -> {} for 0.11860 * 8 = 0.95\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): B -> {} for 0.03568 * 8 = 0.29\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['B']}\n",
                "Y": "Total cost:\t0.54849\nInput vars:\t{Sym!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): Y -> {} for 0.01523 * 1 = 0.02\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): Y -> {} for 0.02351 * 8 = 0.19\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): Y -> {} for 0.00597 * 8 = 0.05\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): Y -> {} for 0.03120 * 8 = 0.25\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): Y -> {} for 0.00597 * 8 = 0.05\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['Y']}\n",
                "mixed": "Total cost:\t0.54849\nInput vars:\t{Sym!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): Y -> {} for 0.01523 * 1 = 0.02\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): Y -> {} for 0.02351 * 8 = 0.19\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): Y -> {} for 0.00597 * 8 = 0.05\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): Y -> {} for 0.03120 * 8 = 0.25\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): Y -> {} for 0.00597 * 8 = 0.05\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t26.08000\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_length!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): A -> {} for 10.08000 * 1 = 10.08\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): A -> {} for 0.00000 * 8 = 0.00\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): A -> {} for 2.00000 * 8 = 16.00\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): A -> {} for 0.00000 * 8 = 0.00\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['A']}\n",
                "B": "Total cost:\t0.00000\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): B -> {} for 0.00000 * 8 = 0.00\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): B -> {} for 0.00000 * 8 = 0.00\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): B -> {} for 0.00000 * 8 = 0.00\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['B']}\n",
                "X": "Total cost:\t12.68000\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_length!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): A -> {} for 4.68000 * 1 = 4.68\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): A -> {} for 0.00000 * 8 = 0.00\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): A -> {} for 1.00000 * 8 = 8.00\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): A -> {} for 0.00000 * 8 = 0.00\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['A']}\n",
                "Y": "Total cost:\t1.08000\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nmax_length!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): A -> {} for 1.08000 * 1 = 1.08\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): A -> {} for 0.00000 * 8 = 0.00\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): A -> {} for 0.00000 * 8 = 0.00\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): A -> {} for 0.00000 * 8 = 0.00\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): B -> {} for 0.00000 * 8 = 0.00\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): B -> {} for 0.00000 * 8 = 0.00\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): B -> {} for 0.00000 * 8 = 0.00\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['B']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t4.88040\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_length!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): A -> {} for 1.82779 * 1 = 1.83\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): A -> {} for 0.00310 * 8 = 0.02\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): A -> {} for 0.37537 * 8 = 3.00\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): A -> {} for 0.00310 * 8 = 0.02\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['A']}\n",
                "B": "Total cost:\t0.01321\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): B -> {} for 0.00238 * 1 = 0.00\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): B -> {} for 0.00079 * 8 = 0.01\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): B -> {} for 0.00056 * 8 = 0.00\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): B -> {} for 0.00000 * 8 = 0.00\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['B']}\n",
                "X": "Total cost:\t0.09310\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_length!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): A -> {} for 0.02042 * 1 = 0.02\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): A -> {} for 0.00310 * 8 = 0.02\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): A -> {} for 0.00288 * 8 = 0.02\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): A -> {} for 0.00310 * 8 = 0.02\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['A']}\n",
                "Y": "Total cost:\t0.07059\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nmax_length!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): A -> {} for 0.01262 * 1 = 0.01\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): A -> {} for 0.00310 * 8 = 0.02\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): A -> {} for 0.00104 * 8 = 0.01\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): A -> {} for 0.00310 * 8 = 0.02\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['A']}\n",
                "mixed": "Total cost:\t0.01321\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): B -> {} for 0.00238 * 1 = 0.00\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): B -> {} for 0.00079 * 8 = 0.01\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): B -> {} for 0.00056 * 8 = 0.00\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): B -> {} for 0.00000 * 8 = 0.00\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t0.05627\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_length!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): A -> {} for 0.01900 * 1 = 0.02\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): A -> {} for 0.00005 * 8 = 0.00\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): A -> {} for 0.00455 * 8 = 0.04\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): A -> {} for 0.00005 * 8 = 0.00\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['A']}\n",
                "B": "Total cost:\t0.00021\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): B -> {} for 0.00004 * 1 = 0.00\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): B -> {} for 0.00001 * 8 = 0.00\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): B -> {} for 0.00001 * 8 = 0.00\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): B -> {} for 0.00000 * 8 = 0.00\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['B']}\n",
                "X": "Total cost:\t0.00417\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_length!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): A -> {} for 0.00176 * 1 = 0.00\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): A -> {} for 0.00004 * 8 = 0.00\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): A -> {} for 0.00023 * 8 = 0.00\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): A -> {} for 0.00004 * 8 = 0.00\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['A']}\n",
                "Y": "Total cost:\t0.00118\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nmax_length!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): A -> {} for 0.00032 * 1 = 0.00\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): A -> {} for 0.00005 * 8 = 0.00\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): A -> {} for 0.00001 * 8 = 0.00\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): A -> {} for 0.00005 * 8 = 0.00\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['A']}\n",
                "mixed": "Total cost:\t0.00021\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nlength!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!5!0{N!0}[] == !6!0{N!0}[]): B -> {} for 0.00004 * 1 = 0.00\n\tlength!2{}[!8!0] = \u03a6(!4!0{}[!8!0], length!5{}[(!8!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tlength!3{}[!8!0] = (length!2{}[!8!0] + 1): B -> {} for 0.00001 * 8 = 0.00\n\tlength!5{}[!8!0] = MUX(!1!2{}[!8!0], length!3{}[!8!0], length!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_length!2{}[!9!0] = \u03a6(!3!0{}[!9!0], max_length!4{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!2!2{}[!9!0] = (length!5{}[!9!0] > max_length!2{}[!9!0]): B -> {} for 0.00001 * 8 = 0.00\n\tmax_length!4{}[!9!0] = MUX(!2!2{}[!9!0], length!5{}[!9!0], max_length!2{}[!9!0]): B -> {} for 0.00000 * 8 = 0.00\n!7!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !7!0\nOutput vars:\t{!7!0: ['B']}\n"
            }
        }
    },
    "longest_even_0": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t2896.96000\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!7!0{N!0}[] == !8!0{N!0}[]): B -> {} for 66.96000 * 1 = 66.96\n\tcurrent_length!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_length!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tcurrent_length!3{}[!10!0] = (current_length!2{}[!10!0] + 1): B -> {} for 318.00000 * 5 = 1590.00\n\tcurrent_length!5{}[!10!0] = MUX(!1!2{}[!10!0], current_length!3{}[!10!0], current_length!4): B -> {} for 2.00000 * 5 = 10.00\n\tmax_length!2{}[!11!0] = \u03a6(!6!0{}[!11!0], max_length!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\t!2!2{}[!11!0] = (current_length!5{}[!11!0] > max_length!2{}[!11!0]): B -> {} for 178.00000 * 5 = 890.00\n\ttmp_max_len!4{}[!11!0] = MUX(!2!2{}[!11!0], current_length!5{}[!11!0], max_length!2{}[!11!0]): B -> {} for 2.00000 * 5 = 10.00\n\t!3!2{}[!11!0] = (tmp_max_len!4{}[!11!0] & 1): B -> {} for 2.00000 * 5 = 10.00\n\t!4!2{}[!11!0] = (!3!2{}[!11!0] == 0): B -> {} for 62.00000 * 5 = 310.00\n\tmax_length!4{}[!11!0] = MUX(!4!2{}[!11!0], tmp_max_len!4{}[!11!0], max_length!2{}[!11!0]): B -> {} for 2.00000 * 5 = 10.00\n!9!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n",
                "Y": "Total cost:\t5097.40000\nInput vars:\t{Sym!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!7!0{N!0}[] == !8!0{N!0}[]): Y -> {} for 167.40000 * 1 = 167.40\n\tcurrent_length!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_length!5{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 5 = 0.00\n\tcurrent_length!3{}[!10!0] = (current_length!2{}[!10!0] + 1): Y -> {} for 155.00000 * 5 = 775.00\n\tcurrent_length!5{}[!10!0] = MUX(!1!2{}[!10!0], current_length!3{}[!10!0], current_length!4): Y -> {} for 129.00000 * 5 = 645.00\n\tmax_length!2{}[!11!0] = \u03a6(!6!0{}[!11!0], max_length!4{}[(!11!0 - 1)]): Y -> {} for 0.00000 * 5 = 0.00\n\t!2!2{}[!11!0] = (current_length!5{}[!11!0] > max_length!2{}[!11!0]): Y -> {} for 160.00000 * 5 = 800.00\n\ttmp_max_len!4{}[!11!0] = MUX(!2!2{}[!11!0], current_length!5{}[!11!0], max_length!2{}[!11!0]): Y -> {} for 129.00000 * 5 = 645.00\n\t!3!2{}[!11!0] = (tmp_max_len!4{}[!11!0] & 1): Y -> {} for 129.00000 * 5 = 645.00\n\t!4!2{}[!11!0] = (!3!2{}[!11!0] == 0): Y -> {} for 155.00000 * 5 = 775.00\n\tmax_length!4{}[!11!0] = MUX(!4!2{}[!11!0], tmp_max_len!4{}[!11!0], max_length!2{}[!11!0]): Y -> {} for 129.00000 * 5 = 645.00\n!9!0 = drop_dim(max_length!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['Y']}\n",
                "mixed": "Total cost:\t1991.96000\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B', 'Y'], 1: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!7!0{N!0}[] == !8!0{N!0}[]): B -> {} for 66.96000 * 1 = 66.96\n\tcurrent_length!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_length!5{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 5 = 0.00\n\tcurrent_length!3{}[!10!0] = (current_length!2{}[!10!0] + 1): Y -> ['B'] for 155.00000 * 5 = 775.00 (Y->B)\n\tcurrent_length!5{}[!10!0] = MUX(!1!2{}[!10!0], current_length!3{}[!10!0], current_length!4): B -> ['Y'] for 2.00000 * 5 = 10.00 (B->Y)\n\tmax_length!2{}[!11!0] = \u03a6(!6!0{}[!11!0], max_length!4{}[(!11!0 - 1)]): Y -> ['B'] for 0.00000 * 5 = 0.00 (Y->B)\n\t!2!2{}[!11!0] = (current_length!5{}[!11!0] > max_length!2{}[!11!0]): Y -> ['B'] for 160.00000 * 5 = 800.00 (Y->B)\n\ttmp_max_len!4{}[!11!0] = MUX(!2!2{}[!11!0], current_length!5{}[!11!0], max_length!2{}[!11!0]): B -> {} for 2.00000 * 5 = 10.00\n\t!3!2{}[!11!0] = (tmp_max_len!4{}[!11!0] & 1): B -> {} for 2.00000 * 5 = 10.00\n\t!4!2{}[!11!0] = (!3!2{}[!11!0] == 0): B -> {} for 62.00000 * 5 = 310.00\n\tmax_length!4{}[!11!0] = MUX(!4!2{}[!11!0], tmp_max_len!4{}[!11!0], max_length!2{}[!11!0]): B -> ['Y'] for 2.00000 * 5 = 10.00 (B->Y)\n!9!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B', 'Y']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.17204\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!7!0{N!0}[] == !8!0{N!0}[]): B -> {} for 0.00625 * 1 = 0.01\n\tcurrent_length!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_length!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tcurrent_length!3{}[!10!0] = (current_length!2{}[!10!0] + 1): B -> {} for 0.01826 * 5 = 0.09\n\tcurrent_length!5{}[!10!0] = MUX(!1!2{}[!10!0], current_length!3{}[!10!0], current_length!4): B -> {} for 0.00016 * 5 = 0.00\n\tmax_length!2{}[!11!0] = \u03a6(!6!0{}[!11!0], max_length!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\t!2!2{}[!11!0] = (current_length!5{}[!11!0] > max_length!2{}[!11!0]): B -> {} for 0.01021 * 5 = 0.05\n\ttmp_max_len!4{}[!11!0] = MUX(!2!2{}[!11!0], current_length!5{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.00016 * 5 = 0.00\n\t!3!2{}[!11!0] = (tmp_max_len!4{}[!11!0] & 1): B -> {} for 0.00063 * 5 = 0.00\n\t!4!2{}[!11!0] = (!3!2{}[!11!0] == 0): B -> {} for 0.00358 * 5 = 0.02\n\tmax_length!4{}[!11!0] = MUX(!4!2{}[!11!0], tmp_max_len!4{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.00016 * 5 = 0.00\n!9!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n",
                "Y": "Total cost:\t0.54981\nInput vars:\t{Sym!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!7!0{N!0}[] == !8!0{N!0}[]): Y -> {} for 0.05087 * 1 = 0.05\n\tcurrent_length!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_length!5{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 5 = 0.00\n\tcurrent_length!3{}[!10!0] = (current_length!2{}[!10!0] + 1): Y -> {} for 0.01479 * 5 = 0.07\n\tcurrent_length!5{}[!10!0] = MUX(!1!2{}[!10!0], current_length!3{}[!10!0], current_length!4): Y -> {} for 0.01374 * 5 = 0.07\n\tmax_length!2{}[!11!0] = \u03a6(!6!0{}[!11!0], max_length!4{}[(!11!0 - 1)]): Y -> {} for 0.00000 * 5 = 0.00\n\t!2!2{}[!11!0] = (current_length!5{}[!11!0] > max_length!2{}[!11!0]): Y -> {} for 0.01526 * 5 = 0.08\n\ttmp_max_len!4{}[!11!0] = MUX(!2!2{}[!11!0], current_length!5{}[!11!0], max_length!2{}[!11!0]): Y -> {} for 0.01374 * 5 = 0.07\n\t!3!2{}[!11!0] = (tmp_max_len!4{}[!11!0] & 1): Y -> {} for 0.01374 * 5 = 0.07\n\t!4!2{}[!11!0] = (!3!2{}[!11!0] == 0): Y -> {} for 0.01479 * 5 = 0.07\n\tmax_length!4{}[!11!0] = MUX(!4!2{}[!11!0], tmp_max_len!4{}[!11!0], max_length!2{}[!11!0]): Y -> {} for 0.01374 * 5 = 0.07\n!9!0 = drop_dim(max_length!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['Y']}\n",
                "mixed": "Total cost:\t0.15467\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B', 'Y'], 1: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!7!0{N!0}[] == !8!0{N!0}[]): B -> {} for 0.00625 * 1 = 0.01\n\tcurrent_length!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_length!5{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 5 = 0.00\n\tcurrent_length!3{}[!10!0] = (current_length!2{}[!10!0] + 1): Y -> ['B'] for 0.01479 * 5 = 0.07 (Y->B)\n\tcurrent_length!5{}[!10!0] = MUX(!1!2{}[!10!0], current_length!3{}[!10!0], current_length!4): B -> ['Y'] for 0.00016 * 5 = 0.00 (B->Y)\n\tmax_length!2{}[!11!0] = \u03a6(!6!0{}[!11!0], max_length!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\t!2!2{}[!11!0] = (current_length!5{}[!11!0] > max_length!2{}[!11!0]): B -> {} for 0.01021 * 5 = 0.05\n\ttmp_max_len!4{}[!11!0] = MUX(!2!2{}[!11!0], current_length!5{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.00016 * 5 = 0.00\n\t!3!2{}[!11!0] = (tmp_max_len!4{}[!11!0] & 1): B -> {} for 0.00063 * 5 = 0.00\n\t!4!2{}[!11!0] = (!3!2{}[!11!0] == 0): B -> {} for 0.00358 * 5 = 0.02\n\tmax_length!4{}[!11!0] = MUX(!4!2{}[!11!0], tmp_max_len!4{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.00016 * 5 = 0.00\n!9!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t2.33618\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!7!0{N!0}[] == !8!0{N!0}[]): B -> {} for 0.15558 * 1 = 0.16\n\tcurrent_length!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_length!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tcurrent_length!3{}[!10!0] = (current_length!2{}[!10!0] + 1): B -> {} for 0.03411 * 5 = 0.17\n\tcurrent_length!5{}[!10!0] = MUX(!1!2{}[!10!0], current_length!3{}[!10!0], current_length!4): B -> {} for 0.03568 * 5 = 0.18\n\tmax_length!2{}[!11!0] = \u03a6(!6!0{}[!11!0], max_length!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\t!2!2{}[!11!0] = (current_length!5{}[!11!0] > max_length!2{}[!11!0]): B -> {} for 0.11860 * 5 = 0.59\n\ttmp_max_len!4{}[!11!0] = MUX(!2!2{}[!11!0], current_length!5{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.03568 * 5 = 0.18\n\t!3!2{}[!11!0] = (tmp_max_len!4{}[!11!0] & 1): B -> {} for 0.03652 * 5 = 0.18\n\t!4!2{}[!11!0] = (!3!2{}[!11!0] == 0): B -> {} for 0.13983 * 5 = 0.70\n\tmax_length!4{}[!11!0] = MUX(!4!2{}[!11!0], tmp_max_len!4{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.03568 * 5 = 0.18\n!9!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n",
                "Y": "Total cost:\t0.46161\nInput vars:\t{Sym!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!7!0{N!0}[] == !8!0{N!0}[]): Y -> {} for 0.01407 * 1 = 0.01\n\tcurrent_length!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_length!5{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 5 = 0.00\n\tcurrent_length!3{}[!10!0] = (current_length!2{}[!10!0] + 1): Y -> {} for 0.02351 * 5 = 0.12\n\tcurrent_length!5{}[!10!0] = MUX(!1!2{}[!10!0], current_length!3{}[!10!0], current_length!4): Y -> {} for 0.00597 * 5 = 0.03\n\tmax_length!2{}[!11!0] = \u03a6(!6!0{}[!11!0], max_length!4{}[(!11!0 - 1)]): Y -> {} for 0.00000 * 5 = 0.00\n\t!2!2{}[!11!0] = (current_length!5{}[!11!0] > max_length!2{}[!11!0]): Y -> {} for 0.03120 * 5 = 0.16\n\ttmp_max_len!4{}[!11!0] = MUX(!2!2{}[!11!0], current_length!5{}[!11!0], max_length!2{}[!11!0]): Y -> {} for 0.00597 * 5 = 0.03\n\t!3!2{}[!11!0] = (tmp_max_len!4{}[!11!0] & 1): Y -> {} for 0.00738 * 5 = 0.04\n\t!4!2{}[!11!0] = (!3!2{}[!11!0] == 0): Y -> {} for 0.00950 * 5 = 0.05\n\tmax_length!4{}[!11!0] = MUX(!4!2{}[!11!0], tmp_max_len!4{}[!11!0], max_length!2{}[!11!0]): Y -> {} for 0.00597 * 5 = 0.03\n!9!0 = drop_dim(max_length!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['Y']}\n",
                "mixed": "Total cost:\t0.46161\nInput vars:\t{Sym!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!7!0{N!0}[] == !8!0{N!0}[]): Y -> {} for 0.01407 * 1 = 0.01\n\tcurrent_length!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_length!5{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 5 = 0.00\n\tcurrent_length!3{}[!10!0] = (current_length!2{}[!10!0] + 1): Y -> {} for 0.02351 * 5 = 0.12\n\tcurrent_length!5{}[!10!0] = MUX(!1!2{}[!10!0], current_length!3{}[!10!0], current_length!4): Y -> {} for 0.00597 * 5 = 0.03\n\tmax_length!2{}[!11!0] = \u03a6(!6!0{}[!11!0], max_length!4{}[(!11!0 - 1)]): Y -> {} for 0.00000 * 5 = 0.00\n\t!2!2{}[!11!0] = (current_length!5{}[!11!0] > max_length!2{}[!11!0]): Y -> {} for 0.03120 * 5 = 0.16\n\ttmp_max_len!4{}[!11!0] = MUX(!2!2{}[!11!0], current_length!5{}[!11!0], max_length!2{}[!11!0]): Y -> {} for 0.00597 * 5 = 0.03\n\t!3!2{}[!11!0] = (tmp_max_len!4{}[!11!0] & 1): Y -> {} for 0.00738 * 5 = 0.04\n\t!4!2{}[!11!0] = (!3!2{}[!11!0] == 0): Y -> {} for 0.00950 * 5 = 0.05\n\tmax_length!4{}[!11!0] = MUX(!4!2{}[!11!0], tmp_max_len!4{}[!11!0], max_length!2{}[!11!0]): Y -> {} for 0.00597 * 5 = 0.03\n!9!0 = drop_dim(max_length!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t0.00000\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!7!0{N!0}[] == !8!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_length!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_length!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tcurrent_length!3{}[!10!0] = (current_length!2{}[!10!0] + 1): B -> {} for 0.00000 * 5 = 0.00\n\tcurrent_length!5{}[!10!0] = MUX(!1!2{}[!10!0], current_length!3{}[!10!0], current_length!4): B -> {} for 0.00000 * 5 = 0.00\n\tmax_length!2{}[!11!0] = \u03a6(!6!0{}[!11!0], max_length!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\t!2!2{}[!11!0] = (current_length!5{}[!11!0] > max_length!2{}[!11!0]): B -> {} for 0.00000 * 5 = 0.00\n\ttmp_max_len!4{}[!11!0] = MUX(!2!2{}[!11!0], current_length!5{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.00000 * 5 = 0.00\n\t!3!2{}[!11!0] = (tmp_max_len!4{}[!11!0] & 1): B -> {} for 0.00000 * 5 = 0.00\n\t!4!2{}[!11!0] = (!3!2{}[!11!0] == 0): B -> {} for 0.00000 * 5 = 0.00\n\tmax_length!4{}[!11!0] = MUX(!4!2{}[!11!0], tmp_max_len!4{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.00000 * 5 = 0.00\n!9!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n",
                "X": "N/A",
                "Y": "N/A",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!7!0{N!0}[] == !8!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_length!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_length!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tcurrent_length!3{}[!10!0] = (current_length!2{}[!10!0] + 1): B -> {} for 0.00000 * 5 = 0.00\n\tcurrent_length!5{}[!10!0] = MUX(!1!2{}[!10!0], current_length!3{}[!10!0], current_length!4): B -> {} for 0.00000 * 5 = 0.00\n\tmax_length!2{}[!11!0] = \u03a6(!6!0{}[!11!0], max_length!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\t!2!2{}[!11!0] = (current_length!5{}[!11!0] > max_length!2{}[!11!0]): B -> {} for 0.00000 * 5 = 0.00\n\ttmp_max_len!4{}[!11!0] = MUX(!2!2{}[!11!0], current_length!5{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.00000 * 5 = 0.00\n\t!3!2{}[!11!0] = (tmp_max_len!4{}[!11!0] & 1): B -> {} for 0.00000 * 5 = 0.00\n\t!4!2{}[!11!0] = (!3!2{}[!11!0] == 0): B -> {} for 0.00000 * 5 = 0.00\n\tmax_length!4{}[!11!0] = MUX(!4!2{}[!11!0], tmp_max_len!4{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.00000 * 5 = 0.00\n!9!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.01117\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!7!0{N!0}[] == !8!0{N!0}[]): B -> {} for 0.00159 * 1 = 0.00\n\tcurrent_length!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_length!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tcurrent_length!3{}[!10!0] = (current_length!2{}[!10!0] + 1): B -> {} for 0.00079 * 5 = 0.00\n\tcurrent_length!5{}[!10!0] = MUX(!1!2{}[!10!0], current_length!3{}[!10!0], current_length!4): B -> {} for 0.00000 * 5 = 0.00\n\tmax_length!2{}[!11!0] = \u03a6(!6!0{}[!11!0], max_length!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\t!2!2{}[!11!0] = (current_length!5{}[!11!0] > max_length!2{}[!11!0]): B -> {} for 0.00056 * 5 = 0.00\n\ttmp_max_len!4{}[!11!0] = MUX(!2!2{}[!11!0], current_length!5{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.00000 * 5 = 0.00\n\t!3!2{}[!11!0] = (tmp_max_len!4{}[!11!0] & 1): B -> {} for 0.00028 * 5 = 0.00\n\t!4!2{}[!11!0] = (!3!2{}[!11!0] == 0): B -> {} for 0.00028 * 5 = 0.00\n\tmax_length!4{}[!11!0] = MUX(!4!2{}[!11!0], tmp_max_len!4{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.00000 * 5 = 0.00\n!9!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n",
                "X": "N/A",
                "Y": "N/A",
                "mixed": "Total cost:\t0.01117\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!7!0{N!0}[] == !8!0{N!0}[]): B -> {} for 0.00159 * 1 = 0.00\n\tcurrent_length!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_length!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tcurrent_length!3{}[!10!0] = (current_length!2{}[!10!0] + 1): B -> {} for 0.00079 * 5 = 0.00\n\tcurrent_length!5{}[!10!0] = MUX(!1!2{}[!10!0], current_length!3{}[!10!0], current_length!4): B -> {} for 0.00000 * 5 = 0.00\n\tmax_length!2{}[!11!0] = \u03a6(!6!0{}[!11!0], max_length!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\t!2!2{}[!11!0] = (current_length!5{}[!11!0] > max_length!2{}[!11!0]): B -> {} for 0.00056 * 5 = 0.00\n\ttmp_max_len!4{}[!11!0] = MUX(!2!2{}[!11!0], current_length!5{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.00000 * 5 = 0.00\n\t!3!2{}[!11!0] = (tmp_max_len!4{}[!11!0] & 1): B -> {} for 0.00028 * 5 = 0.00\n\t!4!2{}[!11!0] = (!3!2{}[!11!0] == 0): B -> {} for 0.00028 * 5 = 0.00\n\tmax_length!4{}[!11!0] = MUX(!4!2{}[!11!0], tmp_max_len!4{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.00000 * 5 = 0.00\n!9!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t0.00024\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!7!0{N!0}[] == !8!0{N!0}[]): B -> {} for 0.00002 * 1 = 0.00\n\tcurrent_length!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_length!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tcurrent_length!3{}[!10!0] = (current_length!2{}[!10!0] + 1): B -> {} for 0.00001 * 5 = 0.00\n\tcurrent_length!5{}[!10!0] = MUX(!1!2{}[!10!0], current_length!3{}[!10!0], current_length!4): B -> {} for 0.00000 * 5 = 0.00\n\tmax_length!2{}[!11!0] = \u03a6(!6!0{}[!11!0], max_length!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\t!2!2{}[!11!0] = (current_length!5{}[!11!0] > max_length!2{}[!11!0]): B -> {} for 0.00001 * 5 = 0.00\n\ttmp_max_len!4{}[!11!0] = MUX(!2!2{}[!11!0], current_length!5{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.00000 * 5 = 0.00\n\t!3!2{}[!11!0] = (tmp_max_len!4{}[!11!0] & 1): B -> {} for 0.00001 * 5 = 0.00\n\t!4!2{}[!11!0] = (!3!2{}[!11!0] == 0): B -> {} for 0.00001 * 5 = 0.00\n\tmax_length!4{}[!11!0] = MUX(!4!2{}[!11!0], tmp_max_len!4{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.00000 * 5 = 0.00\n!9!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n",
                "X": "N/A",
                "Y": "N/A",
                "mixed": "Total cost:\t0.00024\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!7!0{N!0}[] == !8!0{N!0}[]): B -> {} for 0.00002 * 1 = 0.00\n\tcurrent_length!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_length!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\tcurrent_length!3{}[!10!0] = (current_length!2{}[!10!0] + 1): B -> {} for 0.00001 * 5 = 0.00\n\tcurrent_length!5{}[!10!0] = MUX(!1!2{}[!10!0], current_length!3{}[!10!0], current_length!4): B -> {} for 0.00000 * 5 = 0.00\n\tmax_length!2{}[!11!0] = \u03a6(!6!0{}[!11!0], max_length!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 5 = 0.00\n\t!2!2{}[!11!0] = (current_length!5{}[!11!0] > max_length!2{}[!11!0]): B -> {} for 0.00001 * 5 = 0.00\n\ttmp_max_len!4{}[!11!0] = MUX(!2!2{}[!11!0], current_length!5{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.00000 * 5 = 0.00\n\t!3!2{}[!11!0] = (tmp_max_len!4{}[!11!0] & 1): B -> {} for 0.00001 * 5 = 0.00\n\t!4!2{}[!11!0] = (!3!2{}[!11!0] == 0): B -> {} for 0.00001 * 5 = 0.00\n\tmax_length!4{}[!11!0] = MUX(!4!2{}[!11!0], tmp_max_len!4{}[!11!0], max_length!2{}[!11!0]): B -> {} for 0.00000 * 5 = 0.00\n!9!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n"
            }
        }
    },
    "longest_odd_10": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t4244.80000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], False: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!11!0{N!0}[] == !12!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\ns2!3{N!0}[] = (!11!0{N!0}[] == !14!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\n\ts2!2{}[!16!0] = \u03a6(!10!0{}[!16!0], s2!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\ns1!2{N!0}[] = (s2!2{N!0}[] and !1!2{N!0}[]): B -> {} for 2.24000 * 1 = 2.24\n!2!2{N!0}[] = not s2!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_length!2{}[!17!0] = \u03a6(!8!0{}[!17!0], current_length!6{}[(!17!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!5{}[!17!0] = MUX(!2!2{}[!17!0], current_length!4, current_length!2{}[!17!0]): B -> {} for 2.00000 * 8 = 16.00\n\tcurrent_length!3{}[!17!0] = (current_length!2{}[!17!0] + 1): B -> {} for 318.00000 * 8 = 2544.00\n\tcurrent_length!6{}[!17!0] = MUX(s1!2{}[!17!0], current_length!3{}[!17!0], current_length!5{}[!17!0]): B -> {} for 2.00000 * 8 = 16.00\n!4!2{N!0}[] = (current_length!6{N!0}[] & 1): B -> {} for 2.24000 * 1 = 2.24\n!5!2{N!0}[] = (!4!2{N!0}[] == 1): B -> {} for 69.44000 * 1 = 69.44\n\tmax_length!2{}[!18!0] = \u03a6(!9!0{}[!18!0], max_length!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!6!2{}[!18!0] = (current_length!6{}[!18!0] > max_length!2{}[!18!0]): B -> {} for 178.00000 * 8 = 1424.00\n\t!7!2{}[!18!0] = (!5!2{}[!18!0] and !6!2{}[!18!0]): B -> {} for 2.00000 * 8 = 16.00\n\tmax_length!4{}[!18!0] = MUX(!7!2{}[!18!0], current_length!6{}[!18!0], max_length!2{}[!18!0]): B -> {} for 2.00000 * 8 = 16.00\n!15!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "Y": "Total cost:\t6582.24000\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y'], False: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!11!0{N!0}[] == !12!0{N!0}[]): Y -> {} for 173.60000 * 1 = 173.60\ns2!3{N!0}[] = (!11!0{N!0}[] == !14!0{N!0}[]): Y -> {} for 173.60000 * 1 = 173.60\n\ts2!2{}[!16!0] = \u03a6(!10!0{}[!16!0], s2!3{}[(!16!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\ns1!2{N!0}[] = (s2!2{N!0}[] and !1!2{N!0}[]): Y -> {} for 36.96000 * 1 = 36.96\n!2!2{N!0}[] = not s2!2{N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\n\tcurrent_length!2{}[!17!0] = \u03a6(!8!0{}[!17!0], current_length!6{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!5{}[!17!0] = MUX(!2!2{}[!17!0], current_length!4, current_length!2{}[!17!0]): Y -> {} for 129.00000 * 8 = 1032.00\n\tcurrent_length!3{}[!17!0] = (current_length!2{}[!17!0] + 1): Y -> {} for 155.00000 * 8 = 1240.00\n\tcurrent_length!6{}[!17!0] = MUX(s1!2{}[!17!0], current_length!3{}[!17!0], current_length!5{}[!17!0]): Y -> {} for 129.00000 * 8 = 1032.00\n!4!2{N!0}[] = (current_length!6{N!0}[] & 1): Y -> {} for 144.48000 * 1 = 144.48\n!5!2{N!0}[] = (!4!2{N!0}[] == 1): Y -> {} for 173.60000 * 1 = 173.60\n\tmax_length!2{}[!18!0] = \u03a6(!9!0{}[!18!0], max_length!4{}[(!18!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\t!6!2{}[!18!0] = (current_length!6{}[!18!0] > max_length!2{}[!18!0]): Y -> {} for 160.00000 * 8 = 1280.00\n\t!7!2{}[!18!0] = (!5!2{}[!18!0] and !6!2{}[!18!0]): Y -> {} for 33.00000 * 8 = 264.00\n\tmax_length!4{}[!18!0] = MUX(!7!2{}[!18!0], current_length!6{}[!18!0], max_length!2{}[!18!0]): Y -> {} for 129.00000 * 8 = 1032.00\n!15!0 = drop_dim(max_length!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['Y']}\n",
                "mixed": "Total cost:\t2796.80000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B', 'Y'], False: ['B'], 1: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!11!0{N!0}[] == !12!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\ns2!3{N!0}[] = (!11!0{N!0}[] == !14!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\n\ts2!2{}[!16!0] = \u03a6(!10!0{}[!16!0], s2!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\ns1!2{N!0}[] = (s2!2{N!0}[] and !1!2{N!0}[]): B -> {} for 2.24000 * 1 = 2.24\n!2!2{N!0}[] = not s2!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_length!2{}[!17!0] = \u03a6(!8!0{}[!17!0], current_length!6{}[(!17!0 - 1)]): Y -> ['B'] for 0.00000 * 8 = 0.00 (Y->B)\n\tcurrent_length!5{}[!17!0] = MUX(!2!2{}[!17!0], current_length!4, current_length!2{}[!17!0]): B -> {} for 2.00000 * 8 = 16.00\n\tcurrent_length!3{}[!17!0] = (current_length!2{}[!17!0] + 1): Y -> ['B'] for 155.00000 * 8 = 1240.00 (Y->B)\n\tcurrent_length!6{}[!17!0] = MUX(s1!2{}[!17!0], current_length!3{}[!17!0], current_length!5{}[!17!0]): B -> ['Y'] for 2.00000 * 8 = 16.00 (B->Y)\n!4!2{N!0}[] = (current_length!6{N!0}[] & 1): B -> {} for 2.24000 * 1 = 2.24\n!5!2{N!0}[] = (!4!2{N!0}[] == 1): B -> {} for 69.44000 * 1 = 69.44\n\tmax_length!2{}[!18!0] = \u03a6(!9!0{}[!18!0], max_length!4{}[(!18!0 - 1)]): Y -> ['B'] for 0.00000 * 8 = 0.00 (Y->B)\n\t!6!2{}[!18!0] = (current_length!6{}[!18!0] > max_length!2{}[!18!0]): Y -> ['B'] for 160.00000 * 8 = 1280.00 (Y->B)\n\t!7!2{}[!18!0] = (!5!2{}[!18!0] and !6!2{}[!18!0]): B -> {} for 2.00000 * 8 = 16.00\n\tmax_length!4{}[!18!0] = MUX(!7!2{}[!18!0], current_length!6{}[!18!0], max_length!2{}[!18!0]): B -> ['Y'] for 2.00000 * 8 = 16.00 (B->Y)\n!15!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B', 'Y']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.26050\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], False: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!11!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00733 * 1 = 0.01\ns2!3{N!0}[] = (!11!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00733 * 1 = 0.01\n\ts2!2{}[!16!0] = \u03a6(!10!0{}[!16!0], s2!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\ns1!2{N!0}[] = (s2!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00109 * 1 = 0.00\n!2!2{N!0}[] = not s2!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_length!2{}[!17!0] = \u03a6(!8!0{}[!17!0], current_length!6{}[(!17!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!5{}[!17!0] = MUX(!2!2{}[!17!0], current_length!4, current_length!2{}[!17!0]): B -> {} for 0.00016 * 8 = 0.00\n\tcurrent_length!3{}[!17!0] = (current_length!2{}[!17!0] + 1): B -> {} for 0.01826 * 8 = 0.15\n\tcurrent_length!6{}[!17!0] = MUX(s1!2{}[!17!0], current_length!3{}[!17!0], current_length!5{}[!17!0]): B -> {} for 0.00016 * 8 = 0.00\n!4!2{N!0}[] = (current_length!6{N!0}[] & 1): B -> {} for 0.00416 * 1 = 0.00\n!5!2{N!0}[] = (!4!2{N!0}[] == 1): B -> {} for 0.00733 * 1 = 0.01\n\tmax_length!2{}[!18!0] = \u03a6(!9!0{}[!18!0], max_length!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!6!2{}[!18!0] = (current_length!6{}[!18!0] > max_length!2{}[!18!0]): B -> {} for 0.01021 * 8 = 0.08\n\t!7!2{}[!18!0] = (!5!2{}[!18!0] and !6!2{}[!18!0]): B -> {} for 0.00021 * 8 = 0.00\n\tmax_length!4{}[!18!0] = MUX(!7!2{}[!18!0], current_length!6{}[!18!0], max_length!2{}[!18!0]): B -> {} for 0.00016 * 8 = 0.00\n!15!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "Y": "Total cost:\t0.87624\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y'], False: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!11!0{N!0}[] == !12!0{N!0}[]): Y -> {} for 0.06536 * 1 = 0.07\ns2!3{N!0}[] = (!11!0{N!0}[] == !14!0{N!0}[]): Y -> {} for 0.06536 * 1 = 0.07\n\ts2!2{}[!16!0] = \u03a6(!10!0{}[!16!0], s2!3{}[(!16!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\ns1!2{N!0}[] = (s2!2{N!0}[] and !1!2{N!0}[]): Y -> {} for 0.01648 * 1 = 0.02\n!2!2{N!0}[] = not s2!2{N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\n\tcurrent_length!2{}[!17!0] = \u03a6(!8!0{}[!17!0], current_length!6{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!5{}[!17!0] = MUX(!2!2{}[!17!0], current_length!4, current_length!2{}[!17!0]): Y -> {} for 0.01374 * 8 = 0.11\n\tcurrent_length!3{}[!17!0] = (current_length!2{}[!17!0] + 1): Y -> {} for 0.01479 * 8 = 0.12\n\tcurrent_length!6{}[!17!0] = MUX(s1!2{}[!17!0], current_length!3{}[!17!0], current_length!5{}[!17!0]): Y -> {} for 0.01374 * 8 = 0.11\n!4!2{N!0}[] = (current_length!6{N!0}[] & 1): Y -> {} for 0.06578 * 1 = 0.07\n!5!2{N!0}[] = (!4!2{N!0}[] == 1): Y -> {} for 0.06536 * 1 = 0.07\n\tmax_length!2{}[!18!0] = \u03a6(!9!0{}[!18!0], max_length!4{}[(!18!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\t!6!2{}[!18!0] = (current_length!6{}[!18!0] > max_length!2{}[!18!0]): Y -> {} for 0.01526 * 8 = 0.12\n\t!7!2{}[!18!0] = (!5!2{}[!18!0] and !6!2{}[!18!0]): Y -> {} for 0.00347 * 8 = 0.03\n\tmax_length!4{}[!18!0] = MUX(!7!2{}[!18!0], current_length!6{}[!18!0], max_length!2{}[!18!0]): Y -> {} for 0.01374 * 8 = 0.11\n!15!0 = drop_dim(max_length!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['Y']}\n",
                "mixed": "Total cost:\t0.23271\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B', 'Y'], False: ['B'], 1: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!11!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00733 * 1 = 0.01\ns2!3{N!0}[] = (!11!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00733 * 1 = 0.01\n\ts2!2{}[!16!0] = \u03a6(!10!0{}[!16!0], s2!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\ns1!2{N!0}[] = (s2!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00109 * 1 = 0.00\n!2!2{N!0}[] = not s2!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_length!2{}[!17!0] = \u03a6(!8!0{}[!17!0], current_length!6{}[(!17!0 - 1)]): Y -> ['B'] for 0.00000 * 8 = 0.00 (Y->B)\n\tcurrent_length!5{}[!17!0] = MUX(!2!2{}[!17!0], current_length!4, current_length!2{}[!17!0]): B -> {} for 0.00016 * 8 = 0.00\n\tcurrent_length!3{}[!17!0] = (current_length!2{}[!17!0] + 1): Y -> ['B'] for 0.01479 * 8 = 0.12 (Y->B)\n\tcurrent_length!6{}[!17!0] = MUX(s1!2{}[!17!0], current_length!3{}[!17!0], current_length!5{}[!17!0]): B -> ['Y'] for 0.00016 * 8 = 0.00 (B->Y)\n!4!2{N!0}[] = (current_length!6{N!0}[] & 1): B -> {} for 0.00416 * 1 = 0.00\n!5!2{N!0}[] = (!4!2{N!0}[] == 1): B -> {} for 0.00733 * 1 = 0.01\n\tmax_length!2{}[!18!0] = \u03a6(!9!0{}[!18!0], max_length!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!6!2{}[!18!0] = (current_length!6{}[!18!0] > max_length!2{}[!18!0]): B -> {} for 0.01021 * 8 = 0.08\n\t!7!2{}[!18!0] = (!5!2{}[!18!0] and !6!2{}[!18!0]): B -> {} for 0.00021 * 8 = 0.00\n\tmax_length!4{}[!18!0] = MUX(!7!2{}[!18!0], current_length!6{}[!18!0], max_length!2{}[!18!0]): B -> {} for 0.00016 * 8 = 0.00\n!15!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t2.87486\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], False: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!11!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.15911 * 1 = 0.16\ns2!3{N!0}[] = (!11!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.15911 * 1 = 0.16\n\ts2!2{}[!16!0] = \u03a6(!10!0{}[!16!0], s2!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\ns1!2{N!0}[] = (s2!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.03309 * 1 = 0.03\n!2!2{N!0}[] = not s2!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_length!2{}[!17!0] = \u03a6(!8!0{}[!17!0], current_length!6{}[(!17!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!5{}[!17!0] = MUX(!2!2{}[!17!0], current_length!4, current_length!2{}[!17!0]): B -> {} for 0.03568 * 8 = 0.29\n\tcurrent_length!3{}[!17!0] = (current_length!2{}[!17!0] + 1): B -> {} for 0.03411 * 8 = 0.27\n\tcurrent_length!6{}[!17!0] = MUX(s1!2{}[!17!0], current_length!3{}[!17!0], current_length!5{}[!17!0]): B -> {} for 0.03568 * 8 = 0.29\n!4!2{N!0}[] = (current_length!6{N!0}[] & 1): B -> {} for 0.03153 * 1 = 0.03\n!5!2{N!0}[] = (!4!2{N!0}[] == 1): B -> {} for 0.15911 * 1 = 0.16\n\tmax_length!2{}[!18!0] = \u03a6(!9!0{}[!18!0], max_length!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!6!2{}[!18!0] = (current_length!6{}[!18!0] > max_length!2{}[!18!0]): B -> {} for 0.11860 * 8 = 0.95\n\t!7!2{}[!18!0] = (!5!2{}[!18!0] and !6!2{}[!18!0]): B -> {} for 0.03185 * 8 = 0.25\n\tmax_length!4{}[!18!0] = MUX(!7!2{}[!18!0], current_length!6{}[!18!0], max_length!2{}[!18!0]): B -> {} for 0.03568 * 8 = 0.29\n!15!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "Y": "Total cost:\t0.65870\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y'], False: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!11!0{N!0}[] == !12!0{N!0}[]): Y -> {} for 0.01528 * 1 = 0.02\ns2!3{N!0}[] = (!11!0{N!0}[] == !14!0{N!0}[]): Y -> {} for 0.01528 * 1 = 0.02\n\ts2!2{}[!16!0] = \u03a6(!10!0{}[!16!0], s2!3{}[(!16!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\ns1!2{N!0}[] = (s2!2{N!0}[] and !1!2{N!0}[]): Y -> {} for 0.00200 * 1 = 0.00\n!2!2{N!0}[] = not s2!2{N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\n\tcurrent_length!2{}[!17!0] = \u03a6(!8!0{}[!17!0], current_length!6{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!5{}[!17!0] = MUX(!2!2{}[!17!0], current_length!4, current_length!2{}[!17!0]): Y -> {} for 0.00597 * 8 = 0.05\n\tcurrent_length!3{}[!17!0] = (current_length!2{}[!17!0] + 1): Y -> {} for 0.02351 * 8 = 0.19\n\tcurrent_length!6{}[!17!0] = MUX(s1!2{}[!17!0], current_length!3{}[!17!0], current_length!5{}[!17!0]): Y -> {} for 0.00597 * 8 = 0.05\n!4!2{N!0}[] = (current_length!6{N!0}[] & 1): Y -> {} for 0.01024 * 1 = 0.01\n!5!2{N!0}[] = (!4!2{N!0}[] == 1): Y -> {} for 0.01528 * 1 = 0.02\n\tmax_length!2{}[!18!0] = \u03a6(!9!0{}[!18!0], max_length!4{}[(!18!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\t!6!2{}[!18!0] = (current_length!6{}[!18!0] > max_length!2{}[!18!0]): Y -> {} for 0.03120 * 8 = 0.25\n\t!7!2{}[!18!0] = (!5!2{}[!18!0] and !6!2{}[!18!0]): Y -> {} for 0.00245 * 8 = 0.02\n\tmax_length!4{}[!18!0] = MUX(!7!2{}[!18!0], current_length!6{}[!18!0], max_length!2{}[!18!0]): Y -> {} for 0.00597 * 8 = 0.05\n!15!0 = drop_dim(max_length!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['Y']}\n",
                "mixed": "Total cost:\t0.65870\nInput vars:\t{Syms!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y'], False: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!11!0{N!0}[] == !12!0{N!0}[]): Y -> {} for 0.01528 * 1 = 0.02\ns2!3{N!0}[] = (!11!0{N!0}[] == !14!0{N!0}[]): Y -> {} for 0.01528 * 1 = 0.02\n\ts2!2{}[!16!0] = \u03a6(!10!0{}[!16!0], s2!3{}[(!16!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\ns1!2{N!0}[] = (s2!2{N!0}[] and !1!2{N!0}[]): Y -> {} for 0.00200 * 1 = 0.00\n!2!2{N!0}[] = not s2!2{N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\n\tcurrent_length!2{}[!17!0] = \u03a6(!8!0{}[!17!0], current_length!6{}[(!17!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!5{}[!17!0] = MUX(!2!2{}[!17!0], current_length!4, current_length!2{}[!17!0]): Y -> {} for 0.00597 * 8 = 0.05\n\tcurrent_length!3{}[!17!0] = (current_length!2{}[!17!0] + 1): Y -> {} for 0.02351 * 8 = 0.19\n\tcurrent_length!6{}[!17!0] = MUX(s1!2{}[!17!0], current_length!3{}[!17!0], current_length!5{}[!17!0]): Y -> {} for 0.00597 * 8 = 0.05\n!4!2{N!0}[] = (current_length!6{N!0}[] & 1): Y -> {} for 0.01024 * 1 = 0.01\n!5!2{N!0}[] = (!4!2{N!0}[] == 1): Y -> {} for 0.01528 * 1 = 0.02\n\tmax_length!2{}[!18!0] = \u03a6(!9!0{}[!18!0], max_length!4{}[(!18!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\t!6!2{}[!18!0] = (current_length!6{}[!18!0] > max_length!2{}[!18!0]): Y -> {} for 0.03120 * 8 = 0.25\n\t!7!2{}[!18!0] = (!5!2{}[!18!0] and !6!2{}[!18!0]): Y -> {} for 0.00245 * 8 = 0.02\n\tmax_length!4{}[!18!0] = MUX(!7!2{}[!18!0], current_length!6{}[!18!0], max_length!2{}[!18!0]): Y -> {} for 0.00597 * 8 = 0.05\n!15!0 = drop_dim(max_length!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t0.00000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], False: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!11!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\ns2!3{N!0}[] = (!11!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\ts2!2{}[!16!0] = \u03a6(!10!0{}[!16!0], s2!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\ns1!2{N!0}[] = (s2!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = not s2!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_length!2{}[!17!0] = \u03a6(!8!0{}[!17!0], current_length!6{}[(!17!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!5{}[!17!0] = MUX(!2!2{}[!17!0], current_length!4, current_length!2{}[!17!0]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!3{}[!17!0] = (current_length!2{}[!17!0] + 1): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!6{}[!17!0] = MUX(s1!2{}[!17!0], current_length!3{}[!17!0], current_length!5{}[!17!0]): B -> {} for 0.00000 * 8 = 0.00\n!4!2{N!0}[] = (current_length!6{N!0}[] & 1): B -> {} for 0.00000 * 1 = 0.00\n!5!2{N!0}[] = (!4!2{N!0}[] == 1): B -> {} for 0.00000 * 1 = 0.00\n\tmax_length!2{}[!18!0] = \u03a6(!9!0{}[!18!0], max_length!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!6!2{}[!18!0] = (current_length!6{}[!18!0] > max_length!2{}[!18!0]): B -> {} for 0.00000 * 8 = 0.00\n\t!7!2{}[!18!0] = (!5!2{}[!18!0] and !6!2{}[!18!0]): B -> {} for 0.00000 * 8 = 0.00\n\tmax_length!4{}[!18!0] = MUX(!7!2{}[!18!0], current_length!6{}[!18!0], max_length!2{}[!18!0]): B -> {} for 0.00000 * 8 = 0.00\n!15!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "X": "N/A",
                "Y": "N/A",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], False: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!11!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\ns2!3{N!0}[] = (!11!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\ts2!2{}[!16!0] = \u03a6(!10!0{}[!16!0], s2!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\ns1!2{N!0}[] = (s2!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = not s2!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_length!2{}[!17!0] = \u03a6(!8!0{}[!17!0], current_length!6{}[(!17!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!5{}[!17!0] = MUX(!2!2{}[!17!0], current_length!4, current_length!2{}[!17!0]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!3{}[!17!0] = (current_length!2{}[!17!0] + 1): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!6{}[!17!0] = MUX(s1!2{}[!17!0], current_length!3{}[!17!0], current_length!5{}[!17!0]): B -> {} for 0.00000 * 8 = 0.00\n!4!2{N!0}[] = (current_length!6{N!0}[] & 1): B -> {} for 0.00000 * 1 = 0.00\n!5!2{N!0}[] = (!4!2{N!0}[] == 1): B -> {} for 0.00000 * 1 = 0.00\n\tmax_length!2{}[!18!0] = \u03a6(!9!0{}[!18!0], max_length!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!6!2{}[!18!0] = (current_length!6{}[!18!0] > max_length!2{}[!18!0]): B -> {} for 0.00000 * 8 = 0.00\n\t!7!2{}[!18!0] = (!5!2{}[!18!0] and !6!2{}[!18!0]): B -> {} for 0.00000 * 8 = 0.00\n\tmax_length!4{}[!18!0] = MUX(!7!2{}[!18!0], current_length!6{}[!18!0], max_length!2{}[!18!0]): B -> {} for 0.00000 * 8 = 0.00\n!15!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.01947\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], False: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!11!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00211 * 1 = 0.00\ns2!3{N!0}[] = (!11!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00211 * 1 = 0.00\n\ts2!2{}[!16!0] = \u03a6(!10!0{}[!16!0], s2!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\ns1!2{N!0}[] = (s2!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00009 * 1 = 0.00\n!2!2{N!0}[] = not s2!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_length!2{}[!17!0] = \u03a6(!8!0{}[!17!0], current_length!6{}[(!17!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!5{}[!17!0] = MUX(!2!2{}[!17!0], current_length!4, current_length!2{}[!17!0]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!3{}[!17!0] = (current_length!2{}[!17!0] + 1): B -> {} for 0.00079 * 8 = 0.01\n\tcurrent_length!6{}[!17!0] = MUX(s1!2{}[!17!0], current_length!3{}[!17!0], current_length!5{}[!17!0]): B -> {} for 0.00000 * 8 = 0.00\n!4!2{N!0}[] = (current_length!6{N!0}[] & 1): B -> {} for 0.00220 * 1 = 0.00\n!5!2{N!0}[] = (!4!2{N!0}[] == 1): B -> {} for 0.00211 * 1 = 0.00\n\tmax_length!2{}[!18!0] = \u03a6(!9!0{}[!18!0], max_length!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!6!2{}[!18!0] = (current_length!6{}[!18!0] > max_length!2{}[!18!0]): B -> {} for 0.00056 * 8 = 0.00\n\t!7!2{}[!18!0] = (!5!2{}[!18!0] and !6!2{}[!18!0]): B -> {} for 0.00000 * 8 = 0.00\n\tmax_length!4{}[!18!0] = MUX(!7!2{}[!18!0], current_length!6{}[!18!0], max_length!2{}[!18!0]): B -> {} for 0.00000 * 8 = 0.00\n!15!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "X": "N/A",
                "Y": "N/A",
                "mixed": "Total cost:\t0.01947\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], False: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!11!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00211 * 1 = 0.00\ns2!3{N!0}[] = (!11!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00211 * 1 = 0.00\n\ts2!2{}[!16!0] = \u03a6(!10!0{}[!16!0], s2!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\ns1!2{N!0}[] = (s2!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00009 * 1 = 0.00\n!2!2{N!0}[] = not s2!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_length!2{}[!17!0] = \u03a6(!8!0{}[!17!0], current_length!6{}[(!17!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!5{}[!17!0] = MUX(!2!2{}[!17!0], current_length!4, current_length!2{}[!17!0]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!3{}[!17!0] = (current_length!2{}[!17!0] + 1): B -> {} for 0.00079 * 8 = 0.01\n\tcurrent_length!6{}[!17!0] = MUX(s1!2{}[!17!0], current_length!3{}[!17!0], current_length!5{}[!17!0]): B -> {} for 0.00000 * 8 = 0.00\n!4!2{N!0}[] = (current_length!6{N!0}[] & 1): B -> {} for 0.00220 * 1 = 0.00\n!5!2{N!0}[] = (!4!2{N!0}[] == 1): B -> {} for 0.00211 * 1 = 0.00\n\tmax_length!2{}[!18!0] = \u03a6(!9!0{}[!18!0], max_length!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!6!2{}[!18!0] = (current_length!6{}[!18!0] > max_length!2{}[!18!0]): B -> {} for 0.00056 * 8 = 0.00\n\t!7!2{}[!18!0] = (!5!2{}[!18!0] and !6!2{}[!18!0]): B -> {} for 0.00000 * 8 = 0.00\n\tmax_length!4{}[!18!0] = MUX(!7!2{}[!18!0], current_length!6{}[!18!0], max_length!2{}[!18!0]): B -> {} for 0.00000 * 8 = 0.00\n!15!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t0.00033\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], False: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!11!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\ns2!3{N!0}[] = (!11!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\n\ts2!2{}[!16!0] = \u03a6(!10!0{}[!16!0], s2!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\ns1!2{N!0}[] = (s2!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = not s2!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_length!2{}[!17!0] = \u03a6(!8!0{}[!17!0], current_length!6{}[(!17!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!5{}[!17!0] = MUX(!2!2{}[!17!0], current_length!4, current_length!2{}[!17!0]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!3{}[!17!0] = (current_length!2{}[!17!0] + 1): B -> {} for 0.00001 * 8 = 0.00\n\tcurrent_length!6{}[!17!0] = MUX(s1!2{}[!17!0], current_length!3{}[!17!0], current_length!5{}[!17!0]): B -> {} for 0.00000 * 8 = 0.00\n!4!2{N!0}[] = (current_length!6{N!0}[] & 1): B -> {} for 0.00005 * 1 = 0.00\n!5!2{N!0}[] = (!4!2{N!0}[] == 1): B -> {} for 0.00003 * 1 = 0.00\n\tmax_length!2{}[!18!0] = \u03a6(!9!0{}[!18!0], max_length!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!6!2{}[!18!0] = (current_length!6{}[!18!0] > max_length!2{}[!18!0]): B -> {} for 0.00001 * 8 = 0.00\n\t!7!2{}[!18!0] = (!5!2{}[!18!0] and !6!2{}[!18!0]): B -> {} for 0.00000 * 8 = 0.00\n\tmax_length!4{}[!18!0] = MUX(!7!2{}[!18!0], current_length!6{}[!18!0], max_length!2{}[!18!0]): B -> {} for 0.00000 * 8 = 0.00\n!15!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n",
                "X": "N/A",
                "Y": "N/A",
                "mixed": "Total cost:\t0.00033\nInput vars:\t{Syms!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], False: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\ncurrent_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\nmax_length!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ns2!1 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0}[] = lift(Syms!0[1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0}[] = lift(Syms!0[0], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_length!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{N!0}[] = lift(current_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(max_length!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0}[] = lift(s2!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!11!0{N!0}[] == !12!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\ns2!3{N!0}[] = (!11!0{N!0}[] == !14!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\n\ts2!2{}[!16!0] = \u03a6(!10!0{}[!16!0], s2!3{}[(!16!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\ns1!2{N!0}[] = (s2!2{N!0}[] and !1!2{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = not s2!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_length!2{}[!17!0] = \u03a6(!8!0{}[!17!0], current_length!6{}[(!17!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!5{}[!17!0] = MUX(!2!2{}[!17!0], current_length!4, current_length!2{}[!17!0]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_length!3{}[!17!0] = (current_length!2{}[!17!0] + 1): B -> {} for 0.00001 * 8 = 0.00\n\tcurrent_length!6{}[!17!0] = MUX(s1!2{}[!17!0], current_length!3{}[!17!0], current_length!5{}[!17!0]): B -> {} for 0.00000 * 8 = 0.00\n!4!2{N!0}[] = (current_length!6{N!0}[] & 1): B -> {} for 0.00005 * 1 = 0.00\n!5!2{N!0}[] = (!4!2{N!0}[] == 1): B -> {} for 0.00003 * 1 = 0.00\n\tmax_length!2{}[!18!0] = \u03a6(!9!0{}[!18!0], max_length!4{}[(!18!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!6!2{}[!18!0] = (current_length!6{}[!18!0] > max_length!2{}[!18!0]): B -> {} for 0.00001 * 8 = 0.00\n\t!7!2{}[!18!0] = (!5!2{}[!18!0] and !6!2{}[!18!0]): B -> {} for 0.00000 * 8 = 0.00\n\tmax_length!4{}[!18!0] = MUX(!7!2{}[!18!0], current_length!6{}[!18!0], max_length!2{}[!18!0]): B -> {} for 0.00000 * 8 = 0.00\n!15!0 = drop_dim(max_length!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !15!0\nOutput vars:\t{!15!0: ['B']}\n"
            }
        }
    },
    "matrix_multiply": {
        "MOTION": {
            "commRounds": {
                "A": "Total cost:\t2.24640\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 2.24640 * 1 = 2.25\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n",
                "B": "Total cost:\t5945.87520\nInput vars:\t{B!0: ['B'], A!0: ['B'], C!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): B -> {} for 2511.47520 * 1 = 2511.48\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['B'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): B -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): B -> {} for 381.60000 * 9 = 3434.40\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): B -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['B'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['B']}\n",
                "Y": "Total cost:\t7250.68800\nInput vars:\t{B!0: ['Y'], A!0: ['Y'], C!0: ['Y']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): Y -> {} for 5576.68800 * 1 = 5576.69\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): Y -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['Y'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['Y'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): Y -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): Y -> {} for 186.00000 * 9 = 1674.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): Y -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['Y'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['Y']}\n",
                "mixed": "Total cost:\t2.24640\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 2.24640 * 1 = 2.25\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t0.02254\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 0.02254 * 1 = 0.02\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n",
                "B": "Total cost:\t1.01267\nInput vars:\t{B!0: ['B'], A!0: ['B'], C!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): B -> {} for 0.75366 * 1 = 0.75\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['B'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): B -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): B -> {} for 0.02878 * 9 = 0.26\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): B -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['B'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['B']}\n",
                "Y": "Total cost:\t8.81249\nInput vars:\t{B!0: ['Y'], A!0: ['Y'], C!0: ['Y']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): Y -> {} for 8.47428 * 1 = 8.47\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): Y -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['Y'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['Y'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): Y -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): Y -> {} for 0.03758 * 9 = 0.34\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): Y -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['Y'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['Y']}\n",
                "mixed": "Total cost:\t0.02254\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 0.02254 * 1 = 0.02\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n"
            },
            "time": {
                "A": "Total cost:\t0.00345\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 0.00345 * 1 = 0.00\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n",
                "B": "Total cost:\t0.74527\nInput vars:\t{B!0: ['B'], A!0: ['B'], C!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): B -> {} for 0.35996 * 1 = 0.36\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['B'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): B -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): B -> {} for 0.04281 * 9 = 0.39\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): B -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['B'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['B']}\n",
                "Y": "Total cost:\t1.34674\nInput vars:\t{B!0: ['Y'], A!0: ['Y'], C!0: ['Y']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): Y -> {} for 1.06789 * 1 = 1.07\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): Y -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['Y'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['Y'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): Y -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): Y -> {} for 0.03098 * 9 = 0.28\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): Y -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['Y'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['Y']}\n",
                "mixed": "Total cost:\t0.00345\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 0.00345 * 1 = 0.00\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t0.00000\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n",
                "B": "Total cost:\t3.19680\nInput vars:\t{B!0: ['B'], A!0: ['B'], C!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): B -> {} for 3.19680 * 1 = 3.20\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['B'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): B -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): B -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): B -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['B'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['B']}\n",
                "X": "Total cost:\t0.00000\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n",
                "Y": "Total cost:\t0.00000\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t0.11174\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 0.11174 * 1 = 0.11\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n",
                "B": "Total cost:\t0.23000\nInput vars:\t{B!0: ['B'], A!0: ['B'], C!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): B -> {} for 0.20004 * 1 = 0.20\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['B'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): B -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): B -> {} for 0.00333 * 9 = 0.03\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): B -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['B'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['B']}\n",
                "X": "Total cost:\t0.11174\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 0.11174 * 1 = 0.11\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n",
                "Y": "Total cost:\t0.11174\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 0.11174 * 1 = 0.11\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n",
                "mixed": "Total cost:\t0.11174\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 0.11174 * 1 = 0.11\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n"
            },
            "time": {
                "A": "Total cost:\t0.00167\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 0.00166 * 1 = 0.00\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n",
                "B": "Total cost:\t0.00365\nInput vars:\t{B!0: ['B'], A!0: ['B'], C!0: ['B']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): B -> {} for 0.00297 * 1 = 0.00\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['B'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['B'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): B -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): B -> {} for 0.00008 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): B -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['B'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['B']}\n",
                "X": "Total cost:\t0.00168\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 0.00168 * 1 = 0.00\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n",
                "Y": "Total cost:\t0.00168\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 0.00168 * 1 = 0.00\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n",
                "mixed": "Total cost:\t0.00167\nInput vars:\t{B!0: ['A'], A!0: ['A'], C!0: ['A']}\nConstants:\t{}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!3!0{M!0, N!0}[] = lift(C!0, (_:M!0, _:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{M!0, N!0, K!0}[] = lift(A!0[((i!1 * K!0) + k!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!8!0{M!0, N!0, K!0}[] = lift(B!0[((k!1 * N!0) + j!1)], (i!1:M!0, j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!4{M!0, N!0, K!0}[] = (!7!0{M!0, N!0, K!0}[] * !8!0{M!0, N!0, K!0}[]): A -> {} for 0.00166 * 1 = 0.00\n\tC!1{N!0}[!10!0] = \u03a6(!3!0{M!0, N!0}[], !5!0{N!0}[(!10!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\t!4!0{N!0}[!10!0] = lift(C!1{N!0}[!10!0], (j!1:N!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t!6!0{N!0, K!0}[!10!0] = lift(!4!0{N!0}[!10!0], (j!1:N!0, k!1:K!0)): _ -> ['A'] for 0.00000 * 3 = 0.00\n\t\tC!3{N!0}[!10!0, !9!0] = \u03a6(!6!0{N!0}[!10!0, !9!0], C!4{N!0}[!10!0, (!9!0 - 1)]): A -> {} for 0.00000 * 9 = 0.00\n\t\t!2!4{N!0}[!10!0, !9!0] = (C!3{N!0}[!10!0, !9!0] + !1!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t\tC!4{N!0}[!10!0, !9!0] = VectorizedUpdate(C!3{N!0}[!10!0, !9!0], [!10!0, J!1, !9!0], !2!4{N!0}[!10!0, !9!0]): A -> {} for 0.00000 * 9 = 0.00\n\t!5!0{N!0}[!10!0] = drop_dim(C!4{N!0, K!0}[!10!0]): _ -> ['A'] for 0.00000 * 3 = 0.00\nreturn C!1\nOutput vars:\t{C!1: ['A']}\n"
            }
        }
    },
    "max_dist_between_syms": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t4069.44000\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): B -> {} for 318.00000 * 8 = 2544.00\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): B -> {} for 2.00000 * 8 = 16.00\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): B -> {} for 178.00000 * 8 = 1424.00\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): B -> {} for 2.00000 * 8 = 16.00\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['B']}\n",
                "Y": "Total cost:\t4757.60000\nInput vars:\t{Sym!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_dist!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): Y -> {} for 173.60000 * 1 = 173.60\n!2!2{N!0}[] = not !1!2{N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): Y -> {} for 155.00000 * 8 = 1240.00\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): Y -> {} for 129.00000 * 8 = 1032.00\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): Y -> {} for 160.00000 * 8 = 1280.00\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): Y -> {} for 129.00000 * 8 = 1032.00\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['Y']}\n",
                "mixed": "Total cost:\t2621.44000\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B', 'Y'], 1: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_dist!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): Y -> ['B'] for 155.00000 * 8 = 1240.00 (Y->B)\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): B -> ['Y'] for 2.00000 * 8 = 16.00 (B->Y)\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): Y -> ['B'] for 0.00000 * 8 = 0.00 (Y->B)\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): Y -> ['B'] for 160.00000 * 8 = 1280.00 (Y->B)\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): B -> ['Y'] for 2.00000 * 8 = 16.00 (B->Y)\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['B', 'Y']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.23764\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.00733 * 1 = 0.01\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): B -> {} for 0.01826 * 8 = 0.15\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): B -> {} for 0.00016 * 8 = 0.00\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): B -> {} for 0.01021 * 8 = 0.08\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): B -> {} for 0.00016 * 8 = 0.00\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['B']}\n",
                "Y": "Total cost:\t0.52557\nInput vars:\t{Sym!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_dist!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): Y -> {} for 0.06536 * 1 = 0.07\n!2!2{N!0}[] = not !1!2{N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): Y -> {} for 0.01479 * 8 = 0.12\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): Y -> {} for 0.01374 * 8 = 0.11\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): Y -> {} for 0.01526 * 8 = 0.12\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): Y -> {} for 0.01374 * 8 = 0.11\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['Y']}\n",
                "mixed": "Total cost:\t0.20985\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B', 'Y'], 1: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.00733 * 1 = 0.01\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): Y -> ['B'] for 0.01479 * 8 = 0.12 (Y->B)\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): B -> ['Y'] for 0.00016 * 8 = 0.00 (B->Y)\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): B -> {} for 0.01021 * 8 = 0.08\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): B -> {} for 0.00016 * 8 = 0.00\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t1.95173\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.15911 * 1 = 0.16\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): B -> {} for 0.03411 * 8 = 0.27\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): B -> {} for 0.03568 * 8 = 0.29\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): B -> {} for 0.11860 * 8 = 0.95\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): B -> {} for 0.03568 * 8 = 0.29\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['B']}\n",
                "Y": "Total cost:\t0.54854\nInput vars:\t{Sym!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_dist!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): Y -> {} for 0.01528 * 1 = 0.02\n!2!2{N!0}[] = not !1!2{N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): Y -> {} for 0.02351 * 8 = 0.19\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): Y -> {} for 0.00597 * 8 = 0.05\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): Y -> {} for 0.03120 * 8 = 0.25\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): Y -> {} for 0.00597 * 8 = 0.05\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['Y']}\n",
                "mixed": "Total cost:\t0.54854\nInput vars:\t{Sym!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y'], 1: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_dist!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): Y -> {} for 0.01528 * 1 = 0.02\n!2!2{N!0}[] = not !1!2{N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): Y -> {} for 0.02351 * 8 = 0.19\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): Y -> {} for 0.00597 * 8 = 0.05\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): Y -> {} for 0.03120 * 8 = 0.25\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): Y -> {} for 0.00597 * 8 = 0.05\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t25.12000\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 9.12000 * 1 = 9.12\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): A -> {} for 0.00000 * 8 = 0.00\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): A -> {} for 2.00000 * 8 = 16.00\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['A']}\n",
                "B": "Total cost:\t0.00000\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): B -> {} for 0.00000 * 8 = 0.00\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): B -> {} for 0.00000 * 8 = 0.00\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['B']}\n",
                "X": "Total cost:\t12.32000\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 4.32000 * 1 = 4.32\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): A -> {} for 0.00000 * 8 = 0.00\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): A -> {} for 1.00000 * 8 = 8.00\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['A']}\n",
                "Y": "Total cost:\t1.12000\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nmax_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 1.12000 * 1 = 1.12\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): A -> {} for 0.00000 * 8 = 0.00\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): B -> {} for 0.00000 * 8 = 0.00\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): B -> {} for 0.00000 * 8 = 0.00\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['B']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t4.66710\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 1.61450 * 1 = 1.61\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): A -> {} for 0.00310 * 8 = 0.02\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): A -> {} for 0.37537 * 8 = 3.00\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): A -> {} for 0.00310 * 8 = 0.02\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['A']}\n",
                "B": "Total cost:\t0.01295\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.00211 * 1 = 0.00\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): B -> {} for 0.00079 * 8 = 0.01\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): B -> {} for 0.00056 * 8 = 0.00\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): B -> {} for 0.00000 * 8 = 0.00\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['B']}\n",
                "X": "Total cost:\t0.09098\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 0.01830 * 1 = 0.02\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): A -> {} for 0.00310 * 8 = 0.02\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): A -> {} for 0.00288 * 8 = 0.02\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): A -> {} for 0.00310 * 8 = 0.02\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['A']}\n",
                "Y": "Total cost:\t0.06869\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nmax_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 0.01073 * 1 = 0.01\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): A -> {} for 0.00310 * 8 = 0.02\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): A -> {} for 0.00104 * 8 = 0.01\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): A -> {} for 0.00310 * 8 = 0.02\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['A']}\n",
                "mixed": "Total cost:\t0.01295\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.00211 * 1 = 0.00\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): B -> {} for 0.00079 * 8 = 0.01\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): B -> {} for 0.00056 * 8 = 0.00\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): B -> {} for 0.00000 * 8 = 0.00\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t0.05425\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 0.01699 * 1 = 0.02\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): A -> {} for 0.00005 * 8 = 0.00\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): A -> {} for 0.00455 * 8 = 0.04\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): A -> {} for 0.00005 * 8 = 0.00\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['A']}\n",
                "B": "Total cost:\t0.00020\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): B -> {} for 0.00001 * 8 = 0.00\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): B -> {} for 0.00001 * 8 = 0.00\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): B -> {} for 0.00000 * 8 = 0.00\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['B']}\n",
                "X": "Total cost:\t0.00403\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 0.00162 * 1 = 0.00\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): A -> {} for 0.00004 * 8 = 0.00\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): A -> {} for 0.00023 * 8 = 0.00\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): A -> {} for 0.00004 * 8 = 0.00\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['A']}\n",
                "Y": "Total cost:\t0.00119\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A'], 1: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nmax_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 0.00032 * 1 = 0.00\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): A -> {} for 0.00005 * 8 = 0.00\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): A -> {} for 0.00001 * 8 = 0.00\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): A -> {} for 0.00005 * 8 = 0.00\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['A']}\n",
                "mixed": "Total cost:\t0.00020\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B'], 1: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_dist!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_dist!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_dist!2{}[!9!0] = \u03a6(!5!0{}[!9!0], current_dist!5{}[(!9!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_dist!3{}[!9!0] = (current_dist!2{}[!9!0] + 1): B -> {} for 0.00001 * 8 = 0.00\n\tcurrent_dist!5{}[!9!0] = MUX(!2!2{}[!9!0], current_dist!3{}[!9!0], current_dist!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_dist!2{}[!10!0] = \u03a6(!4!0{}[!10!0], max_dist!4{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!10!0] = (current_dist!5{}[!10!0] > max_dist!2{}[!10!0]): B -> {} for 0.00001 * 8 = 0.00\n\tmax_dist!4{}[!10!0] = MUX(!3!2{}[!10!0], current_dist!5{}[!10!0], max_dist!2{}[!10!0]): B -> {} for 0.00000 * 8 = 0.00\n!8!0 = drop_dim(max_dist!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !8!0\nOutput vars:\t{!8!0: ['B']}\n"
            }
        }
    },
    "max_sum_between_syms": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t4069.44000\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): B -> {} for 318.00000 * 8 = 2544.00\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): B -> {} for 2.00000 * 8 = 16.00\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): B -> {} for 178.00000 * 8 = 1424.00\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): B -> {} for 2.00000 * 8 = 16.00\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n",
                "Y": "Total cost:\t4757.60000\nInput vars:\t{Sym!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_sum!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): Y -> {} for 173.60000 * 1 = 173.60\n!2!2{N!0}[] = not !1!2{N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): Y -> {} for 155.00000 * 8 = 1240.00\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): Y -> {} for 129.00000 * 8 = 1032.00\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): Y -> {} for 160.00000 * 8 = 1280.00\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): Y -> {} for 129.00000 * 8 = 1032.00\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['Y']}\n",
                "mixed": "Total cost:\t2621.44000\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B', 'Y']}\nConstants:\t{0: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_sum!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 69.44000 * 1 = 69.44\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): Y -> ['B'] for 155.00000 * 8 = 1240.00 (Y->B)\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): B -> ['Y'] for 2.00000 * 8 = 16.00 (B->Y)\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): Y -> ['B'] for 0.00000 * 8 = 0.00 (Y->B)\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): Y -> ['B'] for 160.00000 * 8 = 1280.00 (Y->B)\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): B -> ['Y'] for 2.00000 * 8 = 16.00 (B->Y)\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B', 'Y']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.23764\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.00733 * 1 = 0.01\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): B -> {} for 0.01826 * 8 = 0.15\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): B -> {} for 0.00016 * 8 = 0.00\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): B -> {} for 0.01021 * 8 = 0.08\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): B -> {} for 0.00016 * 8 = 0.00\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n",
                "Y": "Total cost:\t0.52557\nInput vars:\t{Sym!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_sum!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): Y -> {} for 0.06536 * 1 = 0.07\n!2!2{N!0}[] = not !1!2{N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): Y -> {} for 0.01479 * 8 = 0.12\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): Y -> {} for 0.01374 * 8 = 0.11\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): Y -> {} for 0.01526 * 8 = 0.12\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): Y -> {} for 0.01374 * 8 = 0.11\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['Y']}\n",
                "mixed": "Total cost:\t0.20985\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B', 'Y']}\nConstants:\t{0: ['B', 'Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.00733 * 1 = 0.01\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): Y -> ['B'] for 0.01479 * 8 = 0.12 (Y->B)\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): B -> ['Y'] for 0.00016 * 8 = 0.00 (B->Y)\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): B -> {} for 0.01021 * 8 = 0.08\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): B -> {} for 0.00016 * 8 = 0.00\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t1.95173\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.15911 * 1 = 0.16\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): B -> {} for 0.03411 * 8 = 0.27\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): B -> {} for 0.03568 * 8 = 0.29\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): B -> {} for 0.11860 * 8 = 0.95\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): B -> {} for 0.03568 * 8 = 0.29\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n",
                "Y": "Total cost:\t0.54854\nInput vars:\t{Sym!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_sum!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): Y -> {} for 0.01528 * 1 = 0.02\n!2!2{N!0}[] = not !1!2{N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): Y -> {} for 0.02351 * 8 = 0.19\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): Y -> {} for 0.00597 * 8 = 0.05\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): Y -> {} for 0.03120 * 8 = 0.25\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): Y -> {} for 0.00597 * 8 = 0.05\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['Y']}\n",
                "mixed": "Total cost:\t0.54854\nInput vars:\t{Sym!0: ['Y'], Seq!0: ['Y']}\nConstants:\t{0: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_sum!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): Y -> {} for 0.01528 * 1 = 0.02\n!2!2{N!0}[] = not !1!2{N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): Y -> {} for 0.02351 * 8 = 0.19\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): Y -> {} for 0.00597 * 8 = 0.05\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): Y -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): Y -> {} for 0.03120 * 8 = 0.25\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): Y -> {} for 0.00597 * 8 = 0.05\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t25.12000\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 9.12000 * 1 = 9.12\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): A -> {} for 0.00000 * 8 = 0.00\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): A -> {} for 2.00000 * 8 = 16.00\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['A']}\n",
                "B": "Total cost:\t0.00000\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): B -> {} for 0.00000 * 8 = 0.00\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): B -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n",
                "X": "Total cost:\t12.32000\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 4.32000 * 1 = 4.32\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): A -> {} for 0.00000 * 8 = 0.00\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): A -> {} for 1.00000 * 8 = 8.00\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['A']}\n",
                "Y": "Total cost:\t1.12000\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nmax_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 1.12000 * 1 = 1.12\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): A -> {} for 0.00000 * 8 = 0.00\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): A -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): B -> {} for 0.00000 * 8 = 0.00\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): B -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t4.66710\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 1.61450 * 1 = 1.61\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): A -> {} for 0.00310 * 8 = 0.02\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): A -> {} for 0.37537 * 8 = 3.00\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): A -> {} for 0.00310 * 8 = 0.02\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['A']}\n",
                "B": "Total cost:\t0.01295\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.00211 * 1 = 0.00\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): B -> {} for 0.00079 * 8 = 0.01\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): B -> {} for 0.00056 * 8 = 0.00\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): B -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n",
                "X": "Total cost:\t0.09098\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 0.01830 * 1 = 0.02\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): A -> {} for 0.00310 * 8 = 0.02\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): A -> {} for 0.00288 * 8 = 0.02\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): A -> {} for 0.00310 * 8 = 0.02\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['A']}\n",
                "Y": "Total cost:\t0.06869\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nmax_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 0.01073 * 1 = 0.01\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): A -> {} for 0.00310 * 8 = 0.02\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): A -> {} for 0.00104 * 8 = 0.01\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): A -> {} for 0.00310 * 8 = 0.02\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['A']}\n",
                "mixed": "Total cost:\t0.01295\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.00211 * 1 = 0.00\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): B -> {} for 0.00079 * 8 = 0.01\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): B -> {} for 0.00056 * 8 = 0.00\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): B -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t0.05425\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 0.01699 * 1 = 0.02\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): A -> {} for 0.00005 * 8 = 0.00\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): A -> {} for 0.00455 * 8 = 0.04\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): A -> {} for 0.00005 * 8 = 0.00\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['A']}\n",
                "B": "Total cost:\t0.00020\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\nmax_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): B -> {} for 0.00001 * 8 = 0.00\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): B -> {} for 0.00001 * 8 = 0.00\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): B -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n",
                "X": "Total cost:\t0.00403\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 0.00162 * 1 = 0.00\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): A -> {} for 0.00004 * 8 = 0.00\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): A -> {} for 0.00023 * 8 = 0.00\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): A -> {} for 0.00004 * 8 = 0.00\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['A']}\n",
                "Y": "Total cost:\t0.00119\nInput vars:\t{Sym!0: ['A'], Seq!0: ['A']}\nConstants:\t{0: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\nmax_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): A -> {} for 0.00032 * 1 = 0.00\n!2!2{N!0}[] = not !1!2{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): A -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): A -> {} for 0.00005 * 8 = 0.00\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): A -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): A -> {} for 0.00001 * 8 = 0.00\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): A -> {} for 0.00005 * 8 = 0.00\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['A']}\n",
                "mixed": "Total cost:\t0.00020\nInput vars:\t{Sym!0: ['B'], Seq!0: ['B']}\nConstants:\t{0: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\nmax_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!1 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{N!0}[] = lift(Seq!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!7!0{N!0}[] = lift(Sym!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\ncurrent_sum!4 = 0: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{N!0}[] = lift(max_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{N!0}[] = lift(current_sum!1, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!2{N!0}[] = (!6!0{N!0}[] == !7!0{N!0}[]): B -> {} for 0.00003 * 1 = 0.00\n!2!2{N!0}[] = not !1!2{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\n\tcurrent_sum!2{}[!10!0] = \u03a6(!5!0{}[!10!0], current_sum!5{}[(!10!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\tcurrent_sum!3{}[!10!0] = (current_sum!2{}[!10!0] + !6!0{}[!10!0]): B -> {} for 0.00001 * 8 = 0.00\n\tcurrent_sum!5{}[!10!0] = MUX(!2!2{}[!10!0], current_sum!3{}[!10!0], current_sum!4): B -> {} for 0.00000 * 8 = 0.00\n\tmax_sum!2{}[!11!0] = \u03a6(!4!0{}[!11!0], max_sum!4{}[(!11!0 - 1)]): B -> {} for 0.00000 * 8 = 0.00\n\t!3!2{}[!11!0] = (current_sum!5{}[!11!0] > max_sum!2{}[!11!0]): B -> {} for 0.00001 * 8 = 0.00\n\tmax_sum!4{}[!11!0] = MUX(!3!2{}[!11!0], current_sum!5{}[!11!0], max_sum!2{}[!11!0]): B -> {} for 0.00000 * 8 = 0.00\n!9!0 = drop_dim(max_sum!4{N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nreturn !9!0\nOutput vars:\t{!9!0: ['B']}\n"
            }
        }
    },
    "minimal_points": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t398.64000\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B'], result_Y!0: ['B'], result_X!0: ['B']}\nConstants:\t{False: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): B -> {} for 192.24000 * 1 = 192.24\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): B -> {} for 192.24000 * 1 = 192.24\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): B -> {} for 2.16000 * 1 = 2.16\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): B -> {} for 2.40000 * 3 = 7.20\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): B -> {} for 2.40000 * 1 = 2.40\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): B -> {} for 2.40000 * 1 = 2.40\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n",
                "Y": "Total cost:\t809.64000\nInput vars:\t{Y_coords!0: ['Y'], X_coords!0: ['Y'], result_Y!0: ['Y'], result_X!0: ['Y']}\nConstants:\t{False: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): Y -> {} for 172.80000 * 1 = 172.80\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): Y -> {} for 172.80000 * 1 = 172.80\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): Y -> {} for 35.64000 * 1 = 35.64\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): Y -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): Y -> {} for 39.60000 * 3 = 118.80\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): Y -> {} for 154.80000 * 1 = 154.80\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): Y -> {} for 154.80000 * 1 = 154.80\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['Y'], result_X!2: ['Y']}\n",
                "mixed": "Total cost:\t359.76000\nInput vars:\t{Y_coords!0: ['B', 'Y'], X_coords!0: ['B', 'Y'], result_Y!0: ['B'], result_X!0: ['B']}\nConstants:\t{False: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): Y -> ['B'] for 172.80000 * 1 = 172.80 (Y->B)\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): Y -> ['B'] for 172.80000 * 1 = 172.80 (Y->B)\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): B -> {} for 2.16000 * 1 = 2.16\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): B -> {} for 2.40000 * 3 = 7.20\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): B -> {} for 2.40000 * 1 = 2.40\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): B -> {} for 2.40000 * 1 = 2.40\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.04689\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B'], result_Y!0: ['B'], result_X!0: ['B']}\nConstants:\t{False: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): B -> {} for 0.02192 * 1 = 0.02\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): B -> {} for 0.02192 * 1 = 0.02\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): B -> {} for 0.00123 * 1 = 0.00\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): B -> {} for 0.00051 * 3 = 0.00\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): B -> {} for 0.00015 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): B -> {} for 0.00015 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n",
                "Y": "Total cost:\t0.24894\nInput vars:\t{Y_coords!0: ['Y'], X_coords!0: ['Y'], result_Y!0: ['Y'], result_X!0: ['Y']}\nConstants:\t{False: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): Y -> {} for 0.07448 * 1 = 0.07\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): Y -> {} for 0.07448 * 1 = 0.07\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): Y -> {} for 0.01825 * 1 = 0.02\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): Y -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): Y -> {} for 0.00747 * 3 = 0.02\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): Y -> {} for 0.02965 * 1 = 0.03\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): Y -> {} for 0.02965 * 1 = 0.03\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['Y'], result_X!2: ['Y']}\n",
                "mixed": "Total cost:\t0.04689\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B'], result_Y!0: ['B'], result_X!0: ['B']}\nConstants:\t{False: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): B -> {} for 0.02192 * 1 = 0.02\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): B -> {} for 0.02192 * 1 = 0.02\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): B -> {} for 0.00123 * 1 = 0.00\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): B -> {} for 0.00051 * 3 = 0.00\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): B -> {} for 0.00015 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): B -> {} for 0.00015 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t0.53412\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B'], result_Y!0: ['B'], result_X!0: ['B']}\nConstants:\t{False: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): B -> {} for 0.14536 * 1 = 0.15\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): B -> {} for 0.14536 * 1 = 0.15\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): B -> {} for 0.03065 * 1 = 0.03\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): B -> {} for 0.04036 * 3 = 0.12\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): B -> {} for 0.04584 * 1 = 0.05\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): B -> {} for 0.04584 * 1 = 0.05\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n",
                "Y": "Total cost:\t0.10212\nInput vars:\t{Y_coords!0: ['Y'], X_coords!0: ['Y'], result_Y!0: ['Y'], result_X!0: ['Y']}\nConstants:\t{False: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): Y -> {} for 0.04083 * 1 = 0.04\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): Y -> {} for 0.04083 * 1 = 0.04\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): Y -> {} for 0.00233 * 1 = 0.00\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): Y -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): Y -> {} for 0.00211 * 3 = 0.01\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): Y -> {} for 0.00591 * 1 = 0.01\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): Y -> {} for 0.00591 * 1 = 0.01\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['Y'], result_X!2: ['Y']}\n",
                "mixed": "Total cost:\t0.09735\nInput vars:\t{Y_coords!0: ['A', 'Y'], X_coords!0: ['A', 'Y'], result_Y!0: ['Y'], result_X!0: ['Y']}\nConstants:\t{False: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A', 'Y'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A', 'Y'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): A -> ['Y'] for 0.03844 * 1 = 0.04 (A->Y)\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): A -> ['Y'] for 0.03844 * 1 = 0.04 (A->Y)\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): Y -> {} for 0.00233 * 1 = 0.00\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): Y -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): Y -> {} for 0.00211 * 3 = 0.01\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: Y -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): Y -> {} for 0.00591 * 1 = 0.01\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): Y -> {} for 0.00591 * 1 = 0.01\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): Y -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['Y'], result_X!2: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t28.80000\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A'], result_Y!0: ['A'], result_X!0: ['A']}\nConstants:\t{False: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): A -> {} for 14.40000 * 1 = 14.40\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): A -> {} for 14.40000 * 1 = 14.40\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): A -> {} for 0.00000 * 3 = 0.00\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "B": "Total cost:\t0.00000\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B'], result_Y!0: ['B'], result_X!0: ['B']}\nConstants:\t{False: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): B -> {} for 0.00000 * 3 = 0.00\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n",
                "X": "Total cost:\t9.36000\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A'], result_Y!0: ['A'], result_X!0: ['A']}\nConstants:\t{False: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): A -> {} for 4.68000 * 1 = 4.68\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): A -> {} for 4.68000 * 1 = 4.68\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): A -> {} for 0.00000 * 3 = 0.00\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "Y": "Total cost:\t2.16000\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A'], result_Y!0: ['A'], result_X!0: ['A']}\nConstants:\t{False: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): A -> {} for 1.08000 * 1 = 1.08\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): A -> {} for 1.08000 * 1 = 1.08\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): A -> {} for 0.00000 * 3 = 0.00\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B'], result_Y!0: ['B'], result_X!0: ['B']}\nConstants:\t{False: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): B -> {} for 0.00000 * 3 = 0.00\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t6.83095\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A'], result_Y!0: ['A'], result_X!0: ['A']}\nConstants:\t{False: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): A -> {} for 3.37823 * 1 = 3.38\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): A -> {} for 3.37823 * 1 = 3.38\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): A -> {} for 0.02794 * 1 = 0.03\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): A -> {} for 0.00931 * 3 = 0.03\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "B": "Total cost:\t0.00977\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B'], result_Y!0: ['B'], result_X!0: ['B']}\nConstants:\t{False: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): B -> {} for 0.00482 * 1 = 0.00\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): B -> {} for 0.00482 * 1 = 0.00\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): B -> {} for 0.00010 * 1 = 0.00\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): B -> {} for 0.00001 * 3 = 0.00\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n",
                "X": "Total cost:\t0.12394\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A'], result_Y!0: ['A'], result_X!0: ['A']}\nConstants:\t{False: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): A -> {} for 0.02472 * 1 = 0.02\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): A -> {} for 0.02472 * 1 = 0.02\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): A -> {} for 0.02794 * 1 = 0.03\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): A -> {} for 0.00931 * 3 = 0.03\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "Y": "Total cost:\t0.10855\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A'], result_Y!0: ['A'], result_X!0: ['A']}\nConstants:\t{False: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): A -> {} for 0.01703 * 1 = 0.02\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): A -> {} for 0.01703 * 1 = 0.02\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): A -> {} for 0.02794 * 1 = 0.03\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): A -> {} for 0.00931 * 3 = 0.03\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): A -> {} for 0.00931 * 1 = 0.01\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "mixed": "Total cost:\t0.00977\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B'], result_Y!0: ['B'], result_X!0: ['B']}\nConstants:\t{False: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): B -> {} for 0.00482 * 1 = 0.00\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): B -> {} for 0.00482 * 1 = 0.00\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): B -> {} for 0.00010 * 1 = 0.00\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): B -> {} for 0.00001 * 3 = 0.00\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t0.06664\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A'], result_Y!0: ['A'], result_X!0: ['A']}\nConstants:\t{False: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): A -> {} for 0.03279 * 1 = 0.03\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): A -> {} for 0.03279 * 1 = 0.03\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): A -> {} for 0.00040 * 1 = 0.00\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): A -> {} for 0.00013 * 3 = 0.00\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): A -> {} for 0.00014 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): A -> {} for 0.00014 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "B": "Total cost:\t0.00024\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B'], result_Y!0: ['B'], result_X!0: ['B']}\nConstants:\t{False: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): B -> {} for 0.00010 * 1 = 0.00\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): B -> {} for 0.00010 * 1 = 0.00\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): B -> {} for 0.00001 * 3 = 0.00\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n",
                "X": "Total cost:\t0.00471\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A'], result_Y!0: ['A'], result_X!0: ['A']}\nConstants:\t{False: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): A -> {} for 0.00183 * 1 = 0.00\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): A -> {} for 0.00183 * 1 = 0.00\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): A -> {} for 0.00041 * 1 = 0.00\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): A -> {} for 0.00013 * 3 = 0.00\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): A -> {} for 0.00013 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): A -> {} for 0.00013 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "Y": "Total cost:\t0.00197\nInput vars:\t{Y_coords!0: ['A'], X_coords!0: ['A'], result_Y!0: ['A'], result_X!0: ['A']}\nConstants:\t{False: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): A -> {} for 0.00042 * 1 = 0.00\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): A -> {} for 0.00042 * 1 = 0.00\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): A -> {} for 0.00042 * 1 = 0.00\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): A -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): A -> {} for 0.00014 * 3 = 0.00\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: A -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): A -> {} for 0.00015 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): A -> {} for 0.00015 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): A -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['A'], result_X!2: ['A']}\n",
                "mixed": "Total cost:\t0.00024\nInput vars:\t{Y_coords!0: ['B'], X_coords!0: ['B'], result_Y!0: ['B'], result_X!0: ['B']}\nConstants:\t{False: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!8!0{N!0}[] = lift(result_X!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!9!0{N!0}[] = lift(result_Y!0, (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!16!0{N!0}[] = lift(X_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!17!0{N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nbx!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!11!0{N!0, N!0}[] = lift(X_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!12!0{N!0, N!0}[] = lift(X_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!13!0{N!0, N!0}[] = lift(Y_coords!0[j!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!14!0{N!0, N!0}[] = lift(Y_coords!0[i!1], (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!10!0{N!0, N!0}[] = lift(bx!2, (i!1:N!0, j!1:N!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!3{N!0, N!0}[] = (!11!0{N!0, N!0}[] < !12!0{N!0, N!0}[]): B -> {} for 0.00010 * 1 = 0.00\n!4!3{N!0, N!0}[] = (!13!0{N!0, N!0}[] < !14!0{N!0, N!0}[]): B -> {} for 0.00010 * 1 = 0.00\n!5!3{N!0, N!0}[] = (!3!3{N!0, N!0}[] and !4!3{N!0, N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tbx!3{N!0}[!18!0] = \u03a6(!10!0{N!0}[!18!0], bx!4{N!0}[(!18!0 - 1)]): B -> {} for 0.00000 * 3 = 0.00\n\tbx!4{N!0}[!18!0] = (bx!3{N!0}[!18!0] or !5!3{N!0}[!18!0]): B -> {} for 0.00001 * 3 = 0.00\n!15!0{N!0}[] = drop_dim(bx!4{N!0, N!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!2{N!0}[] = not !15!0{N!0}[]: B -> {} for 0.00000 * 1 = 0.00\nval_X!4{N!0}[] = MUX(!6!2{N!0}[], !16!0{N!0}[], !8!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nval_Y!4{N!0}[] = MUX(!6!2{N!0}[], !17!0{N!0}[], !9!0{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_X!2{N!0}[] = VectorizedUpdate(!8!0{N!0}[], [I!1], val_X!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult_Y!2{N!0}[] = VectorizedUpdate(!9!0{N!0}[], [I!1], val_Y!4{N!0}[]): B -> {} for 0.00000 * 1 = 0.00\n!7!1 = (result_X!2, result_Y!2)\nreturn !7!1\nOutput vars:\t{result_Y!2: ['B'], result_X!2: ['B']}\n"
            }
        }
    },
    "mnist_relu": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t180.00000\nInput vars:\t{input!0: ['B']}\nConstants:\t{1: ['B']}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): B -> {} for 178.00000 * 1 = 178.00\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): B -> {} for 2.00000 * 1 = 2.00\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n",
                "Y": "Total cost:\t289.00000\nInput vars:\t{input!0: ['Y']}\nConstants:\t{1: ['Y']}\nPlaintext vars:\t{OUTPUT_res!0: ['Y']}\nFlags:\t\t{}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): Y -> {} for 160.00000 * 1 = 160.00\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): Y -> {} for 129.00000 * 1 = 129.00\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['Y']}\n",
                "mixed": "Total cost:\t162.00000\nInput vars:\t{input!0: ['B', 'Y']}\nConstants:\t{1: ['B', 'Y']}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): Y -> ['B'] for 160.00000 * 1 = 160.00 (Y->B)\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): B -> {} for 2.00000 * 1 = 2.00\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.29268\nInput vars:\t{input!0: ['B']}\nConstants:\t{1: ['B']}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): B -> {} for 0.28874 * 1 = 0.29\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): B -> {} for 0.00395 * 1 = 0.00\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n",
                "Y": "Total cost:\t2.95132\nInput vars:\t{input!0: ['Y']}\nConstants:\t{1: ['Y']}\nPlaintext vars:\t{OUTPUT_res!0: ['Y']}\nFlags:\t\t{}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): Y -> {} for 1.47642 * 1 = 1.48\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): Y -> {} for 1.47489 * 1 = 1.47\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['Y']}\n",
                "mixed": "Total cost:\t0.29268\nInput vars:\t{input!0: ['B']}\nConstants:\t{1: ['B']}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): B -> {} for 0.28874 * 1 = 0.29\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): B -> {} for 0.00395 * 1 = 0.00\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t0.20134\nInput vars:\t{input!0: ['B']}\nConstants:\t{1: ['B']}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): B -> {} for 0.19607 * 1 = 0.20\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): B -> {} for 0.00527 * 1 = 0.01\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n",
                "Y": "Total cost:\t0.20866\nInput vars:\t{input!0: ['Y']}\nConstants:\t{1: ['Y']}\nPlaintext vars:\t{OUTPUT_res!0: ['Y']}\nFlags:\t\t{}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): Y -> {} for 0.11647 * 1 = 0.12\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): Y -> {} for 0.09220 * 1 = 0.09\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['Y']}\n",
                "mixed": "Total cost:\t0.12173\nInput vars:\t{input!0: ['B', 'Y']}\nConstants:\t{1: ['B', 'Y']}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['B', 'Y'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): Y -> ['B'] for 0.11647 * 1 = 0.12 (Y->B)\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): B -> {} for 0.00527 * 1 = 0.01\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t321.00000\nInput vars:\t{input!0: ['A']}\nConstants:\t{1: ['A']}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): A -> {} for 319.00000 * 1 = 319.00\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): A -> {} for 2.00000 * 1 = 2.00\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "B": "Total cost:\t2.00000\nInput vars:\t{input!0: ['B']}\nConstants:\t{1: ['B']}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): B -> {} for 2.00000 * 1 = 2.00\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n",
                "X": "Total cost:\t109.00000\nInput vars:\t{input!0: ['A']}\nConstants:\t{1: ['A']}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{X}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): A -> {} for 107.00000 * 1 = 107.00\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): A -> {} for 2.00000 * 1 = 2.00\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "Y": "Total cost:\t45.00000\nInput vars:\t{input!0: ['A']}\nConstants:\t{1: ['A']}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{Y}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): A -> {} for 43.00000 * 1 = 43.00\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): A -> {} for 2.00000 * 1 = 2.00\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "mixed": "Total cost:\t2.00000\nInput vars:\t{input!0: ['B']}\nConstants:\t{1: ['B']}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{X}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): B -> {} for 2.00000 * 1 = 2.00\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t75.69446\nInput vars:\t{input!0: ['A']}\nConstants:\t{1: ['A']}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): A -> {} for 75.07211 * 1 = 75.07\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): A -> {} for 0.62235 * 1 = 0.62\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "B": "Total cost:\t0.10706\nInput vars:\t{input!0: ['B']}\nConstants:\t{1: ['B']}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): B -> {} for 0.10706 * 1 = 0.11\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n",
                "X": "Total cost:\t1.17145\nInput vars:\t{input!0: ['A']}\nConstants:\t{1: ['A']}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{X}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): A -> {} for 0.54910 * 1 = 0.55\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): A -> {} for 0.62235 * 1 = 0.62\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "Y": "Total cost:\t1.02094\nInput vars:\t{input!0: ['A']}\nConstants:\t{1: ['A']}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{Y}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): A -> {} for 0.39859 * 1 = 0.40\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): A -> {} for 0.62235 * 1 = 0.62\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "mixed": "Total cost:\t0.10706\nInput vars:\t{input!0: ['B']}\nConstants:\t{1: ['B']}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{X}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): B -> {} for 0.10706 * 1 = 0.11\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t0.71547\nInput vars:\t{input!0: ['A']}\nConstants:\t{1: ['A']}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): A -> {} for 0.70875 * 1 = 0.71\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): A -> {} for 0.00672 * 1 = 0.01\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "B": "Total cost:\t0.00179\nInput vars:\t{input!0: ['B']}\nConstants:\t{1: ['B']}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): B -> {} for 0.00179 * 1 = 0.00\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n",
                "X": "Total cost:\t0.04614\nInput vars:\t{input!0: ['A']}\nConstants:\t{1: ['A']}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{X}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): A -> {} for 0.03946 * 1 = 0.04\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): A -> {} for 0.00669 * 1 = 0.01\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "Y": "Total cost:\t0.01517\nInput vars:\t{input!0: ['A']}\nConstants:\t{1: ['A']}\nPlaintext vars:\t{OUTPUT_res!0: ['A']}\nFlags:\t\t{Y}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): A -> {} for 0.00847 * 1 = 0.01\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): A -> {} for 0.00670 * 1 = 0.01\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['A']}\n",
                "mixed": "Total cost:\t0.00179\nInput vars:\t{input!0: ['B']}\nConstants:\t{1: ['B']}\nPlaintext vars:\t{OUTPUT_res!0: ['B']}\nFlags:\t\t{X}\n!2!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(OUTPUT_res!0, (_:len_outer!0, _:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(input!0[((i!1 * len_inner!0) + j!1)], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!3 = 1: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{LEN_OUTER!0, LEN_INNER!0}[] = lift(!2!0{LEN_OUTER!0, LEN_INNER!0}[], (i!1:len_outer!0, j!1:len_inner!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{LEN_OUTER!0, LEN_INNER!0}[] = (!4!0{LEN_OUTER!0, LEN_INNER!0}[] > val!3): B -> {} for 0.00179 * 1 = 0.00\nval!5{LEN_OUTER!0, LEN_INNER!0}[] = MUX(!1!3{LEN_OUTER!0, LEN_INNER!0}[], !4!0{LEN_OUTER!0, LEN_INNER!0}[], val!3): B -> {} for 0.00000 * 1 = 0.00\nOUTPUT_res!3{LEN_OUTER!0, LEN_INNER!0}[] = VectorizedUpdate(!3!0{LEN_OUTER!0, LEN_INNER!0}[], [I!1, J!1], val!5{LEN_OUTER!0, LEN_INNER!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn OUTPUT_res!3\nOutput vars:\t{OUTPUT_res!3: ['B']}\n"
            }
        }
    },
    "psi": {
        "MOTION": {
            "commRounds": {
                "A": "N/A",
                "B": "Total cost:\t85.44000\nInput vars:\t{B!0: ['B'], A!0: ['B'], result!0: ['B']}\nConstants:\t{False: ['B'], True: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): B -> {} for 69.44000 * 1 = 69.44\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): B -> {} for 2.00000 * 7 = 14.00\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): B -> {} for 2.00000 * 1 = 2.00\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['B']}\n",
                "Y": "Total cost:\t1205.60000\nInput vars:\t{B!0: ['Y'], A!0: ['Y'], result!0: ['Y']}\nConstants:\t{False: ['Y'], True: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): Y -> {} for 173.60000 * 1 = 173.60\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): Y -> {} for 129.00000 * 7 = 903.00\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): Y -> {} for 129.00000 * 1 = 129.00\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['Y']}\n",
                "mixed": "Total cost:\t85.44000\nInput vars:\t{B!0: ['B'], A!0: ['B'], result!0: ['B']}\nConstants:\t{False: ['B'], True: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): B -> {} for 69.44000 * 1 = 69.44\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): B -> {} for 2.00000 * 7 = 14.00\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): B -> {} for 2.00000 * 1 = 2.00\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['B']}\n"
            },
            "dataSent": {
                "A": "N/A",
                "B": "Total cost:\t0.02209\nInput vars:\t{B!0: ['B'], A!0: ['B'], result!0: ['B']}\nConstants:\t{False: ['B'], True: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): B -> {} for 0.02041 * 1 = 0.02\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): B -> {} for 0.00021 * 7 = 0.00\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): B -> {} for 0.00021 * 1 = 0.00\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['B']}\n",
                "Y": "Total cost:\t0.60145\nInput vars:\t{B!0: ['Y'], A!0: ['Y'], result!0: ['Y']}\nConstants:\t{False: ['Y'], True: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): Y -> {} for 0.25745 * 1 = 0.26\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): Y -> {} for 0.04300 * 7 = 0.30\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): Y -> {} for 0.04300 * 1 = 0.04\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['Y']}\n",
                "mixed": "Total cost:\t0.02209\nInput vars:\t{B!0: ['B'], A!0: ['B'], result!0: ['B']}\nConstants:\t{False: ['B'], True: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): B -> {} for 0.02041 * 1 = 0.02\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): B -> {} for 0.00021 * 7 = 0.00\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): B -> {} for 0.00021 * 1 = 0.00\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['B']}\n"
            },
            "time": {
                "A": "N/A",
                "B": "Total cost:\t0.39977\nInput vars:\t{B!0: ['B'], A!0: ['B'], result!0: ['B']}\nConstants:\t{False: ['B'], True: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): B -> {} for 0.15806 * 1 = 0.16\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): B -> {} for 0.03021 * 7 = 0.21\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): B -> {} for 0.03021 * 1 = 0.03\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['B']}\n",
                "Y": "Total cost:\t0.08021\nInput vars:\t{B!0: ['Y'], A!0: ['Y'], result!0: ['Y']}\nConstants:\t{False: ['Y'], True: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): Y -> {} for 0.02453 * 1 = 0.02\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): Y -> {} for 0.00696 * 7 = 0.05\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): Y -> {} for 0.00696 * 1 = 0.01\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['Y']}\n",
                "mixed": "Total cost:\t0.08021\nInput vars:\t{B!0: ['Y'], A!0: ['Y'], result!0: ['Y']}\nConstants:\t{False: ['Y'], True: ['Y']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['Y'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['Y'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): Y -> {} for 0.02453 * 1 = 0.02\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): Y -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): Y -> {} for 0.00696 * 7 = 0.05\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['Y'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): Y -> {} for 0.00696 * 1 = 0.01\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): Y -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['Y']}\n"
            }
        },
        "MP-SPDZ": {
            "commRounds": {
                "A": "Total cost:\t37.80000\nInput vars:\t{B!0: ['A'], A!0: ['A'], result!0: ['A']}\nConstants:\t{False: ['A'], True: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): A -> {} for 37.80000 * 1 = 37.80\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): A -> {} for 0.00000 * 7 = 0.00\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['A']}\n",
                "B": "Total cost:\t0.00000\nInput vars:\t{B!0: ['B'], A!0: ['B'], result!0: ['B']}\nConstants:\t{False: ['B'], True: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): B -> {} for 0.00000 * 7 = 0.00\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['B']}\n",
                "X": "Total cost:\t18.20000\nInput vars:\t{B!0: ['A'], A!0: ['A'], result!0: ['A']}\nConstants:\t{False: ['A'], True: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): A -> {} for 18.20000 * 1 = 18.20\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): A -> {} for 0.00000 * 7 = 0.00\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['A']}\n",
                "Y": "Total cost:\t1.12000\nInput vars:\t{B!0: ['A'], A!0: ['A'], result!0: ['A']}\nConstants:\t{False: ['A'], True: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): A -> {} for 1.12000 * 1 = 1.12\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): A -> {} for 0.00000 * 7 = 0.00\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): A -> {} for 0.00000 * 1 = 0.00\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['A']}\n",
                "mixed": "Total cost:\t0.00000\nInput vars:\t{B!0: ['B'], A!0: ['B'], result!0: ['B']}\nConstants:\t{False: ['B'], True: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): B -> {} for 0.00000 * 1 = 0.00\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): B -> {} for 0.00000 * 7 = 0.00\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['B']}\n"
            },
            "dataSent": {
                "A": "Total cost:\t7.11690\nInput vars:\t{B!0: ['A'], A!0: ['A'], result!0: ['A']}\nConstants:\t{False: ['A'], True: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): A -> {} for 6.99274 * 1 = 6.99\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): A -> {} for 0.01552 * 7 = 0.11\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): A -> {} for 0.01552 * 1 = 0.02\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['A']}\n",
                "B": "Total cost:\t0.00914\nInput vars:\t{B!0: ['B'], A!0: ['B'], result!0: ['B']}\nConstants:\t{False: ['B'], True: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): B -> {} for 0.00914 * 1 = 0.01\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): B -> {} for 0.00000 * 7 = 0.00\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['B']}\n",
                "X": "Total cost:\t0.20279\nInput vars:\t{B!0: ['A'], A!0: ['A'], result!0: ['A']}\nConstants:\t{False: ['A'], True: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): A -> {} for 0.07863 * 1 = 0.08\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): A -> {} for 0.01552 * 7 = 0.11\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): A -> {} for 0.01552 * 1 = 0.02\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['A']}\n",
                "Y": "Total cost:\t0.17434\nInput vars:\t{B!0: ['A'], A!0: ['A'], result!0: ['A']}\nConstants:\t{False: ['A'], True: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): A -> {} for 0.05018 * 1 = 0.05\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): A -> {} for 0.01552 * 7 = 0.11\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): A -> {} for 0.01552 * 1 = 0.02\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['A']}\n",
                "mixed": "Total cost:\t0.00914\nInput vars:\t{B!0: ['B'], A!0: ['B'], result!0: ['B']}\nConstants:\t{False: ['B'], True: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): B -> {} for 0.00914 * 1 = 0.01\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): B -> {} for 0.00000 * 7 = 0.00\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['B']}\n"
            },
            "time": {
                "A": "Total cost:\t0.07111\nInput vars:\t{B!0: ['A'], A!0: ['A'], result!0: ['A']}\nConstants:\t{False: ['A'], True: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): A -> {} for 0.06937 * 1 = 0.07\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): A -> {} for 0.00022 * 7 = 0.00\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): A -> {} for 0.00022 * 1 = 0.00\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['A']}\n",
                "B": "Total cost:\t0.00021\nInput vars:\t{B!0: ['B'], A!0: ['B'], result!0: ['B']}\nConstants:\t{False: ['B'], True: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): B -> {} for 0.00020 * 1 = 0.00\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): B -> {} for 0.00000 * 7 = 0.00\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['B']}\n",
                "X": "Total cost:\t0.00859\nInput vars:\t{B!0: ['A'], A!0: ['A'], result!0: ['A']}\nConstants:\t{False: ['A'], True: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): A -> {} for 0.00667 * 1 = 0.01\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): A -> {} for 0.00024 * 7 = 0.00\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): A -> {} for 0.00024 * 1 = 0.00\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['A']}\n",
                "Y": "Total cost:\t0.00315\nInput vars:\t{B!0: ['A'], A!0: ['A'], result!0: ['A']}\nConstants:\t{False: ['A'], True: ['A']}\nPlaintext vars:\t{}\nFlags:\t\t{Y}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['A'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['A'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['A'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): A -> {} for 0.00115 * 1 = 0.00\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): A -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): A -> {} for 0.00025 * 7 = 0.00\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['A'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): A -> {} for 0.00025 * 1 = 0.00\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): A -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['A']}\n",
                "mixed": "Total cost:\t0.00021\nInput vars:\t{B!0: ['B'], A!0: ['B'], result!0: ['B']}\nConstants:\t{False: ['B'], True: ['B']}\nPlaintext vars:\t{}\nFlags:\t\t{X}\n!2!0{D!0}[] = lift(result!0, (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!2 = False: _ -> ['B'] for 0.00000 * 1 = 0.00\n!4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\nflag!4 = True: _ -> ['B'] for 0.00000 * 1 = 0.00\n!3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0)): _ -> ['B'] for 0.00000 * 1 = 0.00\n!1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[]): B -> {} for 0.00020 * 1 = 0.00\n\tflag!3{D!0}[!8!0] = \u03a6(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)]): B -> {} for 0.00000 * 7 = 0.00\n\tflag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0]): B -> {} for 0.00000 * 7 = 0.00\n!7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[]): _ -> ['B'] for 0.00000 * 1 = 0.00\nval!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[]): B -> {} for 0.00000 * 1 = 0.00\nresult!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[]): B -> {} for 0.00000 * 1 = 0.00\nreturn result!2\nOutput vars:\t{result!2: ['B']}\n"
            }
        }
    }
}