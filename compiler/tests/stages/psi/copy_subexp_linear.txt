def psi(A!0: shared[list[int; ?]], D!0: plaintext[int], B!0: shared[list[int; ?]], R!0: plaintext[int], result!0: shared[list[int; ?]]) -> shared[list[int; ?]]:
    !2!0{D!0}[] = lift(result!0, (i!1:D!0))
    !6!0{D!0}[] = lift(A!0[i!1], (i!1:D!0))
    flag!2 = False
    !4!0{D!0, R!0}[] = lift(A!0[i!1], (i!1:D!0, j!1:R!0))
    !5!0{D!0, R!0}[] = lift(B!0[j!1], (i!1:D!0, j!1:R!0))
    flag!4 = True
    !3!0{D!0, R!0}[] = lift(flag!2, (i!1:D!0, j!1:R!0))
    !1!3{D!0, R!0}[] = (!4!0{D!0, R!0}[] == !5!0{D!0, R!0}[])
    for !8!0 in range(0, R!0): (monolithic)
        flag!3{D!0}[!8!0] = Î¦(!3!0{D!0}[!8!0], flag!5{D!0}[(!8!0 - 1)])
        flag!5{D!0}[!8!0] = MUX(!1!3{D!0}[!8!0], flag!4, flag!3{D!0}[!8!0])
    !7!0{D!0}[] = drop_dim(flag!5{D!0, R!0}[])
    val!4{D!0}[] = MUX(!7!0{D!0}[], !6!0{D!0}[], !2!0{D!0}[])
    result!2{D!0}[] = VectorizedUpdate(!2!0{D!0}[], [I!1], val!4{D!0}[])
    return result!2
